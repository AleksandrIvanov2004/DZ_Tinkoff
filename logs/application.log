2025-06-04T06:20:34.226Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T06:20:34.255Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T06:20:34.257Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T06:20:35.557Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T06:20:35.566Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T06:20:35.614Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T06:20:35.618Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T06:20:35.621Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T06:20:35.622Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 44 ms. Found 0 JDBC repository interfaces.
2025-06-04T06:20:35.642Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T06:20:35.645Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T06:20:35.808Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 153 ms. Found 3 JPA repository interfaces.
2025-06-04T06:20:35.835Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T06:20:35.838Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T06:20:35.858Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T06:20:35.859Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T06:20:35.862Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T06:20:35.863Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-06-04T06:20:36.816Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T06:20:36.839Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T06:20:36.841Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T06:20:36.976Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T06:20:36.978Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2609 ms
2025-06-04T06:20:37.173Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T06:20:37.471Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@58065f0c
2025-06-04T06:20:37.478Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T06:20:37.580Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T06:20:37.581Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T06:20:37.583Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T06:20:37.590Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T06:20:37.592Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T06:20:37.593Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T06:20:37.593Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T06:20:37.594Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T06:20:37.596Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T06:20:37.603Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T06:20:37.606Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T06:20:37.607Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T06:20:37.608Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T06:20:37.614Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T06:20:37.617Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T06:20:37.619Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T06:20:37.633Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T06:20:37.635Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T06:20:37.637Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T06:20:37.640Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T06:20:37.641Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T06:20:37.655Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T06:20:37.659Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T06:20:37.660Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T06:20:37.675Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T06:20:37.684Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T06:20:37.699Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T06:20:37.700Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T06:20:37.701Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T06:20:37.703Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T06:20:37.704Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T06:20:37.705Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T06:20:37.726Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.048s)
2025-06-04T06:20:37.732Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T06:20:37.746Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T06:20:37.759Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T06:20:37.765Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 48 of 64M
2025-06-04T06:20:37.880Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T06:20:37.984Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T06:20:38.041Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T06:20:38.488Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T06:20:39.889Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T06:20:39.968Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T06:20:40.256Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T06:20:41.885Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T06:20:42.010Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T06:20:42.076Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T06:20:42.135Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T06:20:42.187Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T06:20:42.259Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T06:20:42.452Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T06:20:42.782Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T06:20:42.832Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T06:20:42.912Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T06:20:43.144Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T06:20:43.148Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T06:20:43.149Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T06:20:43.149Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749018043146
2025-06-04T06:20:43.155Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T06:20:43.180Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 9.792 seconds (process running for 10.599)
2025-06-04T06:20:43.538Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T06:20:43.543Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T06:20:43.547Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T06:20:43.565Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-a9b5a7b1-71b9-4ad7-9266-835b92446cbc
2025-06-04T06:20:43.568Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T06:20:43.570Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=27, memberId='consumer-weather-stats-group-1-a9b5a7b1-71b9-4ad7-9266-835b92446cbc', protocol='range'}
2025-06-04T06:20:43.579Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 27: {consumer-weather-stats-group-1-a9b5a7b1-71b9-4ad7-9266-835b92446cbc=Assignment(partitions=[weather-requests-0])}
2025-06-04T06:20:43.593Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=27, memberId='consumer-weather-stats-group-1-a9b5a7b1-71b9-4ad7-9266-835b92446cbc', protocol='range'}
2025-06-04T06:20:43.595Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T06:20:43.601Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T06:20:43.611Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=98, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T06:20:43.614Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T06:21:03.556Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T06:21:03.558Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T06:21:03.560Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-a9b5a7b1-71b9-4ad7-9266-835b92446cbc sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T06:21:03.561Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T06:21:03.563Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T06:21:03.564Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T06:21:03.567Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T06:21:03.569Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T06:21:03.928Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T06:21:03.929Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T06:21:03.930Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T06:21:03.931Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T06:21:03.943Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T06:21:03.945Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T06:21:03.950Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T06:21:03.954Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T06:21:04.003Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T06:21:04.010Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T06:21:04.016Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T06:34:55.794Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T06:34:55.798Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T06:34:55.801Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T06:34:57.195Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T06:34:57.199Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T06:34:57.256Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T06:34:57.261Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T06:34:57.264Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T06:34:57.267Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 55 ms. Found 0 JDBC repository interfaces.
2025-06-04T06:34:57.290Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T06:34:57.294Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T06:34:57.491Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 185 ms. Found 3 JPA repository interfaces.
2025-06-04T06:34:57.525Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T06:34:57.529Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T06:34:57.553Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T06:34:57.556Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T06:34:57.557Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T06:34:57.558Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-06-04T06:34:58.583Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T06:34:58.608Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T06:34:58.611Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T06:34:58.745Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T06:34:58.748Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2868 ms
2025-06-04T06:34:58.957Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T06:34:59.279Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@28cb9120
2025-06-04T06:34:59.283Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T06:34:59.405Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T06:34:59.406Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T06:34:59.407Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T06:34:59.413Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T06:34:59.415Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T06:34:59.416Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T06:34:59.418Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T06:34:59.419Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T06:34:59.421Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T06:34:59.427Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T06:34:59.428Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T06:34:59.432Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T06:34:59.434Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T06:34:59.442Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T06:34:59.443Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T06:34:59.446Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T06:34:59.460Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T06:34:59.462Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T06:34:59.462Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T06:34:59.465Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T06:34:59.467Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T06:34:59.482Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T06:34:59.487Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T06:34:59.489Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T06:34:59.504Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T06:34:59.512Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T06:34:59.528Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T06:34:59.530Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T06:34:59.531Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T06:34:59.534Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T06:34:59.535Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T06:34:59.536Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T06:34:59.567Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.059s)
2025-06-04T06:34:59.572Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T06:34:59.586Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T06:34:59.593Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T06:34:59.599Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 51 of 64M
2025-06-04T06:34:59.726Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T06:34:59.857Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T06:34:59.922Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T06:35:00.446Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T06:35:01.859Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T06:35:01.924Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T06:35:02.234Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T06:35:03.990Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T06:35:04.114Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T06:35:04.189Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T06:35:04.253Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T06:35:04.299Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T06:35:04.364Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T06:35:04.611Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T06:35:04.983Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T06:35:05.042Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T06:35:05.141Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T06:35:05.383Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T06:35:05.388Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T06:35:05.389Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T06:35:05.390Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749018905385
2025-06-04T06:35:05.396Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T06:35:05.420Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 10.563 seconds (process running for 11.469)
2025-06-04T06:35:05.801Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T06:35:05.806Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T06:35:05.811Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T06:35:05.835Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-5587c878-26f6-48f7-bea1-0abf2e16abaa
2025-06-04T06:35:05.837Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T06:35:05.840Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=29, memberId='consumer-weather-stats-group-1-5587c878-26f6-48f7-bea1-0abf2e16abaa', protocol='range'}
2025-06-04T06:35:05.849Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 29: {consumer-weather-stats-group-1-5587c878-26f6-48f7-bea1-0abf2e16abaa=Assignment(partitions=[weather-requests-0])}
2025-06-04T06:35:05.857Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=29, memberId='consumer-weather-stats-group-1-5587c878-26f6-48f7-bea1-0abf2e16abaa', protocol='range'}
2025-06-04T06:35:05.858Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T06:35:05.863Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T06:35:05.874Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=98, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T06:35:05.877Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T06:44:05.961Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node -1 disconnected.
2025-06-04T08:33:10.832Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T08:33:10.839Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T08:33:10.841Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-5587c878-26f6-48f7-bea1-0abf2e16abaa sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T08:33:10.843Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T08:33:10.845Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T08:33:10.846Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T08:33:10.850Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T08:33:10.851Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T08:33:11.317Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T08:33:11.318Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T08:33:11.320Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T08:33:11.321Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T08:33:11.329Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T08:33:11.331Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T08:33:11.342Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T08:33:11.347Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T08:33:11.420Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T08:33:11.427Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T08:33:11.435Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T10:22:43.700Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T10:22:43.704Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T10:22:43.706Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T10:22:44.876Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T10:22:44.880Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T10:22:44.933Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T10:22:44.936Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T10:22:44.940Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T10:22:44.942Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 51 ms. Found 0 JDBC repository interfaces.
2025-06-04T10:22:44.960Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T10:22:44.963Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T10:22:45.160Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 187 ms. Found 3 JPA repository interfaces.
2025-06-04T10:22:45.193Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T10:22:45.197Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T10:22:45.219Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T10:22:45.221Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T10:22:45.223Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T10:22:45.224Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-06-04T10:22:46.201Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T10:22:46.225Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T10:22:46.227Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T10:22:46.353Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T10:22:46.355Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2585 ms
2025-06-04T10:22:46.556Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T10:22:46.871Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@bcb09a6
2025-06-04T10:22:46.875Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T10:22:46.984Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T10:22:46.985Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T10:22:46.987Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T10:22:46.993Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T10:22:46.994Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T10:22:46.995Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T10:22:46.997Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T10:22:46.997Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T10:22:46.999Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T10:22:47.005Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T10:22:47.007Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T10:22:47.008Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T10:22:47.009Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T10:22:47.017Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T10:22:47.018Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T10:22:47.021Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T10:22:47.033Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T10:22:47.034Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T10:22:47.035Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T10:22:47.038Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T10:22:47.039Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T10:22:47.047Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T10:22:47.050Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T10:22:47.051Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T10:22:47.064Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T10:22:47.070Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T10:22:47.086Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T10:22:47.087Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T10:22:47.089Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T10:22:47.091Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T10:22:47.092Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T10:22:47.093Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T10:22:47.114Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.048s)
2025-06-04T10:22:47.118Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T10:22:47.132Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T10:22:47.139Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T10:22:47.144Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 49 of 64M
2025-06-04T10:22:47.257Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T10:22:47.375Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T10:22:47.432Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T10:22:47.885Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T10:22:49.180Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T10:22:49.248Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T10:22:49.533Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T10:22:51.241Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T10:22:51.380Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T10:22:51.453Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T10:22:51.515Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T10:22:51.572Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T10:22:51.646Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T10:22:51.849Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T10:22:52.214Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T10:22:52.266Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T10:22:52.340Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T10:22:52.555Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T10:22:52.561Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T10:22:52.565Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T10:22:52.567Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749032572557
2025-06-04T10:22:52.595Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T10:22:52.620Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 9.743 seconds (process running for 10.585)
2025-06-04T10:22:52.989Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T10:22:52.995Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T10:22:52.999Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T10:22:53.016Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-60bf81f2-16b4-4bc1-b8ac-ae99efcad41c
2025-06-04T10:22:53.017Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T10:22:53.019Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=31, memberId='consumer-weather-stats-group-1-60bf81f2-16b4-4bc1-b8ac-ae99efcad41c', protocol='range'}
2025-06-04T10:22:53.028Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 31: {consumer-weather-stats-group-1-60bf81f2-16b4-4bc1-b8ac-ae99efcad41c=Assignment(partitions=[weather-requests-0])}
2025-06-04T10:22:53.045Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=31, memberId='consumer-weather-stats-group-1-60bf81f2-16b4-4bc1-b8ac-ae99efcad41c', protocol='range'}
2025-06-04T10:22:53.048Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T10:22:53.053Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T10:22:53.064Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=98, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T10:22:53.067Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T10:26:25.381Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T10:26:25.383Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T10:26:25.385Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T10:26:25.386Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T10:26:25.387Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T10:26:25.390Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@447543ee
2025-06-04T10:26:25.391Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@102fd71d
2025-06-04T10:26:25.392Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T10:26:25.393Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2025-06-04T10:26:25.410Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D1%8B%D0%B7%D1%80%D0%B0%D0%BD%D1%8C", parameters={}
2025-06-04T10:26:25.428Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T10:26:25.487Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Сызрань
2025-06-04T10:26:25.489Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T10:00
2025-06-04T10:26:26.648Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=48.474611&lon=53.155669&date=2025-06-04T10:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T10:26:26.672Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T10:26:28.124Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T10:26:28.128Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T10:26:28.206Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T10:26:28.214Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T10:26:28.239Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T10:26:28.269Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T10:26:28.272Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T10:26:28.274Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T10:26:28.275Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749032788272
2025-06-04T10:26:28.280Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T10:26:28.284Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 9001 with epoch 0
2025-06-04T10:26:28.410Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Сызрань на 2025-06-04T10:00 успешно сформирован
2025-06-04T10:26:28.450Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T10:26:28.470Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=99, cityId=10, temperature=27.746, date=2025-06-04 10:00:00.0, windSpeed=3.944]]
2025-06-04T10:26:28.474Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1070038497 wrapping org.postgresql.jdbc.PgConnection@2a6b4e4c] read-only
2025-06-04T10:26:28.492Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T10:26:28.501Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1070038497 wrapping org.postgresql.jdbc.PgConnection@2a6b4e4c]
2025-06-04T10:26:28.512Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T10:26:28.532Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:50) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T10:31:14.302Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T10:31:14.305Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T10:31:14.308Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-60bf81f2-16b4-4bc1-b8ac-ae99efcad41c sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T10:31:14.310Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T10:31:14.310Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T10:31:14.312Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T10:31:14.315Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T10:31:14.316Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T10:31:14.756Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T10:31:14.757Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T10:31:14.758Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T10:31:14.759Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T10:31:14.776Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T10:31:14.778Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T10:31:14.783Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T10:31:14.786Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T10:31:14.824Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T10:31:14.830Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T10:31:14.832Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T10:31:14.833Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T10:31:14.834Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T10:31:14.836Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T10:31:14.851Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T10:31:14.856Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T10:31:14.862Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T10:33:24.721Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T10:33:24.725Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T10:33:24.727Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T10:33:25.923Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T10:33:25.931Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T10:33:25.988Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T10:33:25.992Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T10:33:25.995Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T10:33:25.997Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 54 ms. Found 0 JDBC repository interfaces.
2025-06-04T10:33:26.016Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T10:33:26.019Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T10:33:26.192Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 160 ms. Found 3 JPA repository interfaces.
2025-06-04T10:33:26.225Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T10:33:26.230Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T10:33:26.250Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T10:33:26.252Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T10:33:26.253Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T10:33:26.255Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-06-04T10:33:27.157Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T10:33:27.181Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T10:33:27.183Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T10:33:27.321Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T10:33:27.323Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2533 ms
2025-06-04T10:33:27.528Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T10:33:27.829Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@375b5b7f
2025-06-04T10:33:27.832Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T10:33:27.947Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T10:33:27.950Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T10:33:27.952Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T10:33:27.958Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T10:33:27.960Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T10:33:27.961Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T10:33:27.962Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T10:33:27.963Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T10:33:27.965Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T10:33:27.970Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T10:33:27.971Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T10:33:27.973Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T10:33:27.974Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T10:33:27.980Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T10:33:27.981Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T10:33:27.984Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T10:33:27.996Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T10:33:27.997Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T10:33:27.998Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T10:33:28.000Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T10:33:28.002Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T10:33:28.011Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T10:33:28.014Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T10:33:28.016Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T10:33:28.035Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T10:33:28.041Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T10:33:28.055Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T10:33:28.057Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T10:33:28.061Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T10:33:28.064Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T10:33:28.066Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T10:33:28.068Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T10:33:28.092Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.054s)
2025-06-04T10:33:28.096Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T10:33:28.111Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T10:33:28.116Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T10:33:28.122Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 47 of 64M
2025-06-04T10:33:28.235Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T10:33:28.331Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T10:33:28.383Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T10:33:28.836Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T10:33:30.268Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T10:33:30.346Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T10:33:30.625Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T10:33:32.238Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T10:33:32.353Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T10:33:32.427Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T10:33:32.481Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T10:33:32.526Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T10:33:32.584Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T10:33:32.801Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T10:33:33.171Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T10:33:33.231Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T10:33:33.296Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T10:33:33.513Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T10:33:33.518Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T10:33:33.519Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T10:33:33.520Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749033213516
2025-06-04T10:33:33.526Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T10:33:33.554Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 9.668 seconds (process running for 10.432)
2025-06-04T10:33:33.927Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T10:33:33.932Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T10:33:33.935Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T10:33:33.951Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-7c04aa1a-2608-4ad0-ab18-9e4be86a5aff
2025-06-04T10:33:33.952Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T10:33:33.956Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=33, memberId='consumer-weather-stats-group-1-7c04aa1a-2608-4ad0-ab18-9e4be86a5aff', protocol='range'}
2025-06-04T10:33:33.966Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 33: {consumer-weather-stats-group-1-7c04aa1a-2608-4ad0-ab18-9e4be86a5aff=Assignment(partitions=[weather-requests-0])}
2025-06-04T10:33:33.973Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=33, memberId='consumer-weather-stats-group-1-7c04aa1a-2608-4ad0-ab18-9e4be86a5aff', protocol='range'}
2025-06-04T10:33:33.975Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T10:33:33.980Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T10:33:33.992Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=99, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T10:33:33.995Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T10:35:24.169Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T10:35:24.183Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T10:35:24.186Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T10:35:24.187Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T10:35:24.189Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T10:35:24.192Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2de96eba
2025-06-04T10:35:24.194Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@fe38c0e
2025-06-04T10:35:24.195Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T10:35:24.197Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-06-04T10:35:24.213Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D1%8B%D0%B7%D1%80%D0%B0%D0%BD%D1%8C", parameters={}
2025-06-04T10:35:24.234Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T10:35:24.289Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Сызрань
2025-06-04T10:35:24.291Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T10:00
2025-06-04T10:35:25.337Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=48.474611&lon=53.155669&date=2025-06-04T10:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T10:35:25.372Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T10:35:26.841Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T10:35:26.846Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T10:35:26.914Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T10:35:26.918Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T10:35:26.940Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T10:35:26.967Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T10:35:26.969Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T10:35:26.971Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T10:35:26.972Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749033326969
2025-06-04T10:35:26.976Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T10:35:26.982Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 10001 with epoch 0
2025-06-04T10:35:27.085Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Сызрань на 2025-06-04T10:00 успешно сформирован
2025-06-04T10:35:27.115Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@2000191918 wrapping org.postgresql.jdbc.PgConnection@32303e46] read-only
2025-06-04T10:35:27.122Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T10:35:27.132Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=100, cityId=10, temperature=27.746, date=2025-06-04 10:00:00.0, windSpeed=3.944]]
2025-06-04T10:35:27.140Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@2000191918 wrapping org.postgresql.jdbc.PgConnection@32303e46]
2025-06-04T10:35:27.152Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T10:35:27.155Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T10:35:27.167Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:50) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          2025-06-04T10:51:02.744Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T10:51:02.746Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T10:51:02.747Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-7c04aa1a-2608-4ad0-ab18-9e4be86a5aff sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T10:51:02.749Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T10:51:02.750Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T10:51:02.751Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T10:51:02.756Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T10:51:02.757Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T10:51:03.017Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T10:51:03.019Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T10:51:03.020Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T10:51:03.021Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T10:51:03.032Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T10:51:03.034Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T10:51:03.045Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T10:51:03.051Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T10:51:03.103Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T10:51:03.112Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T10:51:03.114Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T10:51:03.115Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T10:51:03.116Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T10:51:03.118Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T10:51:03.135Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T10:51:03.141Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T10:51:03.151Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           2025-06-04T11:02:20.516Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node -1 disconnected.
2025-06-04T11:02:31.544Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=demo-producer-1] Node -1 disconnected.
2025-06-04T11:06:25.076Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0", parameters={}
2025-06-04T11:06:25.078Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T11:06:25.080Z  INFO 1 --- [demo] [http-nio-8080-exec-6] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Москва
2025-06-04T11:06:25.081Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T11:00
2025-06-04T11:06:25.096Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=37.617698&lon=55.755864&date=2025-06-04T11:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T11:06:25.100Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T11:06:25.848Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T11:06:25.850Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T11:06:25.882Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1429499166 wrapping org.postgresql.jdbc.PgConnection@32303e46] read-only
2025-06-04T11:06:25.894Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1429499166 wrapping org.postgresql.jdbc.PgConnection@32303e46]
2025-06-04T11:06:25.897Z  INFO 1 --- [demo] [http-nio-8080-exec-6] c.e.d.controller.ForecastController      : Прогноз для города Москва на 2025-06-04T11:00 успешно сформирован
2025-06-04T11:06:25.898Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T11:06:25.898Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T11:06:25.900Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=104, cityId=3, temperature=20.956, date=2025-06-04 11:00:00.0, windSpeed=8.139]]
2025-06-04T11:06:25.905Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T11:06:25.903Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.e.d.s.WeatherRequestConsumerService    : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.WeatherRequestConsumerService.consumeWeatherRequest(WeatherRequestConsumerService.java:49) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T11:06:27.961Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0", parameters={}
2025-06-04T11:06:27.963Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T11:06:27.964Z  INFO 1 --- [demo] [http-nio-8080-exec-7] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Москва
2025-06-04T11:06:27.965Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T11:00
2025-06-04T11:06:27.990Z  INFO 1 --- [demo] [http-nio-8080-exec-7] c.e.d.controller.ForecastController      : Прогноз для города Москва на 2025-06-04T11:00 успешно сформирован
2025-06-04T11:06:27.994Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T11:06:27.996Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=105, cityId=3, temperature=20.956, date=2025-06-04 11:00:00.0, windSpeed=8.139]]
2025-06-04T11:06:27.996Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@275970768 wrapping org.postgresql.jdbc.PgConnection@32303e46] read-only
2025-06-04T11:06:27.998Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T11:06:28.001Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@275970768 wrapping org.postgresql.jdbc.PgConnection@32303e46]
2025-06-04T11:06:28.006Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T11:06:28.009Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.e.d.s.WeatherRequestConsumerService    : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.WeatherRequestConsumerService.consumeWeatherRequest(WeatherRequestConsumerService.java:49) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T11:10:30.815Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T11:10:30.818Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T11:10:30.820Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-cc481a57-407a-4510-9403-2188287644a4 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T11:10:30.822Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T11:10:30.823Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T11:10:30.824Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T11:10:30.828Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T11:10:30.829Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T11:10:31.021Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T11:10:31.023Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T11:10:31.024Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T11:10:31.026Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T11:10:31.039Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T11:10:31.042Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T11:10:31.046Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T11:10:31.052Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T11:10:31.104Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T11:10:31.111Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T11:10:31.113Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T11:10:31.114Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T11:10:31.115Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T11:10:31.119Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T11:10:31.139Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T11:10:31.144Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T11:10:31.151Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T11:12:36.909Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T11:12:36.913Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T11:12:36.915Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T11:12:38.119Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T11:12:38.123Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T11:12:38.176Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T11:12:38.180Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T11:12:38.183Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T11:12:38.186Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 52 ms. Found 0 JDBC repository interfaces.
2025-06-04T11:12:38.206Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T11:12:38.209Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T11:12:38.367Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 148 ms. Found 3 JPA repository interfaces.
2025-06-04T11:12:38.397Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T11:12:38.400Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T11:12:38.424Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T11:12:38.425Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T11:12:38.426Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T11:12:38.428Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-06-04T11:12:39.340Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T11:12:39.362Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T11:12:39.364Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T11:12:39.518Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T11:12:39.521Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2534 ms
2025-06-04T11:12:39.730Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T11:12:40.053Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@272a179c
2025-06-04T11:12:40.057Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T11:12:40.163Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T11:12:40.165Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T11:12:40.167Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T11:12:40.173Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T11:12:40.175Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T11:12:40.176Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T11:12:40.177Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T11:12:40.177Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T11:12:40.180Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T11:12:40.187Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T11:12:40.189Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T11:12:40.190Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T11:12:40.192Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T11:12:40.199Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:12:40.201Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T11:12:40.205Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T11:12:40.217Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T11:12:40.218Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T11:12:40.219Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T11:12:40.222Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T11:12:40.223Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T11:12:40.234Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T11:12:40.238Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T11:12:40.239Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:12:40.252Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T11:12:40.258Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:12:40.271Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:12:40.273Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T11:12:40.274Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T11:12:40.276Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:12:40.277Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T11:12:40.278Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T11:12:40.300Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.045s)
2025-06-04T11:12:40.306Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T11:12:40.321Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T11:12:40.327Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T11:12:40.333Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 49 of 64M
2025-06-04T11:12:40.453Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T11:12:40.555Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T11:12:40.612Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T11:12:41.090Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T11:12:42.392Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T11:12:42.457Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T11:12:42.731Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T11:12:44.381Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T11:12:44.508Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T11:12:44.580Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T11:12:44.636Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T11:12:44.691Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T11:12:44.763Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T11:12:45.044Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T11:12:45.431Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T11:12:45.482Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T11:12:45.564Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T11:12:45.786Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T11:12:45.789Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T11:12:45.790Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T11:12:45.791Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749035565787
2025-06-04T11:12:45.797Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T11:12:45.821Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 9.78 seconds (process running for 10.575)
2025-06-04T11:12:46.212Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T11:12:46.218Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T11:12:46.221Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T11:12:46.237Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-ed52af56-8e7f-44ec-a03a-89cb1c23b0c1
2025-06-04T11:12:46.239Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T11:12:46.241Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=37, memberId='consumer-weather-stats-group-1-ed52af56-8e7f-44ec-a03a-89cb1c23b0c1', protocol='range'}
2025-06-04T11:12:46.250Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 37: {consumer-weather-stats-group-1-ed52af56-8e7f-44ec-a03a-89cb1c23b0c1=Assignment(partitions=[weather-requests-0])}
2025-06-04T11:12:46.263Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=37, memberId='consumer-weather-stats-group-1-ed52af56-8e7f-44ec-a03a-89cb1c23b0c1', protocol='range'}
2025-06-04T11:12:46.264Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T11:12:46.269Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T11:12:46.280Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T11:12:46.283Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T11:13:03.880Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T11:13:03.881Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T11:13:03.883Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T11:13:03.883Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T11:13:03.884Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T11:13:03.888Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@447543ee
2025-06-04T11:13:03.890Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@102fd71d
2025-06-04T11:13:03.893Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T11:13:03.894Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-06-04T11:13:03.919Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0", parameters={}
2025-06-04T11:13:03.947Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T11:13:03.995Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Москва
2025-06-04T11:13:03.997Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T11:00
2025-06-04T11:13:05.001Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Москва на 2025-06-04T11:00 успешно сформирован
2025-06-04T11:13:05.064Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T11:13:05.083Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=106, cityId=3, temperature=20.956, date=2025-06-04 11:00:00.0, windSpeed=8.139]]
2025-06-04T11:13:05.112Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T11:18:28.199Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0", parameters={}
2025-06-04T11:18:28.201Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T11:18:28.203Z  INFO 1 --- [demo] [http-nio-8080-exec-5] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Москва
2025-06-04T11:18:28.204Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T11:00
2025-06-04T11:18:28.226Z  INFO 1 --- [demo] [http-nio-8080-exec-5] c.e.d.controller.ForecastController      : Прогноз для города Москва на 2025-06-04T11:00 успешно сформирован
2025-06-04T11:18:28.229Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T11:18:28.230Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=107, cityId=3, temperature=20.956, date=2025-06-04 11:00:00.0, windSpeed=8.139]]
2025-06-04T11:18:28.234Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T11:21:46.503Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node -1 disconnected.
2025-06-04T11:25:11.467Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T11:25:11.469Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T11:25:11.470Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-ed52af56-8e7f-44ec-a03a-89cb1c23b0c1 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T11:25:11.473Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T11:25:11.475Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T11:25:11.476Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T11:25:11.480Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T11:25:11.481Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T11:25:11.737Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T11:25:11.739Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T11:25:11.741Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T11:25:11.742Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T11:25:11.755Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T11:25:11.758Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T11:25:11.770Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T11:25:11.775Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T11:25:11.831Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T11:25:11.836Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T11:25:11.844Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T11:27:12.714Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T11:27:12.718Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T11:27:12.721Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T11:27:13.914Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T11:27:13.918Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T11:27:13.963Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T11:27:13.967Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T11:27:13.970Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T11:27:13.973Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 44 ms. Found 0 JDBC repository interfaces.
2025-06-04T11:27:13.993Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T11:27:13.997Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T11:27:14.166Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 162 ms. Found 3 JPA repository interfaces.
2025-06-04T11:27:14.197Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T11:27:14.201Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T11:27:14.221Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T11:27:14.223Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T11:27:14.224Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T11:27:14.225Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-06-04T11:27:15.189Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T11:27:15.222Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T11:27:15.223Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T11:27:15.356Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T11:27:15.358Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2564 ms
2025-06-04T11:27:15.560Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T11:27:15.877Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1813f3e9
2025-06-04T11:27:15.883Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T11:27:15.988Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T11:27:15.991Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T11:27:15.992Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T11:27:16.000Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T11:27:16.001Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T11:27:16.002Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T11:27:16.003Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T11:27:16.004Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T11:27:16.005Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T11:27:16.011Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T11:27:16.012Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T11:27:16.013Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T11:27:16.014Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T11:27:16.021Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:27:16.023Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T11:27:16.025Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T11:27:16.034Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T11:27:16.036Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T11:27:16.037Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T11:27:16.040Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T11:27:16.042Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T11:27:16.051Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T11:27:16.054Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T11:27:16.056Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:27:16.071Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T11:27:16.078Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:27:16.097Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:27:16.099Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T11:27:16.112Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T11:27:16.115Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:27:16.117Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T11:27:16.117Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T11:27:16.138Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.064s)
2025-06-04T11:27:16.143Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T11:27:16.156Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T11:27:16.162Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T11:27:16.169Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 23 of 58M
2025-06-04T11:27:16.285Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T11:27:16.380Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T11:27:16.447Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T11:27:16.957Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T11:27:18.334Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T11:27:18.407Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T11:27:18.681Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T11:27:19.675Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T11:27:19.683Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T11:27:20.380Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T11:27:20.504Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T11:27:20.568Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T11:27:20.638Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T11:27:20.710Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T11:27:20.771Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T11:27:20.995Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T11:27:21.355Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T11:27:21.427Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T11:27:21.502Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T11:27:21.755Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T11:27:21.759Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T11:27:21.761Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T11:27:21.762Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749036441757
2025-06-04T11:27:21.767Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T11:27:21.779Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:27:21.790Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 9.925 seconds (process running for 10.736)
2025-06-04T11:27:22.168Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T11:27:22.173Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T11:27:22.178Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T11:27:22.194Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-a99290ca-fe02-491b-a8e1-19113a0dfdb8
2025-06-04T11:27:22.196Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T11:27:22.198Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=39, memberId='consumer-weather-stats-group-1-a99290ca-fe02-491b-a8e1-19113a0dfdb8', protocol='range'}
2025-06-04T11:27:22.208Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 39: {consumer-weather-stats-group-1-a99290ca-fe02-491b-a8e1-19113a0dfdb8=Assignment(partitions=[weather-requests-0])}
2025-06-04T11:27:22.216Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=39, memberId='consumer-weather-stats-group-1-a99290ca-fe02-491b-a8e1-19113a0dfdb8', protocol='range'}
2025-06-04T11:27:22.217Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T11:27:22.222Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T11:27:22.234Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T11:27:22.237Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T11:27:26.785Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:27:26.788Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:27:31.793Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:27:31.795Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:27:35.213Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T11:27:35.215Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T11:27:35.217Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T11:27:35.218Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T11:27:35.219Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T11:27:35.222Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6065bcb7
2025-06-04T11:27:35.224Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@18df26a1
2025-06-04T11:27:35.225Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T11:27:35.226Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2025-06-04T11:27:35.243Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0", parameters={}
2025-06-04T11:27:35.263Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T11:27:35.310Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Москва
2025-06-04T11:27:35.312Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T11:00
2025-06-04T11:27:36.200Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T11:27:36.203Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T11:27:36.223Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T11:27:36.252Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T11:27:36.253Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T11:27:36.255Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T11:27:36.256Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749036456253
2025-06-04T11:27:36.259Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@28f6b62d]
2025-06-04T11:27:36.261Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T11:27:36.265Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 12001 with epoch 0
2025-06-04T11:27:36.322Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T11:27:36.340Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Москва","requestTime":"2025-06-04T11:27:36.162867Z"}, headers={kafka_offset=105, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@7eaa03d4, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Москва, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749036456273, kafka_groupId=weather-stats-group}]]
2025-06-04T11:27:36.344Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Москва","requestTime":"2025-06-04T11:27:36.162867Z"}
2025-06-04T11:27:36.376Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Москва на 2025-06-04T11:00 успешно сформирован
2025-06-04T11:27:36.404Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T11:27:36.415Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=108, cityId=3, temperature=20.956, date=2025-06-04 11:00:00.0, windSpeed=8.139]]
2025-06-04T11:27:36.430Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1483470903 wrapping org.postgresql.jdbc.PgConnection@234c7205] read-only
2025-06-04T11:27:36.436Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T11:27:36.453Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1483470903 wrapping org.postgresql.jdbc.PgConnection@234c7205]
2025-06-04T11:27:36.467Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T11:27:36.489Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:51) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T11:27:36.502Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=106, leaderEpoch=null, metadata=''}}
2025-06-04T11:27:36.504Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=106, leaderEpoch=null, metadata=''}}
2025-06-04T11:27:41.511Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:27:41.513Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:27:46.516Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:27:46.518Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:27:51.520Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:27:51.523Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:27:56.525Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:27:56.527Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:28:01.531Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:28:01.533Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:28:06.536Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:28:06.538Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:28:11.540Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:28:11.543Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:28:16.545Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:28:16.547Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:28:21.548Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:28:21.550Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:28:26.553Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:28:26.555Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:28:31.558Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:28:31.559Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:28:36.563Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:28:36.566Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:28:41.569Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:28:41.572Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:28:46.574Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:28:46.577Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:28:51.579Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:28:51.581Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:28:56.583Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:28:56.585Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:29:01.588Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:29:01.591Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:29:06.594Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:29:06.597Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:29:11.600Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:29:11.602Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:29:16.605Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:29:16.607Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:29:21.610Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:29:21.612Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:29:26.615Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:29:26.617Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:29:31.620Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:29:31.622Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:29:36.624Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:29:36.627Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:29:41.630Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:29:41.632Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:29:46.634Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:29:46.636Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:29:51.640Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:29:51.642Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:29:56.644Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:29:56.646Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:30:01.649Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:30:01.654Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:30:06.659Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:30:06.661Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:30:11.663Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:30:11.665Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:30:16.667Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:30:16.668Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:30:21.671Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:30:21.673Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:30:26.674Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:30:26.677Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:30:31.680Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:30:31.682Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:30:36.684Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:30:36.686Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:30:41.688Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:30:41.690Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:30:46.693Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:30:46.695Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:30:51.697Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:30:51.700Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:30:56.701Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:30:56.703Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:31:01.707Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:31:01.709Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:31:06.713Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:31:06.715Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:31:11.717Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:31:11.720Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:31:16.722Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:31:16.725Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:31:21.727Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:31:21.730Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:31:26.732Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:31:26.735Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:31:31.738Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:31:31.741Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:31:36.745Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:31:36.747Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:31:41.752Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:31:41.754Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:31:46.756Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:31:46.758Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:31:51.761Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:31:51.762Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:31:56.765Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:31:56.767Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:32:01.771Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:32:01.773Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:32:06.776Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:32:06.779Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:32:11.781Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:32:11.783Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:32:16.786Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:32:16.789Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:32:21.791Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:32:21.794Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:32:26.798Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:32:26.800Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:32:31.803Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:32:31.806Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:32:36.810Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:32:36.812Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:32:41.815Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:32:41.817Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:32:46.820Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:32:46.821Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:32:51.823Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:32:51.825Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:32:56.827Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:32:56.830Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:33:01.833Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:33:01.835Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:33:06.837Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:33:06.846Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:33:11.848Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:33:11.850Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:33:16.853Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:33:16.855Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:33:21.857Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:33:21.860Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:33:26.863Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:33:26.867Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:33:31.869Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:33:31.871Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:33:36.874Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:33:36.875Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:33:41.878Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:33:41.880Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:33:46.882Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:33:46.884Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:33:51.886Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:33:51.888Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:33:56.892Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:33:56.895Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:34:01.897Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:34:01.899Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:34:06.902Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:34:06.904Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:34:11.906Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:34:11.908Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:34:16.911Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:34:16.913Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:34:21.915Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:34:21.917Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:34:26.919Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:34:26.921Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:34:31.923Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:34:31.925Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:34:36.927Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:34:36.928Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:34:41.931Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:34:41.932Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:34:46.935Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:34:46.938Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:34:51.940Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:34:51.942Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:34:56.944Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:34:56.947Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:35:01.949Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:35:01.951Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:35:06.953Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:35:06.956Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:35:11.958Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:35:11.961Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:35:16.963Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:35:16.965Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:35:21.968Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:35:21.971Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:35:26.973Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:35:26.976Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:35:31.979Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:35:31.981Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:35:36.984Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:35:36.986Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:35:41.988Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:35:41.990Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:35:46.992Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:35:46.995Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:35:51.997Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:35:51.999Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:35:57.001Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:35:57.004Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:36:02.007Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:36:02.010Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:36:07.012Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:36:07.014Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:36:12.016Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:36:12.024Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:36:17.026Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:36:17.029Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:36:22.030Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:36:22.032Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:36:22.375Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node -1 disconnected.
2025-06-04T11:36:27.034Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:36:27.036Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:36:32.038Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:36:32.040Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:36:36.521Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=demo-producer-1] Node -1 disconnected.
2025-06-04T11:36:37.043Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:36:37.046Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:36:42.048Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:36:42.051Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:36:47.055Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:36:47.057Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:36:52.060Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:36:52.063Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:36:57.066Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:36:57.069Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:37:02.072Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:37:02.074Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:37:07.077Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:37:07.079Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:37:12.081Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:37:12.088Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:37:17.092Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:37:17.094Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:37:22.096Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:37:22.098Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:37:27.101Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:37:27.104Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:37:32.106Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:37:32.108Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:37:37.110Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:37:37.112Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:37:42.114Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:37:42.117Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:37:47.120Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:37:47.123Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:37:52.126Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:37:52.129Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:37:57.131Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:37:57.133Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:38:02.135Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:38:02.137Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:38:07.139Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:38:07.141Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:38:12.144Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:38:12.147Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:38:17.150Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:38:17.152Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:38:22.154Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:38:22.156Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:38:27.158Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:38:27.162Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:38:32.166Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:38:32.169Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:38:37.174Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:38:37.176Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:38:42.178Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:38:42.179Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:38:47.181Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:38:47.183Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:38:52.186Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:38:52.188Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:38:57.190Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:38:57.199Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:39:02.204Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:39:02.206Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:39:07.208Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:39:07.212Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:39:12.214Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:39:12.215Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:39:17.218Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:39:17.224Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:39:22.251Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:39:22.253Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:39:27.255Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:39:27.258Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:39:32.259Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:39:32.261Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:39:37.264Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:39:37.266Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:39:42.268Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:39:42.270Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:39:47.272Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:39:47.274Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:39:52.277Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:39:52.334Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:39:57.337Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:39:57.339Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:40:02.341Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:40:02.344Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:40:07.346Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:40:07.348Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:40:12.351Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:40:12.353Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:40:17.356Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:40:17.358Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:40:22.360Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:40:22.362Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:40:27.365Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:40:27.367Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:40:32.369Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:40:32.371Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:40:37.373Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:40:37.375Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:40:42.377Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:40:42.380Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:40:47.383Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:40:47.387Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:40:52.390Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:40:52.392Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:40:57.394Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:40:57.397Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:41:02.399Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:41:02.401Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:41:07.403Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:41:07.405Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:41:12.408Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:41:12.410Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:41:17.410Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:41:17.415Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:41:22.427Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:41:22.429Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:41:27.432Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:41:27.434Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:41:32.436Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:41:32.438Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:41:37.440Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:41:37.443Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:41:42.445Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:41:42.448Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:41:47.450Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:41:47.453Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:41:52.455Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:41:52.457Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:41:57.458Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:41:57.460Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:42:02.461Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:42:02.464Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:42:07.465Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:42:07.467Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:42:12.470Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:42:12.472Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:42:17.475Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:42:17.477Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:42:22.479Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:42:22.480Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:42:27.482Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:42:27.486Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:42:32.489Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:42:32.491Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:42:37.493Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:42:37.495Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:42:42.499Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:42:42.501Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:42:47.503Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:42:47.505Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:42:52.507Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:42:52.509Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:42:57.512Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:42:57.515Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:43:02.517Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:43:02.524Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:43:07.528Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:43:07.529Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:43:12.532Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:43:12.533Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:43:17.536Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:43:17.538Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:43:22.540Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:43:22.543Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:43:27.545Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:43:27.547Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:43:32.548Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:43:32.550Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:43:37.552Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:43:37.554Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:43:42.556Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:43:42.558Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:43:47.560Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:43:47.563Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:43:52.566Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:43:52.568Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:43:57.571Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:43:57.573Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:44:02.575Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:44:02.577Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:44:07.579Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:44:07.581Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:44:12.583Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:44:12.585Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:44:17.587Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:44:17.589Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:44:22.591Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:44:22.593Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:44:27.595Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:44:27.596Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:44:28.048Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:44:28.050Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T11:44:28.053Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T11:44:28.054Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:44:28.055Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-a99290ca-fe02-491b-a8e1-19113a0dfdb8 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T11:44:28.058Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T11:44:28.059Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T11:44:28.061Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T11:44:28.066Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T11:44:28.068Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T11:44:28.242Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T11:44:28.244Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T11:44:28.245Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T11:44:28.246Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T11:44:28.261Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T11:44:28.265Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T11:44:28.270Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T11:44:28.280Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T11:44:28.285Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T11:44:28.331Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T11:44:28.344Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T11:44:28.345Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T11:44:28.347Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T11:44:28.348Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T11:44:28.350Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T11:44:28.364Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T11:44:28.371Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T11:44:28.379Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T11:46:24.248Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T11:46:24.252Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T11:46:24.255Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T11:46:25.457Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T11:46:25.461Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T11:46:25.517Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T11:46:25.520Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T11:46:25.523Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T11:46:25.525Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 53 ms. Found 0 JDBC repository interfaces.
2025-06-04T11:46:25.544Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T11:46:25.547Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T11:46:25.729Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 174 ms. Found 3 JPA repository interfaces.
2025-06-04T11:46:25.759Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T11:46:25.762Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T11:46:25.779Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T11:46:25.782Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T11:46:25.784Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T11:46:25.785Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-06-04T11:46:26.720Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T11:46:26.743Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T11:46:26.744Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T11:46:26.882Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T11:46:26.884Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2561 ms
2025-06-04T11:46:27.072Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T11:46:27.382Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3b152928
2025-06-04T11:46:27.386Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T11:46:27.494Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T11:46:27.496Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T11:46:27.497Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T11:46:27.507Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T11:46:27.509Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T11:46:27.510Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T11:46:27.512Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T11:46:27.513Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T11:46:27.515Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T11:46:27.520Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T11:46:27.522Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T11:46:27.523Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T11:46:27.524Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T11:46:27.529Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:46:27.530Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T11:46:27.532Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T11:46:27.542Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T11:46:27.544Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T11:46:27.545Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T11:46:27.547Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T11:46:27.548Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T11:46:27.558Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T11:46:27.562Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T11:46:27.563Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:46:27.575Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T11:46:27.581Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:46:27.598Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:46:27.599Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T11:46:27.600Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T11:46:27.602Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:46:27.603Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T11:46:27.604Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T11:46:27.625Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.047s)
2025-06-04T11:46:27.631Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T11:46:27.645Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T11:46:27.658Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T11:46:27.664Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 23 of 57M
2025-06-04T11:46:27.782Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T11:46:27.887Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T11:46:27.955Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T11:46:28.423Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T11:46:29.729Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T11:46:29.797Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T11:46:30.082Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T11:46:31.021Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T11:46:31.027Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T11:46:31.849Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T11:46:31.980Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T11:46:32.056Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T11:46:32.124Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T11:46:32.182Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T11:46:32.252Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T11:46:32.526Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T11:46:32.905Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T11:46:32.959Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T11:46:33.021Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T11:46:33.236Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T11:46:33.241Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T11:46:33.242Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T11:46:33.243Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749037593239
2025-06-04T11:46:33.249Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T11:46:33.265Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:46:33.279Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 9.852 seconds (process running for 10.611)
2025-06-04T11:46:33.689Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T11:46:33.695Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T11:46:33.698Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T11:46:33.717Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-01d2dfe0-210c-4fa2-94cd-3258bd580396
2025-06-04T11:46:33.718Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T11:46:33.721Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=41, memberId='consumer-weather-stats-group-1-01d2dfe0-210c-4fa2-94cd-3258bd580396', protocol='range'}
2025-06-04T11:46:33.729Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 41: {consumer-weather-stats-group-1-01d2dfe0-210c-4fa2-94cd-3258bd580396=Assignment(partitions=[weather-requests-0])}
2025-06-04T11:46:33.742Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=41, memberId='consumer-weather-stats-group-1-01d2dfe0-210c-4fa2-94cd-3258bd580396', protocol='range'}
2025-06-04T11:46:33.744Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T11:46:33.748Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T11:46:33.759Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=106, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T11:46:33.762Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T11:46:38.272Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:46:38.275Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:46:43.280Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:46:43.282Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:46:48.285Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:46:48.287Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:46:53.290Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:46:53.292Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:46:57.003Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T11:46:57.005Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T11:46:57.006Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T11:46:57.007Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T11:46:57.008Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T11:46:57.011Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6296e4bf
2025-06-04T11:46:57.013Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@23dc70c1
2025-06-04T11:46:57.015Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T11:46:57.016Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2025-06-04T11:46:57.033Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0", parameters={}
2025-06-04T11:46:57.059Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T11:46:57.111Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Москва
2025-06-04T11:46:57.114Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T11:00
2025-06-04T11:46:58.020Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Москва на 2025-06-04T11:00 успешно сформирован
2025-06-04T11:46:58.073Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T11:46:58.078Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T11:46:58.099Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T11:46:58.132Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T11:46:58.134Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T11:46:58.135Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T11:46:58.137Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749037618134
2025-06-04T11:46:58.140Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@66b4628e]
2025-06-04T11:46:58.142Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T11:46:58.188Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 13001 with epoch 0
2025-06-04T11:46:58.235Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T11:46:58.242Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T11:46:58.246Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Москва","requestTime":"2025-06-04T11:46:58.022788200Z"}, headers={kafka_offset=106, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@6edde9f4, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Москва, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749037618194, kafka_groupId=weather-stats-group}]]
2025-06-04T11:46:58.250Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Москва","requestTime":"2025-06-04T11:46:58.022788200Z"}
2025-06-04T11:46:58.253Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=109, cityId=3, temperature=20.956, date=2025-06-04 11:00:00.0, windSpeed=8.139]]
2025-06-04T11:46:58.272Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T11:46:58.329Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@802211025 wrapping org.postgresql.jdbc.PgConnection@3b152928] read-only
2025-06-04T11:46:58.348Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@802211025 wrapping org.postgresql.jdbc.PgConnection@3b152928]
2025-06-04T11:46:58.360Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T11:46:58.374Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:51) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T11:46:58.385Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=107, leaderEpoch=null, metadata=''}}
2025-06-04T11:46:58.387Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=107, leaderEpoch=null, metadata=''}}
2025-06-04T11:47:03.398Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:47:03.400Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:47:08.402Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:47:08.404Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:47:13.408Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:47:13.410Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:47:18.415Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:47:18.417Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:47:23.419Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:47:23.421Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:47:28.426Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:47:28.428Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:47:33.431Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:47:33.433Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:47:38.435Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:47:38.437Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:47:43.439Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:47:43.441Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:47:48.444Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:47:48.446Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:47:53.454Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:47:53.456Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:47:58.459Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:47:58.462Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:48:03.465Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:48:03.467Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:48:08.469Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:48:08.471Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:48:13.473Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:48:13.475Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:48:18.476Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:48:18.478Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:48:23.480Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:48:23.482Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:48:28.484Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:48:28.487Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:48:33.490Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:48:33.491Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:48:38.494Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:48:38.497Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:48:43.500Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:48:43.502Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:48:48.505Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:48:48.507Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:48:53.511Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:48:53.514Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:48:58.517Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:48:58.519Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:49:03.521Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:49:03.524Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:49:08.526Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:49:08.528Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:49:13.536Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:49:13.537Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:49:18.540Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:49:18.543Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:49:23.546Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:49:23.548Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:49:28.552Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:49:28.554Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:49:33.556Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:49:33.559Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:49:38.564Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:49:38.566Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:49:43.567Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:49:43.569Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:49:48.572Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:49:48.574Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:49:53.576Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:49:53.579Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:49:58.581Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:49:58.584Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:50:03.586Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:50:03.588Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:50:08.590Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:50:08.593Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:50:13.595Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:50:13.597Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:50:18.598Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:50:18.607Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:50:23.610Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:50:23.612Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:50:28.615Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:50:28.617Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:50:33.619Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:50:33.621Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:50:38.624Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:50:38.626Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:50:43.627Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:50:43.630Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:50:48.633Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:50:48.635Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:50:53.638Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:50:53.640Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:50:57.555Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:50:57.558Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T11:50:57.560Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T11:50:57.561Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:50:57.563Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-01d2dfe0-210c-4fa2-94cd-3258bd580396 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T11:50:57.566Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T11:50:57.567Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T11:50:57.572Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T11:50:57.581Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T11:50:57.582Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T11:50:57.951Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T11:50:57.954Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T11:50:57.956Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T11:50:57.957Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T11:50:57.968Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T11:50:57.970Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T11:50:57.974Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T11:50:57.977Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T11:50:57.982Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T11:50:58.029Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T11:50:58.037Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T11:50:58.039Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T11:50:58.039Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T11:50:58.040Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T11:50:58.042Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T11:50:58.058Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T11:50:58.064Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T11:50:58.073Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T11:52:51.312Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T11:52:51.316Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T11:52:51.318Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T11:52:52.500Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T11:52:52.504Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T11:52:52.556Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T11:52:52.559Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T11:52:52.563Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T11:52:52.565Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 51 ms. Found 0 JDBC repository interfaces.
2025-06-04T11:52:52.583Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T11:52:52.588Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T11:52:52.750Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 153 ms. Found 3 JPA repository interfaces.
2025-06-04T11:52:52.781Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T11:52:52.784Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T11:52:52.801Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T11:52:52.802Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T11:52:52.805Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T11:52:52.806Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-06-04T11:52:53.731Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T11:52:53.755Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T11:52:53.756Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T11:52:53.904Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T11:52:53.906Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2525 ms
2025-06-04T11:52:54.087Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T11:52:54.402Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1813f3e9
2025-06-04T11:52:54.405Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T11:52:54.495Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T11:52:54.496Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T11:52:54.497Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T11:52:54.501Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T11:52:54.502Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T11:52:54.503Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T11:52:54.504Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T11:52:54.505Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T11:52:54.506Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T11:52:54.510Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T11:52:54.511Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T11:52:54.512Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T11:52:54.514Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T11:52:54.520Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:52:54.521Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T11:52:54.524Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T11:52:54.533Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T11:52:54.535Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T11:52:54.536Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T11:52:54.538Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T11:52:54.540Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T11:52:54.547Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T11:52:54.551Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T11:52:54.552Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:52:54.563Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T11:52:54.569Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:52:54.580Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:52:54.581Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T11:52:54.582Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T11:52:54.584Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T11:52:54.585Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T11:52:54.585Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T11:52:54.603Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.037s)
2025-06-04T11:52:54.608Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T11:52:54.620Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T11:52:54.631Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T11:52:54.637Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 47 of 64M
2025-06-04T11:52:54.740Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T11:52:54.815Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T11:52:54.859Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T11:52:55.218Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T11:52:56.354Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T11:52:56.424Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T11:52:56.686Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T11:52:57.578Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T11:52:57.583Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T11:52:58.237Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T11:52:58.394Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T11:52:58.467Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T11:52:58.540Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T11:52:58.597Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T11:52:58.659Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T11:52:58.880Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T11:52:59.259Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T11:52:59.341Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T11:52:59.401Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T11:52:59.609Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T11:52:59.612Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T11:52:59.612Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T11:52:59.614Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749037979610
2025-06-04T11:52:59.619Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T11:52:59.631Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:52:59.643Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 9.148 seconds (process running for 9.88)
2025-06-04T11:52:59.986Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T11:52:59.993Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T11:53:00.001Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T11:53:00.021Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-058e9bb8-ab5e-415c-867d-1669daad225e
2025-06-04T11:53:00.022Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T11:53:00.024Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=43, memberId='consumer-weather-stats-group-1-058e9bb8-ab5e-415c-867d-1669daad225e', protocol='range'}
2025-06-04T11:53:00.036Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 43: {consumer-weather-stats-group-1-058e9bb8-ab5e-415c-867d-1669daad225e=Assignment(partitions=[weather-requests-0])}
2025-06-04T11:53:00.043Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=43, memberId='consumer-weather-stats-group-1-058e9bb8-ab5e-415c-867d-1669daad225e', protocol='range'}
2025-06-04T11:53:00.044Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T11:53:00.049Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T11:53:00.059Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=107, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T11:53:00.062Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T11:53:04.637Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:53:04.641Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:53:09.644Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:53:09.645Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:53:14.648Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:53:14.650Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:53:19.654Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:53:19.656Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:53:24.660Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:53:24.662Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:53:29.665Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:53:29.667Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:53:34.669Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:53:34.672Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:53:39.675Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:53:39.677Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:53:44.678Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:53:44.680Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:53:49.683Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:53:49.685Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:53:54.688Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:53:54.690Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:53:59.693Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:53:59.739Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:54:01.481Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T11:54:01.484Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T11:54:01.485Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T11:54:01.486Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T11:54:01.488Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T11:54:01.491Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6065bcb7
2025-06-04T11:54:01.492Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@18df26a1
2025-06-04T11:54:01.494Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T11:54:01.495Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2025-06-04T11:54:01.515Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0", parameters={}
2025-06-04T11:54:01.540Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T11:54:01.599Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Москва
2025-06-04T11:54:01.601Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T11:00
2025-06-04T11:54:02.534Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Москва на 2025-06-04T11:00 успешно сформирован
2025-06-04T11:54:02.575Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T11:54:02.578Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T11:54:02.598Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T11:54:02.625Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T11:54:02.627Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T11:54:02.629Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T11:54:02.630Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749038042627
2025-06-04T11:54:02.633Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@2278a92f]
2025-06-04T11:54:02.633Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T11:54:02.638Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 14001 with epoch 0
2025-06-04T11:54:02.689Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T11:54:02.696Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T11:54:02.701Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Москва","requestTime":"2025-06-04T11:54:02.536381400Z"}, headers={kafka_offset=107, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@7f075bd9, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Москва, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749038042645, kafka_groupId=weather-stats-group}]]
2025-06-04T11:54:02.706Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Москва","requestTime":"2025-06-04T11:54:02.536381400Z"}
2025-06-04T11:54:02.708Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=110, cityId=3, temperature=20.956, date=2025-06-04 11:00:00.0, windSpeed=8.139]]
2025-06-04T11:54:02.730Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T11:54:02.787Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@374825396 wrapping org.postgresql.jdbc.PgConnection@1813f3e9] read-only
2025-06-04T11:54:02.806Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@374825396 wrapping org.postgresql.jdbc.PgConnection@1813f3e9]
2025-06-04T11:54:02.817Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T11:54:02.830Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:51) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T11:54:02.841Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=108, leaderEpoch=null, metadata=''}}
2025-06-04T11:54:02.843Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=108, leaderEpoch=null, metadata=''}}
2025-06-04T11:54:07.862Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:54:07.864Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:54:11.615Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%B0%D1%80%D0%B0%D1%82%D0%BE%D0%B2", parameters={}
2025-06-04T11:54:11.617Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T11:54:11.619Z  INFO 1 --- [demo] [http-nio-8080-exec-3] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Саратов
2025-06-04T11:54:11.620Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T11:00
2025-06-04T11:54:11.868Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=46.034176&lon=51.533338&date=2025-06-04T11:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T11:54:11.878Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T11:54:12.867Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:54:12.869Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:54:13.086Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T11:54:13.090Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T11:54:13.151Z  INFO 1 --- [demo] [http-nio-8080-exec-3] c.e.d.controller.ForecastController      : Прогноз для города Саратов на 2025-06-04T11:00 успешно сформирован
2025-06-04T11:54:13.155Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T11:54:13.158Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=111, cityId=4, temperature=23.356, date=2025-06-04 11:00:00.0, windSpeed=4.221]]
2025-06-04T11:54:13.163Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T11:54:13.163Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T11:54:13.177Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Саратов","requestTime":"2025-06-04T11:54:13.153512800Z"}, headers={kafka_offset=108, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@7f075bd9, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Саратов, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749038053153, kafka_groupId=weather-stats-group}]]
2025-06-04T11:54:13.180Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Саратов","requestTime":"2025-06-04T11:54:13.153512800Z"}
2025-06-04T11:54:13.194Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@402839472 wrapping org.postgresql.jdbc.PgConnection@1813f3e9] read-only
2025-06-04T11:54:13.200Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@402839472 wrapping org.postgresql.jdbc.PgConnection@1813f3e9]
2025-06-04T11:54:13.206Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T11:54:13.210Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:51) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T11:54:13.217Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=109, leaderEpoch=null, metadata=''}}
2025-06-04T11:54:13.219Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=109, leaderEpoch=null, metadata=''}}
2025-06-04T11:54:18.225Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:54:18.226Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:54:23.229Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:54:23.231Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:54:28.234Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:54:28.236Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:54:33.239Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:54:33.243Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:54:38.249Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:54:38.252Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:54:43.254Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:54:43.257Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:54:48.261Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:54:48.263Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:54:53.263Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:54:53.266Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:54:58.269Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:54:58.271Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:55:03.275Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:55:03.277Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:55:08.279Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:55:08.281Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:55:13.284Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:55:13.286Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:55:18.289Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:55:18.292Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:55:23.296Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:55:23.298Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:55:28.300Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:55:28.302Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:55:33.304Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:55:33.306Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:55:38.309Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:55:38.311Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:55:43.314Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:55:43.316Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:55:48.318Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:55:48.320Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:55:53.322Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:55:53.325Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:55:58.327Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:55:58.329Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:56:03.332Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:56:03.335Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:56:08.337Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:56:08.340Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:56:13.342Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:56:13.344Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:56:18.347Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:56:18.349Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:56:23.354Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:56:23.356Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:56:28.360Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:56:28.362Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:56:33.366Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:56:33.368Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:56:38.370Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:56:38.372Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:56:43.374Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:56:43.377Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:56:48.380Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:56:48.393Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:56:53.397Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:56:53.399Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:56:58.401Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:56:58.404Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:57:03.407Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:57:03.409Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:57:08.411Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:57:08.414Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:57:13.416Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:57:13.419Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:57:18.422Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:57:18.424Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:57:23.426Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:57:23.429Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:57:28.431Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:57:28.433Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:57:33.435Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:57:33.436Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:57:38.439Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:57:38.441Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:57:43.443Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:57:43.460Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:57:48.463Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:57:48.465Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:57:53.468Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:57:53.470Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:57:58.472Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:57:58.475Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:58:03.478Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:58:03.480Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:58:08.482Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:58:08.485Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:58:13.488Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:58:13.490Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:58:18.492Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:58:18.496Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:58:23.497Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:58:23.500Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:58:28.502Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:58:28.505Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:58:33.508Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:58:33.510Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:58:38.513Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:58:38.515Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:58:43.517Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:58:43.519Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:58:48.521Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:58:48.524Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:58:53.526Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:58:53.529Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:58:58.530Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:58:58.532Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:59:03.534Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:59:03.536Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:59:08.539Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:59:08.541Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:59:13.543Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:59:13.545Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:59:18.547Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:59:18.549Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:59:23.556Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:59:23.558Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:59:28.562Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:59:28.563Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:59:33.565Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:59:33.567Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:59:38.570Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:59:38.572Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:59:43.575Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:59:43.576Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:59:48.579Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:59:48.581Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:59:53.584Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:59:53.586Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T11:59:58.589Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T11:59:58.590Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:00:03.594Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:00:03.595Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:00:08.597Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:00:08.599Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:00:13.601Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:00:13.604Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:00:18.606Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:00:18.609Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:00:23.612Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:00:23.614Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:00:28.616Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:00:28.618Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:00:33.620Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:00:33.632Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:00:38.636Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:00:38.638Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:00:43.641Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:00:43.644Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:00:48.646Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:00:48.649Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:00:53.651Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:00:53.653Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:00:58.655Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:00:58.657Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:01:03.659Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:01:03.661Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:01:08.663Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:01:08.667Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:01:13.670Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:01:13.672Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:01:18.675Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:01:18.683Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:01:23.686Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:01:23.688Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:01:28.691Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:01:28.693Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:01:33.698Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:01:33.700Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:01:38.703Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:01:38.705Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:01:43.708Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:01:43.710Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:01:48.712Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:01:48.716Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:01:53.587Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:01:53.588Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T12:01:53.591Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T12:01:53.592Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:01:53.594Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-058e9bb8-ab5e-415c-867d-1669daad225e sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T12:01:53.595Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:01:53.596Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:01:53.598Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T12:01:53.601Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:01:53.602Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:01:53.686Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:01:53.688Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:01:53.689Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:01:53.690Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:01:53.702Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T12:01:53.704Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T12:01:53.707Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T12:01:53.713Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T12:01:53.717Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T12:01:53.777Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T12:01:53.785Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:01:53.787Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:01:53.788Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:01:53.789Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:01:53.791Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T12:01:53.807Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:01:53.816Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T12:01:53.824Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T12:03:57.619Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T12:03:57.623Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T12:03:57.626Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T12:03:58.818Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:03:58.823Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T12:03:58.876Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:03:58.879Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:03:58.883Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:03:58.885Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 53 ms. Found 0 JDBC repository interfaces.
2025-06-04T12:03:58.905Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:03:58.910Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T12:03:59.072Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 151 ms. Found 3 JPA repository interfaces.
2025-06-04T12:03:59.103Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:03:59.106Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T12:03:59.123Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:03:59.125Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:03:59.127Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:03:59.129Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-06-04T12:04:00.090Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T12:04:00.123Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T12:04:00.125Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T12:04:00.255Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T12:04:00.257Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2562 ms
2025-06-04T12:04:00.463Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T12:04:00.822Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7c2a69b4
2025-06-04T12:04:00.826Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T12:04:00.940Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T12:04:00.943Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T12:04:00.947Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T12:04:00.958Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T12:04:00.960Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T12:04:00.961Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T12:04:00.962Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T12:04:00.963Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T12:04:00.965Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T12:04:00.972Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T12:04:00.974Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T12:04:00.978Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T12:04:00.980Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T12:04:00.991Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:04:00.993Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T12:04:00.997Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T12:04:01.015Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T12:04:01.017Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T12:04:01.019Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T12:04:01.023Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T12:04:01.026Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T12:04:01.044Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T12:04:01.059Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T12:04:01.060Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:04:01.090Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T12:04:01.106Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:04:01.120Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:04:01.122Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T12:04:01.124Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T12:04:01.127Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:04:01.128Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T12:04:01.129Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T12:04:01.151Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.056s)
2025-06-04T12:04:01.158Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T12:04:01.174Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T12:04:01.181Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T12:04:01.188Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 25 of 57M
2025-06-04T12:04:01.330Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T12:04:01.438Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T12:04:01.499Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T12:04:01.995Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T12:04:03.382Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T12:04:03.458Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:04:03.770Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T12:04:04.706Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T12:04:04.712Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T12:04:05.531Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T12:04:05.700Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T12:04:05.771Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T12:04:05.828Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T12:04:05.875Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T12:04:05.936Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T12:04:06.151Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T12:04:06.523Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T12:04:06.573Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T12:04:06.643Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T12:04:06.855Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T12:04:06.859Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T12:04:06.860Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T12:04:06.861Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749038646857
2025-06-04T12:04:06.866Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T12:04:06.879Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:04:06.893Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 10.128 seconds (process running for 10.854)
2025-06-04T12:04:07.252Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T12:04:07.260Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T12:04:07.265Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T12:04:07.286Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-bf3948ab-5c10-41ba-94af-9b00a42c07d0
2025-06-04T12:04:07.288Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T12:04:07.290Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=45, memberId='consumer-weather-stats-group-1-bf3948ab-5c10-41ba-94af-9b00a42c07d0', protocol='range'}
2025-06-04T12:04:07.304Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 45: {consumer-weather-stats-group-1-bf3948ab-5c10-41ba-94af-9b00a42c07d0=Assignment(partitions=[weather-requests-0])}
2025-06-04T12:04:07.311Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=45, memberId='consumer-weather-stats-group-1-bf3948ab-5c10-41ba-94af-9b00a42c07d0', protocol='range'}
2025-06-04T12:04:07.314Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T12:04:07.319Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T12:04:07.331Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=109, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T12:04:07.334Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T12:04:11.885Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:04:11.888Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:04:16.890Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:04:16.892Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:04:17.313Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T12:04:17.315Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T12:04:17.317Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T12:04:17.318Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T12:04:17.319Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T12:04:17.322Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@220cda54
2025-06-04T12:04:17.324Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@53b907d9
2025-06-04T12:04:17.327Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T12:04:17.328Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-06-04T12:04:17.344Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%B0%D1%80%D0%B0%D1%82%D0%BE%D0%B2", parameters={}
2025-06-04T12:04:17.364Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T12:04:17.407Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Саратов
2025-06-04T12:04:17.408Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T12:00
2025-06-04T12:04:18.502Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=46.034176&lon=51.533338&date=2025-06-04T12:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T12:04:18.527Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T12:04:19.424Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T12:04:19.427Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T12:04:19.499Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T12:04:19.505Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T12:04:19.526Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T12:04:19.552Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T12:04:19.554Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T12:04:19.555Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T12:04:19.557Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749038659554
2025-06-04T12:04:19.562Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@649bc50b]
2025-06-04T12:04:19.562Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T12:04:19.567Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 15001 with epoch 0
2025-06-04T12:04:19.619Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T12:04:19.633Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Саратов","requestTime":"2025-06-04T12:04:19.460161Z"}, headers={kafka_offset=109, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@148a6458, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Саратов, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749038659573, kafka_groupId=weather-stats-group}]]
2025-06-04T12:04:19.638Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Саратов","requestTime":"2025-06-04T12:04:19.460161Z"}
2025-06-04T12:04:19.703Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Саратов на 2025-06-04T12:00 успешно сформирован
2025-06-04T12:04:19.714Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 4
2025-06-04T12:04:19.719Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@129540166 wrapping org.postgresql.jdbc.PgConnection@7b478671] read-only
2025-06-04T12:04:19.727Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T12:04:19.735Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=112, cityId=4, temperature=23.684, date=2025-06-04 12:00:00.0, windSpeed=4.482]]
2025-06-04T12:04:19.743Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@129540166 wrapping org.postgresql.jdbc.PgConnection@7b478671]
2025-06-04T12:04:19.752Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T12:04:19.752Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T12:04:19.767Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:51) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T12:04:19.793Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=110, leaderEpoch=null, metadata=''}}
2025-06-04T12:04:19.795Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=110, leaderEpoch=null, metadata=''}}
2025-06-04T12:04:24.808Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:04:24.810Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:04:29.813Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:04:29.815Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:04:34.819Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:04:34.820Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:04:39.823Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:04:39.825Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:04:44.827Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:04:44.829Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:04:49.832Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:04:49.835Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:04:54.838Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:04:54.840Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:04:59.843Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:04:59.845Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:05:04.847Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:05:04.849Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:05:09.851Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:05:09.853Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:05:14.855Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:05:14.857Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:05:19.859Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:05:19.862Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:05:24.865Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:05:24.867Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:05:29.869Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:05:29.871Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:05:34.873Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:05:34.876Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:05:39.878Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:05:39.881Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:05:44.883Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:05:44.885Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:05:49.888Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:05:49.890Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:05:54.893Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:05:54.895Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:05:59.897Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:05:59.899Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:06:04.902Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:06:04.904Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:06:09.907Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:06:09.908Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:06:14.911Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:06:14.912Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:06:19.915Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:06:19.917Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:06:24.921Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:06:24.923Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:06:29.925Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:06:29.927Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:06:34.929Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:06:34.931Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:06:39.934Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:06:39.935Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:06:44.937Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:06:44.939Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:06:49.941Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:06:49.943Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:06:54.946Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:06:54.948Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:06:59.950Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:06:59.953Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:07:04.956Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:07:04.959Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:07:09.962Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:07:09.965Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:07:14.967Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:07:14.969Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:07:16.010Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:07:16.012Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T12:07:16.014Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T12:07:16.015Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:07:16.017Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-bf3948ab-5c10-41ba-94af-9b00a42c07d0 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T12:07:16.019Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:07:16.020Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:07:16.022Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T12:07:16.026Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:07:16.028Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:07:16.159Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:07:16.161Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:07:16.162Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:07:16.164Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:07:16.181Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T12:07:16.185Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T12:07:16.192Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T12:07:16.196Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T12:07:16.201Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T12:07:16.223Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=demo-producer-1] Node 0 disconnected.
2025-06-04T12:07:16.232Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=demo-producer-1] Node -1 disconnected.
2025-06-04T12:07:16.278Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T12:07:16.288Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:07:16.290Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:07:16.291Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:07:16.292Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:07:16.295Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T12:07:16.311Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:07:16.318Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T12:07:16.325Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T12:09:26.561Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T12:09:26.564Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T12:09:26.567Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T12:09:27.732Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:09:27.736Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T12:09:27.788Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:09:27.792Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:09:27.794Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:09:27.796Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 50 ms. Found 0 JDBC repository interfaces.
2025-06-04T12:09:27.816Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:09:27.820Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T12:09:27.985Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 156 ms. Found 3 JPA repository interfaces.
2025-06-04T12:09:28.016Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:09:28.020Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T12:09:28.038Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:09:28.040Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:09:28.042Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:09:28.044Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-06-04T12:09:29.059Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T12:09:29.083Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T12:09:29.086Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T12:09:29.235Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T12:09:29.237Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2603 ms
2025-06-04T12:09:29.435Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T12:09:29.762Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@648ee871
2025-06-04T12:09:29.766Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T12:09:29.896Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T12:09:29.898Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T12:09:29.899Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T12:09:29.905Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T12:09:29.907Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T12:09:29.908Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T12:09:29.910Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T12:09:29.911Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T12:09:29.913Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T12:09:29.918Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T12:09:29.920Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T12:09:29.921Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T12:09:29.923Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T12:09:29.929Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:09:29.930Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T12:09:29.932Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T12:09:29.943Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T12:09:29.945Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T12:09:29.946Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T12:09:29.948Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T12:09:29.950Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T12:09:29.959Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T12:09:29.962Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T12:09:29.964Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:09:29.979Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T12:09:29.987Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:09:30.001Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:09:30.003Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T12:09:30.004Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T12:09:30.006Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:09:30.007Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T12:09:30.009Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T12:09:30.032Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.050s)
2025-06-04T12:09:30.038Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T12:09:30.053Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T12:09:30.059Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T12:09:30.065Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 50 of 65M
2025-06-04T12:09:30.197Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T12:09:30.297Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T12:09:30.359Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T12:09:30.833Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T12:09:32.381Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T12:09:32.469Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:09:32.824Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T12:09:33.890Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T12:09:33.896Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T12:09:34.635Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T12:09:34.755Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T12:09:34.826Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T12:09:34.887Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T12:09:34.932Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T12:09:35.014Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T12:09:35.220Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T12:09:35.602Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T12:09:35.663Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T12:09:35.727Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T12:09:35.927Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T12:09:35.930Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T12:09:35.932Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T12:09:35.932Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749038975928
2025-06-04T12:09:35.940Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T12:09:35.953Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:09:35.969Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 10.227 seconds (process running for 10.995)
2025-06-04T12:09:36.344Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T12:09:36.346Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T12:09:36.351Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T12:09:36.370Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-b153535a-6c0f-4678-acfa-f30d455e7f41
2025-06-04T12:09:36.372Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T12:09:36.375Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=47, memberId='consumer-weather-stats-group-1-b153535a-6c0f-4678-acfa-f30d455e7f41', protocol='range'}
2025-06-04T12:09:36.383Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 47: {consumer-weather-stats-group-1-b153535a-6c0f-4678-acfa-f30d455e7f41=Assignment(partitions=[weather-requests-0])}
2025-06-04T12:09:36.392Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=47, memberId='consumer-weather-stats-group-1-b153535a-6c0f-4678-acfa-f30d455e7f41', protocol='range'}
2025-06-04T12:09:36.394Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T12:09:36.399Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T12:09:36.410Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=110, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T12:09:36.413Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T12:09:40.958Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:09:40.968Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:09:45.974Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:09:45.976Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:09:50.979Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:09:50.980Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:09:52.741Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T12:09:52.743Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T12:09:52.744Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T12:09:52.746Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T12:09:52.747Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T12:09:52.750Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@71d78cac
2025-06-04T12:09:52.751Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@61d8a491
2025-06-04T12:09:52.752Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T12:09:52.753Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2025-06-04T12:09:52.768Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%B0%D1%80%D0%B0%D1%82%D0%BE%D0%B2", parameters={}
2025-06-04T12:09:52.789Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T12:09:52.848Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Саратов
2025-06-04T12:09:52.850Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T12:00
2025-06-04T12:09:53.851Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T12:09:53.855Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T12:09:53.889Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T12:09:53.920Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T12:09:53.922Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T12:09:53.924Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T12:09:53.925Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749038993922
2025-06-04T12:09:53.929Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@19b1dda1]
2025-06-04T12:09:53.932Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T12:09:53.943Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 16001 with epoch 0
2025-06-04T12:09:53.993Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T12:09:54.005Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Саратов","requestTime":"2025-06-04T12:09:53.788651300Z"}, headers={kafka_offset=110, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@60121229, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Саратов, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749038993942, kafka_groupId=weather-stats-group}]]
2025-06-04T12:09:54.011Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Саратов","requestTime":"2025-06-04T12:09:53.788651300Z"}
2025-06-04T12:09:54.029Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Саратов на 2025-06-04T12:00 успешно сформирован
2025-06-04T12:09:54.062Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T12:09:54.071Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=145, cityId=4, temperature=23.684, date=2025-06-04 12:00:00.0, windSpeed=4.482]]
2025-06-04T12:09:54.092Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 4
2025-06-04T12:09:54.095Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T12:09:54.103Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1179468226 wrapping org.postgresql.jdbc.PgConnection@57920cf6] read-only
2025-06-04T12:09:54.145Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1179468226 wrapping org.postgresql.jdbc.PgConnection@57920cf6]
2025-06-04T12:09:54.148Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T12:09:54.150Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T12:09:54.164Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T12:09:54.176Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:53) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T12:09:54.193Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=111, leaderEpoch=null, metadata=''}}
2025-06-04T12:09:54.196Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=111, leaderEpoch=null, metadata=''}}
2025-06-04T12:09:59.206Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:09:59.209Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:10:04.212Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:10:04.217Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:10:09.230Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:10:09.232Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:10:14.234Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:10:14.236Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:10:19.239Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:10:19.242Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:10:24.244Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:10:24.246Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:10:29.248Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:10:29.251Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:10:34.254Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:10:34.257Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:10:39.259Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:10:39.261Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:10:44.264Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:10:44.266Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:10:49.269Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:10:49.271Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:10:54.274Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:10:54.275Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:10:59.277Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:10:59.288Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:11:04.291Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:11:04.294Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:11:09.296Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:11:09.298Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:11:14.300Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:11:14.303Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:11:19.306Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:11:19.308Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:11:24.312Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:11:24.315Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:11:29.318Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:11:29.321Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:11:34.325Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:11:34.328Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:11:39.330Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:11:39.333Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:11:44.335Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:11:44.338Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:11:49.340Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:11:49.342Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:11:54.345Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:11:54.347Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:11:59.349Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:11:59.352Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:12:04.354Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:12:04.356Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:12:09.359Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:12:09.362Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:12:14.364Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:12:14.366Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:12:19.369Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:12:19.372Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:12:24.375Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:12:24.380Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:12:29.383Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:12:29.386Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:12:34.388Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:12:34.390Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:12:39.394Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:12:39.396Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:12:44.398Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:12:44.400Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:12:49.403Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:12:49.405Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:12:54.407Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:12:54.409Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:12:59.412Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:12:59.415Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:13:04.417Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:13:04.419Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:13:09.421Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:13:09.423Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:13:14.425Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:13:14.428Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:13:19.430Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:13:19.432Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:13:24.434Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:13:24.436Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:13:29.438Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:13:29.441Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:13:34.443Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:13:34.445Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:13:39.447Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:13:39.449Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:13:44.451Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:13:44.453Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:13:49.456Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:13:49.459Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:13:54.462Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:13:54.464Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:13:59.466Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:13:59.468Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:14:04.470Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:14:04.472Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:14:09.475Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:14:09.477Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:14:14.480Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:14:14.482Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:14:19.485Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:14:19.487Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:14:24.489Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:14:24.491Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:14:29.493Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:14:29.497Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:14:34.501Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:14:34.511Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:14:39.515Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:14:39.517Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:14:44.520Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:14:44.532Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:14:49.534Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:14:49.537Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:14:54.538Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:14:54.540Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:14:59.543Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:14:59.546Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:15:04.548Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:15:04.550Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:15:09.552Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:15:09.553Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:15:14.555Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:15:14.557Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:15:19.559Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:15:19.565Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:15:24.569Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:15:24.572Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:15:29.574Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:15:29.577Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:15:34.579Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:15:34.581Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:15:39.582Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:15:39.584Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:15:44.586Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:15:44.588Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:15:49.591Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:15:49.593Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:15:54.596Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:15:54.597Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:15:59.600Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:15:59.602Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:16:04.606Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:16:04.608Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:16:09.609Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:16:09.611Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:16:14.613Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:16:14.615Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:16:19.619Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:16:19.621Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:16:24.623Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:16:24.625Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:16:29.629Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:16:29.631Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:16:34.633Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:16:34.636Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:16:39.638Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:16:39.641Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:16:44.644Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:16:44.657Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:16:49.660Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:16:49.663Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:16:54.666Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:16:54.669Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:16:59.671Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:16:59.673Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:17:04.676Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:17:04.678Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:17:09.680Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:17:09.682Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:17:14.685Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:17:14.687Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:17:19.691Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:17:19.693Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:17:24.695Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:17:24.697Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:17:29.699Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:17:29.707Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:17:34.710Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:17:34.712Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:17:39.714Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:17:39.717Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:17:44.719Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:17:44.722Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:17:49.724Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:17:49.726Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:17:54.728Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:17:54.731Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:17:59.733Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:17:59.736Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:18:04.739Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:18:04.741Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:18:09.743Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:18:09.746Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:18:14.748Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:18:14.750Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:18:19.752Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:18:19.754Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:18:24.757Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:18:24.760Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:18:29.763Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:18:29.766Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:18:34.769Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:18:34.772Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:18:36.405Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node -1 disconnected.
2025-06-04T12:18:39.774Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:18:39.777Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:18:44.779Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:18:44.793Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:18:49.796Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:18:49.798Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:18:54.134Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=demo-producer-1] Node -1 disconnected.
2025-06-04T12:18:54.801Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:18:54.803Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:18:59.806Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:18:59.808Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:19:04.811Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:19:04.813Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:19:09.816Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:19:09.818Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:19:14.820Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:19:14.823Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:19:19.826Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:19:19.830Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:19:24.832Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:19:24.834Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:19:29.836Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:19:29.838Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:19:34.840Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:19:34.842Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:19:39.845Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:19:39.848Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:19:44.850Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:19:44.853Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:19:49.856Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:19:49.859Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:19:54.862Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:19:54.865Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:19:59.869Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:19:59.871Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:20:04.873Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:20:04.876Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:20:09.879Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:20:09.881Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:20:14.884Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:20:14.886Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:20:19.888Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:20:19.891Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:20:24.894Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:20:24.896Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:20:29.898Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:20:29.901Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:20:34.906Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:20:34.908Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:20:39.910Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:20:39.913Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:20:44.915Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:20:44.928Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:20:49.931Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:20:49.932Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:20:54.934Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:20:54.937Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:20:59.938Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:20:59.940Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:21:04.945Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:21:04.948Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:21:09.950Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:21:09.952Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:21:14.953Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:21:14.956Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:21:19.958Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:21:19.960Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:21:24.963Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:21:24.964Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:21:29.966Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:21:29.967Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:21:34.969Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:21:34.971Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:21:39.973Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:21:39.975Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:21:44.977Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:21:44.980Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:21:49.982Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:21:49.983Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:21:54.985Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:21:55.113Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:22:00.121Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:22:00.123Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:22:05.125Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:22:05.148Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:22:10.318Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:22:10.320Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:22:15.322Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:22:15.324Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:22:20.326Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:22:20.328Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:22:25.330Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:22:25.332Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:22:30.335Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:22:30.337Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:22:35.339Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:22:35.342Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:22:40.345Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:22:40.347Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:22:45.350Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:22:45.352Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:22:50.355Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:22:50.358Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:22:55.360Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:22:55.362Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:23:00.364Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:23:00.367Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:23:05.369Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:23:05.371Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:23:10.373Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:23:10.375Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:23:15.380Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:23:15.381Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:23:20.383Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:23:20.386Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:23:25.389Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:23:25.392Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:23:30.394Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:23:30.396Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:23:32.485Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:23:32.487Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T12:23:32.489Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T12:23:32.490Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:23:32.491Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-b153535a-6c0f-4678-acfa-f30d455e7f41 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T12:23:32.494Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:23:32.495Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:23:32.495Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T12:23:32.499Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:23:32.500Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:23:32.664Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:23:32.666Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:23:32.668Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:23:32.669Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:23:32.679Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T12:23:32.681Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T12:23:32.685Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T12:23:32.695Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T12:23:32.700Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T12:23:32.743Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T12:23:32.755Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:23:32.756Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:23:32.758Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:23:32.759Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:23:32.761Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T12:23:32.778Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:23:32.784Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T12:23:32.793Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T12:25:23.331Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T12:25:23.335Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T12:25:23.337Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T12:25:24.610Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:25:24.614Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T12:25:24.676Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:25:24.682Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:25:24.686Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:25:24.688Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 61 ms. Found 0 JDBC repository interfaces.
2025-06-04T12:25:24.710Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:25:24.714Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T12:25:24.899Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 172 ms. Found 3 JPA repository interfaces.
2025-06-04T12:25:24.934Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:25:24.937Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T12:25:24.957Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:25:24.958Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:25:24.960Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:25:24.961Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-06-04T12:25:25.918Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T12:25:25.944Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T12:25:25.945Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T12:25:26.080Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T12:25:26.082Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2676 ms
2025-06-04T12:25:26.289Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T12:25:26.615Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3b152928
2025-06-04T12:25:26.619Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T12:25:26.719Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T12:25:26.720Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T12:25:26.721Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T12:25:26.729Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T12:25:26.731Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T12:25:26.732Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T12:25:26.733Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T12:25:26.734Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T12:25:26.735Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T12:25:26.741Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T12:25:26.743Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T12:25:26.744Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T12:25:26.745Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T12:25:26.752Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:25:26.753Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T12:25:26.756Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T12:25:26.768Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T12:25:26.770Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T12:25:26.771Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T12:25:26.775Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T12:25:26.776Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T12:25:26.786Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T12:25:26.789Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T12:25:26.791Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:25:26.808Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T12:25:26.815Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:25:26.831Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:25:26.833Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T12:25:26.834Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T12:25:26.836Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:25:26.837Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T12:25:26.839Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T12:25:26.863Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.053s)
2025-06-04T12:25:26.869Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T12:25:26.885Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T12:25:26.891Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T12:25:26.897Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 50 of 63M
2025-06-04T12:25:27.015Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T12:25:27.120Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T12:25:27.175Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T12:25:27.657Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T12:25:28.932Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T12:25:29.010Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:25:29.278Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T12:25:30.133Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T12:25:30.139Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T12:25:30.860Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T12:25:30.979Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T12:25:31.052Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T12:25:31.116Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T12:25:31.163Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T12:25:31.225Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T12:25:31.484Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T12:25:31.824Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T12:25:31.877Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T12:25:31.956Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T12:25:32.171Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T12:25:32.174Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T12:25:32.175Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T12:25:32.175Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749039932172
2025-06-04T12:25:32.181Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T12:25:32.199Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:25:32.217Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 9.734 seconds (process running for 10.471)
2025-06-04T12:25:32.563Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T12:25:32.565Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T12:25:32.569Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T12:25:32.588Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-1b455a55-e4bb-4284-bf19-1d14261785eb
2025-06-04T12:25:32.591Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T12:25:32.593Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=49, memberId='consumer-weather-stats-group-1-1b455a55-e4bb-4284-bf19-1d14261785eb', protocol='range'}
2025-06-04T12:25:32.603Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 49: {consumer-weather-stats-group-1-1b455a55-e4bb-4284-bf19-1d14261785eb=Assignment(partitions=[weather-requests-0])}
2025-06-04T12:25:32.610Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=49, memberId='consumer-weather-stats-group-1-1b455a55-e4bb-4284-bf19-1d14261785eb', protocol='range'}
2025-06-04T12:25:32.612Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T12:25:32.616Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T12:25:32.628Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=111, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T12:25:32.631Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T12:25:37.205Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:25:37.208Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:25:41.746Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T12:25:41.748Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T12:25:41.749Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T12:25:41.750Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T12:25:41.752Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T12:25:41.755Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6296e4bf
2025-06-04T12:25:41.756Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@23dc70c1
2025-06-04T12:25:41.758Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T12:25:41.759Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2025-06-04T12:25:41.775Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%B0%D1%80%D0%B0%D1%82%D0%BE%D0%B2", parameters={}
2025-06-04T12:25:41.796Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T12:25:41.848Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Саратов
2025-06-04T12:25:41.850Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T12:00
2025-06-04T12:25:42.210Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:25:42.213Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:25:42.832Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T12:25:42.835Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T12:25:42.854Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T12:25:42.882Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T12:25:42.884Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T12:25:42.885Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T12:25:42.887Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749039942884
2025-06-04T12:25:42.891Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@6abbd9b4]
2025-06-04T12:25:42.892Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T12:25:42.897Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 17001 with epoch 0
2025-06-04T12:25:42.945Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T12:25:42.959Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Саратов","requestTime":"2025-06-04T12:25:42.784251100Z"}, headers={kafka_offset=111, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@49a2ff8e, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Саратов, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749039942905, kafka_groupId=weather-stats-group}]]
2025-06-04T12:25:42.964Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Саратов","requestTime":"2025-06-04T12:25:42.784251100Z"}
2025-06-04T12:25:42.999Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Прогноз для города Саратов на 2025-06-04T12:00 успешно сформирован
2025-06-04T12:25:43.049Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 4
2025-06-04T12:25:43.055Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T12:25:43.055Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@2085838588 wrapping org.postgresql.jdbc.PgConnection@9d9b37d] read-only
2025-06-04T12:25:43.066Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=146, cityId=4, temperature=23.684, date=2025-06-04 12:00:00.0, windSpeed=4.482]]
2025-06-04T12:25:43.081Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@2085838588 wrapping org.postgresql.jdbc.PgConnection@9d9b37d]
2025-06-04T12:25:43.084Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : CityEntity(id=4, name=Саратов, coordX=46.034176, coordY=51.533338)
2025-06-04T12:25:43.085Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 4
2025-06-04T12:25:43.086Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T12:25:43.087Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T12:25:43.088Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T12:25:43.100Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T12:25:43.115Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:55) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T12:25:43.126Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=112, leaderEpoch=null, metadata=''}}
2025-06-04T12:25:43.128Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=112, leaderEpoch=null, metadata=''}}
2025-06-04T12:25:48.141Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:25:48.143Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:25:53.146Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:25:53.148Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:25:58.151Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:25:58.153Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:26:03.156Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:26:03.158Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:26:08.162Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:26:08.164Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:26:13.166Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:26:13.168Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:26:18.170Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:26:18.172Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:26:23.174Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:26:23.177Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:26:28.181Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:26:28.183Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:26:33.186Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:26:33.189Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:26:38.193Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:26:38.195Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:26:43.198Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:26:43.201Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:26:48.204Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:26:48.207Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:26:53.210Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:26:53.212Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:26:58.214Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:26:58.216Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:27:03.218Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:27:03.220Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:27:08.222Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:27:08.224Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:27:13.226Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:27:13.229Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:27:18.231Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:27:18.233Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:27:23.236Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:27:23.239Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:27:28.241Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:27:28.244Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:27:33.246Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:27:33.248Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:27:38.251Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:27:38.253Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:27:43.256Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:27:43.259Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:27:48.261Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:27:48.263Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:27:53.267Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:27:53.269Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:27:58.272Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:27:58.275Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:28:03.278Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:28:03.281Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:28:08.283Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:28:08.285Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:28:13.287Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:28:13.289Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:28:18.292Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:28:18.295Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:28:23.298Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:28:23.300Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:28:28.302Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:28:28.305Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:28:33.307Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:28:33.308Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:28:38.313Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:28:38.315Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:28:43.318Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:28:43.320Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:28:48.323Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:28:48.331Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:28:53.333Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:28:53.335Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:28:58.338Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:28:58.339Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:29:03.342Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:29:03.344Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:29:08.346Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:29:08.347Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:29:13.350Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:29:13.354Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:29:18.359Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:29:18.361Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:29:23.364Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:29:23.367Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:29:28.369Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:29:28.371Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:29:33.375Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:29:33.377Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:29:38.380Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:29:38.382Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:29:43.385Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:29:43.387Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:29:48.389Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:29:48.391Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:29:53.393Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:29:53.395Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:29:58.397Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:29:58.400Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:30:03.404Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:30:03.406Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:30:08.408Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:30:08.410Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:30:13.413Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:30:13.415Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:30:18.418Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:30:18.421Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:30:23.424Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:30:23.426Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:30:28.428Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:30:28.430Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:30:33.433Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:30:33.435Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:30:38.438Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:30:38.440Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:30:43.442Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:30:43.443Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:30:48.446Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:30:48.449Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:30:53.452Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:30:53.455Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:30:58.456Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:30:58.458Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:31:03.460Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:31:03.462Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:31:08.464Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:31:08.466Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:31:13.469Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:31:13.470Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:31:18.473Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:31:18.475Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:31:23.477Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:31:23.481Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:31:28.484Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:31:28.486Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:31:33.489Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:31:33.491Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:31:38.494Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:31:38.496Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:31:43.498Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:31:43.500Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:31:48.503Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:31:48.505Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:31:53.507Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:31:53.509Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:31:58.511Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:31:58.513Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:32:03.516Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:32:03.518Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:32:08.520Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:32:08.523Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:32:13.525Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:32:13.527Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:32:18.530Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:32:18.532Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:32:23.534Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:32:23.536Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:32:28.538Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:32:28.540Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:32:33.543Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:32:33.547Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:32:38.549Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:32:38.551Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:32:43.554Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:32:43.556Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:32:48.558Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:32:48.561Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:32:53.563Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:32:53.565Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:32:58.568Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:32:58.570Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:33:03.572Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:33:03.574Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:33:08.577Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:33:08.579Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:33:13.581Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:33:13.582Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:33:18.585Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:33:18.586Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:33:23.588Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:33:23.590Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:33:28.593Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:33:28.595Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:33:33.598Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:33:33.600Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:33:38.603Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:33:38.604Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:33:43.606Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:33:43.609Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:33:48.612Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:33:48.614Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:33:53.616Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:33:53.618Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:33:58.621Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:33:58.623Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:34:03.625Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:34:03.627Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:34:08.629Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:34:08.631Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:34:13.633Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:34:13.635Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:34:18.637Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:34:18.639Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:34:23.641Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:34:23.643Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:34:28.645Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:34:28.646Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:34:32.845Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node -1 disconnected.
2025-06-04T12:34:33.649Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:34:33.651Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:34:38.654Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:34:38.656Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:34:43.146Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=demo-producer-1] Node -1 disconnected.
2025-06-04T12:34:43.657Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:34:43.659Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:34:48.662Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:34:48.664Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:34:53.666Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:34:53.668Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:34:58.670Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:34:58.673Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:35:03.676Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:35:03.679Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:35:08.685Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:35:08.687Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:35:13.689Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:35:13.692Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:35:18.696Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:35:18.698Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:35:23.700Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:35:23.702Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:35:28.706Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:35:28.709Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:35:33.711Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:35:33.714Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:35:38.716Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:35:38.726Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:35:43.727Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:35:43.728Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:35:48.730Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:35:48.732Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:35:49.008Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:35:49.010Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T12:35:49.011Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T12:35:49.013Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:35:49.014Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-1b455a55-e4bb-4284-bf19-1d14261785eb sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T12:35:49.016Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:35:49.017Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:35:49.018Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T12:35:49.022Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:35:49.024Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:35:49.319Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:35:49.321Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:35:49.323Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:35:49.324Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:35:49.335Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T12:35:49.337Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T12:35:49.348Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T12:35:49.351Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T12:35:49.355Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T12:35:49.409Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T12:35:49.419Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:35:49.420Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:35:49.421Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:35:49.422Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:35:49.424Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T12:35:49.441Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:35:49.447Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T12:35:49.455Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T12:38:03.768Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T12:38:03.773Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T12:38:03.775Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T12:38:04.958Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:38:04.962Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T12:38:05.016Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:38:05.020Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:38:05.023Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:38:05.025Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 53 ms. Found 0 JDBC repository interfaces.
2025-06-04T12:38:05.046Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:38:05.049Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T12:38:05.212Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 153 ms. Found 3 JPA repository interfaces.
2025-06-04T12:38:05.246Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:38:05.249Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T12:38:05.266Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:38:05.268Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:38:05.269Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:38:05.271Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-06-04T12:38:06.211Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T12:38:06.234Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T12:38:06.237Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T12:38:06.392Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T12:38:06.394Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2551 ms
2025-06-04T12:38:06.600Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T12:38:06.913Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@648ee871
2025-06-04T12:38:06.917Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T12:38:07.028Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T12:38:07.030Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T12:38:07.032Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T12:38:07.038Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T12:38:07.039Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T12:38:07.040Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T12:38:07.041Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T12:38:07.042Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T12:38:07.044Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T12:38:07.050Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T12:38:07.051Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T12:38:07.052Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T12:38:07.053Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T12:38:07.059Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:38:07.061Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T12:38:07.064Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T12:38:07.077Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T12:38:07.078Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T12:38:07.079Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T12:38:07.082Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T12:38:07.083Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T12:38:07.092Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T12:38:07.094Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T12:38:07.096Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:38:07.109Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T12:38:07.115Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:38:07.130Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:38:07.131Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T12:38:07.132Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T12:38:07.134Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:38:07.135Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T12:38:07.136Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T12:38:07.156Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.044s)
2025-06-04T12:38:07.161Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T12:38:07.176Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T12:38:07.183Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T12:38:07.189Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 51 of 69M
2025-06-04T12:38:07.316Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T12:38:07.421Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T12:38:07.477Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T12:38:07.937Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T12:38:09.388Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T12:38:09.478Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:38:09.875Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T12:38:10.908Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T12:38:10.915Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T12:38:11.706Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T12:38:11.867Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T12:38:11.943Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T12:38:12.005Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T12:38:12.058Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T12:38:12.125Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T12:38:12.349Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T12:38:12.759Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T12:38:12.814Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T12:38:12.893Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T12:38:13.105Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T12:38:13.109Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T12:38:13.111Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T12:38:13.112Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749040693107
2025-06-04T12:38:13.119Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T12:38:13.141Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:38:13.154Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 10.247 seconds (process running for 11.016)
2025-06-04T12:38:13.548Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T12:38:13.553Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T12:38:13.559Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T12:38:13.579Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-c7a45c31-372c-478e-88de-bbaa976cd7f3
2025-06-04T12:38:13.581Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T12:38:13.584Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=51, memberId='consumer-weather-stats-group-1-c7a45c31-372c-478e-88de-bbaa976cd7f3', protocol='range'}
2025-06-04T12:38:13.593Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 51: {consumer-weather-stats-group-1-c7a45c31-372c-478e-88de-bbaa976cd7f3=Assignment(partitions=[weather-requests-0])}
2025-06-04T12:38:13.599Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=51, memberId='consumer-weather-stats-group-1-c7a45c31-372c-478e-88de-bbaa976cd7f3', protocol='range'}
2025-06-04T12:38:13.601Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T12:38:13.605Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T12:38:13.617Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=112, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T12:38:13.620Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T12:38:18.148Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:38:18.151Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:38:23.153Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:38:23.155Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:38:24.296Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T12:38:24.298Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T12:38:24.300Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T12:38:24.301Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T12:38:24.302Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T12:38:24.306Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6065bcb7
2025-06-04T12:38:24.308Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@18df26a1
2025-06-04T12:38:24.310Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T12:38:24.312Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-06-04T12:38:24.327Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%B0%D1%80%D0%B0%D1%82%D0%BE%D0%B2", parameters={}
2025-06-04T12:38:24.358Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T12:38:24.446Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Саратов
2025-06-04T12:38:24.447Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T12:00
2025-06-04T12:38:25.468Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T12:38:25.472Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T12:38:25.493Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T12:38:25.522Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T12:38:25.524Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T12:38:25.526Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T12:38:25.527Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749040705524
2025-06-04T12:38:25.529Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T12:38:25.530Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@5e6aef06]
2025-06-04T12:38:25.549Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 18001 with epoch 0
2025-06-04T12:38:25.605Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T12:38:25.619Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Саратов","requestTime":"2025-06-04T12:38:25.424632900Z"}, headers={kafka_offset=112, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@62901428, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Саратов, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749040705544, kafka_groupId=weather-stats-group}]]
2025-06-04T12:38:25.624Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Саратов","requestTime":"2025-06-04T12:38:25.424632900Z"}
2025-06-04T12:38:25.640Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Прогноз для города Саратов на 2025-06-04T12:00 успешно сформирован
2025-06-04T12:38:25.673Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T12:38:25.683Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=147, cityId=4, temperature=23.684, date=2025-06-04 12:00:00.0, windSpeed=4.482]]
2025-06-04T12:38:25.699Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 4
2025-06-04T12:38:25.704Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T12:38:25.705Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@622990667 wrapping org.postgresql.jdbc.PgConnection@22222d44] read-only
2025-06-04T12:38:25.729Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@622990667 wrapping org.postgresql.jdbc.PgConnection@22222d44]
2025-06-04T12:38:25.731Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T12:38:25.732Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T12:38:25.745Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.addRequestCount(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:53) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:529) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:647) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy186.executeUpdate(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:267) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	... 27 common frames omitted

2025-06-04T12:38:25.756Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=113, leaderEpoch=null, metadata=''}}
2025-06-04T12:38:25.758Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=113, leaderEpoch=null, metadata=''}}
2025-06-04T12:38:30.769Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:38:30.771Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:38:35.773Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:38:35.776Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:38:40.778Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:38:40.780Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:38:45.783Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:38:45.786Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:38:50.788Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:38:50.790Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:38:55.792Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:38:55.795Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:39:00.799Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:39:00.801Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:39:05.804Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:39:05.806Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:39:10.808Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:39:10.810Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:39:15.812Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:39:15.815Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:39:20.818Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:39:20.820Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:39:25.823Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:39:25.826Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:39:30.829Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:39:30.832Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:39:35.834Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:39:35.837Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:39:40.839Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:39:40.841Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:39:45.844Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:39:45.846Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:39:50.849Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:39:50.852Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:39:55.854Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:39:55.857Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:40:00.860Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:40:00.862Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:40:05.864Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:40:05.867Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:40:10.869Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:40:10.871Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:40:15.874Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:40:15.877Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:40:20.880Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:40:20.882Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:40:25.886Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:40:25.889Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:40:30.892Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:40:30.894Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:40:35.896Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:40:35.898Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:40:40.901Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:40:40.904Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:40:45.907Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:40:45.910Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:40:50.912Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:40:50.914Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:40:55.916Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:40:55.918Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:41:00.920Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:41:00.922Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:41:05.924Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:41:05.927Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:41:10.929Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:41:10.931Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:41:15.933Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:41:15.935Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:41:20.938Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:41:20.940Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:41:25.942Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:41:25.944Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:41:30.947Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:41:30.948Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:41:35.951Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:41:35.954Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:41:40.956Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:41:40.959Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:41:45.962Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:41:45.964Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:41:50.966Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:41:50.969Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:41:55.971Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:41:55.974Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:42:00.976Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:42:00.978Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:42:05.982Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:42:05.984Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:42:10.987Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:42:10.989Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:42:15.992Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:42:15.994Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:42:20.997Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:42:20.999Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:42:26.001Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:42:26.004Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:42:31.006Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:42:31.008Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:42:36.012Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:42:36.014Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:42:41.016Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:42:41.018Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:42:46.020Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:42:46.022Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:42:51.026Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:42:51.028Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:42:56.030Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:42:56.032Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:43:01.034Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:43:01.036Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:43:06.039Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:43:06.041Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:43:11.043Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:43:11.046Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:43:16.049Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:43:16.052Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:43:21.054Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:43:21.056Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:43:26.058Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:43:26.060Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:43:31.062Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:43:31.064Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:43:36.066Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:43:36.069Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:43:41.074Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:43:41.076Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:43:46.079Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:43:46.080Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:43:51.082Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:43:51.085Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:43:56.087Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:43:56.089Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:44:01.091Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:44:01.093Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:44:06.095Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:44:06.097Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:44:11.099Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:44:11.101Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:44:16.104Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:44:16.106Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:44:21.108Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:44:21.109Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:44:26.112Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:44:26.114Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:44:31.122Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:44:31.124Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:44:36.125Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:44:36.126Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:44:41.129Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:44:41.132Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:44:46.134Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:44:46.137Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:44:51.137Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:44:51.139Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:44:56.141Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:44:56.144Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:45:01.145Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:45:01.147Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:45:06.149Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:45:06.151Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:45:11.153Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:45:11.155Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:45:16.158Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:45:16.159Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:45:21.163Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:45:21.165Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:45:26.167Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:45:26.169Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:45:31.171Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:45:31.174Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:45:36.175Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:45:36.177Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:45:41.180Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:45:41.183Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:45:46.185Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:45:46.187Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:45:51.191Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:45:51.193Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:45:56.195Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:45:56.197Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:46:01.201Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:46:01.203Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:46:06.206Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:46:06.208Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:46:11.210Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:46:11.212Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:46:16.214Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:46:16.217Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:46:21.219Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:46:21.221Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:46:26.223Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:46:26.225Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:46:31.228Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:46:31.230Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:46:36.232Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:46:36.234Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:46:41.236Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:46:41.239Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:46:45.418Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:46:45.420Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T12:46:45.422Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T12:46:45.423Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:46:45.424Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-c7a45c31-372c-478e-88de-bbaa976cd7f3 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T12:46:45.426Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:46:45.426Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:46:45.427Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T12:46:45.431Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:46:45.433Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:46:45.840Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:46:45.841Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:46:45.842Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:46:45.843Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:46:45.852Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T12:46:45.854Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T12:46:45.858Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T12:46:45.862Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T12:46:45.866Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T12:46:45.912Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T12:46:45.922Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:46:45.923Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:46:45.924Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:46:45.925Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:46:45.926Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T12:46:45.944Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:46:45.950Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T12:46:45.958Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T12:48:57.103Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T12:48:57.107Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T12:48:57.110Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T12:48:58.445Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:48:58.449Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T12:48:58.501Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:48:58.505Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:48:58.509Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:48:58.514Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 52 ms. Found 0 JDBC repository interfaces.
2025-06-04T12:48:58.536Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:48:58.540Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T12:48:58.715Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 165 ms. Found 3 JPA repository interfaces.
2025-06-04T12:48:58.745Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:48:58.748Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T12:48:58.767Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:48:58.768Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:48:58.770Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:48:58.772Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-06-04T12:48:59.735Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T12:48:59.761Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T12:48:59.773Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T12:48:59.917Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T12:48:59.919Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2742 ms
2025-06-04T12:49:00.106Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T12:49:00.412Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3b152928
2025-06-04T12:49:00.417Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T12:49:00.529Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T12:49:00.531Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T12:49:00.532Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T12:49:00.538Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T12:49:00.540Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T12:49:00.541Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T12:49:00.542Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T12:49:00.543Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T12:49:00.544Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T12:49:00.550Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T12:49:00.552Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T12:49:00.553Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T12:49:00.554Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T12:49:00.561Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:49:00.562Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T12:49:00.564Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T12:49:00.577Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T12:49:00.578Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T12:49:00.579Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T12:49:00.583Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T12:49:00.584Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T12:49:00.593Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T12:49:00.596Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T12:49:00.598Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:49:00.614Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T12:49:00.620Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:49:00.636Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:49:00.637Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T12:49:00.638Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T12:49:00.641Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:49:00.642Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T12:49:00.642Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T12:49:00.665Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.048s)
2025-06-04T12:49:00.671Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T12:49:00.686Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T12:49:00.691Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T12:49:00.697Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 53 of 70M
2025-06-04T12:49:00.821Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T12:49:00.924Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T12:49:00.980Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T12:49:01.446Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T12:49:02.886Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T12:49:02.970Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:49:03.327Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T12:49:04.339Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T12:49:04.348Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T12:49:05.198Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T12:49:05.326Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T12:49:05.421Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T12:49:05.470Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T12:49:05.512Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T12:49:05.572Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T12:49:05.785Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T12:49:06.199Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T12:49:06.261Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T12:49:06.342Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T12:49:06.569Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T12:49:06.573Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T12:49:06.574Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T12:49:06.575Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749041346571
2025-06-04T12:49:06.581Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T12:49:06.596Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:49:06.615Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 10.407 seconds (process running for 11.169)
2025-06-04T12:49:07.018Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T12:49:07.020Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T12:49:07.025Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T12:49:07.045Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-46de8b27-7383-425f-8c61-28295f7bc81e
2025-06-04T12:49:07.047Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T12:49:07.051Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=53, memberId='consumer-weather-stats-group-1-46de8b27-7383-425f-8c61-28295f7bc81e', protocol='range'}
2025-06-04T12:49:07.062Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 53: {consumer-weather-stats-group-1-46de8b27-7383-425f-8c61-28295f7bc81e=Assignment(partitions=[weather-requests-0])}
2025-06-04T12:49:07.078Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=53, memberId='consumer-weather-stats-group-1-46de8b27-7383-425f-8c61-28295f7bc81e', protocol='range'}
2025-06-04T12:49:07.080Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T12:49:07.085Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T12:49:07.094Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=113, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T12:49:07.097Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T12:49:11.603Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:49:11.608Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:49:12.167Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T12:49:12.169Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T12:49:12.171Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T12:49:12.173Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T12:49:12.174Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T12:49:12.178Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@18df26a1
2025-06-04T12:49:12.179Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@220cda54
2025-06-04T12:49:12.181Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T12:49:12.183Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2025-06-04T12:49:12.207Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%B0%D1%80%D0%B0%D1%82%D0%BE%D0%B2", parameters={}
2025-06-04T12:49:12.231Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T12:49:12.295Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Саратов
2025-06-04T12:49:12.297Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T12:00
2025-06-04T12:49:13.351Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T12:49:13.354Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T12:49:13.371Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T12:49:13.398Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T12:49:13.400Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T12:49:13.401Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T12:49:13.403Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749041353400
2025-06-04T12:49:13.405Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@2a94531a]
2025-06-04T12:49:13.406Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T12:49:13.419Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 19001 with epoch 0
2025-06-04T12:49:13.457Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T12:49:13.467Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Саратов","requestTime":"2025-06-04T12:49:13.306692100Z"}, headers={kafka_offset=113, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@6edde9f4, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Саратов, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749041353418, kafka_groupId=weather-stats-group}]]
2025-06-04T12:49:13.472Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Саратов","requestTime":"2025-06-04T12:49:13.306692100Z"}
2025-06-04T12:49:13.509Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Прогноз для города Саратов на 2025-06-04T12:00 успешно сформирован
2025-06-04T12:49:13.540Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T12:49:13.551Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=148, cityId=4, temperature=23.684, date=2025-06-04 12:00:00.0, windSpeed=4.482]]
2025-06-04T12:49:13.551Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 4
2025-06-04T12:49:13.557Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@802211025 wrapping org.postgresql.jdbc.PgConnection@40582edb] read-only
2025-06-04T12:49:13.581Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T12:49:13.598Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@802211025 wrapping org.postgresql.jdbc.PgConnection@40582edb]
2025-06-04T12:49:13.600Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T12:49:13.603Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 12:49:13.3066921
2025-06-04T12:49:13.604Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T12:49:13.619Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.addRequestCount(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:529) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:647) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy186.executeUpdate(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:267) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	... 27 common frames omitted

2025-06-04T12:49:13.632Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=114, leaderEpoch=null, metadata=''}}
2025-06-04T12:49:13.634Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=114, leaderEpoch=null, metadata=''}}
2025-06-04T12:49:18.646Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:49:18.648Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:49:23.651Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:49:23.657Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:49:28.661Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:49:28.663Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:49:33.665Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:49:33.667Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:49:38.670Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:49:38.672Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:49:43.675Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:49:43.677Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:49:48.679Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:49:48.682Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:49:53.686Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:49:53.688Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:49:58.691Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:49:58.694Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:50:03.699Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:50:03.701Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:50:08.703Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:50:08.705Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:50:13.708Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:50:13.710Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:50:18.712Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:50:18.714Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:50:23.717Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:50:23.719Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:50:28.721Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:50:28.723Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:50:33.725Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:50:33.726Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:50:38.729Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:50:38.731Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:50:43.734Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:50:43.736Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:50:48.738Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:50:48.740Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:50:53.744Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:50:53.746Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:50:58.749Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:50:58.751Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:51:03.754Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:51:03.756Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:51:08.759Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:51:08.761Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:51:13.764Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:51:13.766Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:51:18.768Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:51:18.771Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:51:23.774Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:51:23.776Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:51:28.778Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:51:28.781Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:51:33.785Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:51:33.787Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:51:38.789Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:51:38.791Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:51:43.794Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:51:43.796Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:51:48.799Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:51:48.801Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:51:53.803Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:51:53.805Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:51:58.808Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:51:58.810Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:52:03.814Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:52:03.817Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:52:08.819Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:52:08.822Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:52:13.826Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:52:13.828Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:52:18.833Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:52:18.835Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:52:23.837Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:52:23.839Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:52:28.841Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:52:28.843Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:52:33.844Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:52:33.846Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:52:38.848Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:52:38.850Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:52:43.856Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:52:43.859Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:52:45.808Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:52:45.810Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T12:52:45.812Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T12:52:45.814Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:52:45.815Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-46de8b27-7383-425f-8c61-28295f7bc81e sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T12:52:45.817Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:52:45.818Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:52:45.819Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T12:52:45.823Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:52:45.824Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:52:45.894Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:52:45.896Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:52:45.897Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:52:45.898Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:52:45.909Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T12:52:45.911Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T12:52:45.914Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T12:52:45.917Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T12:52:45.921Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T12:52:45.971Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T12:52:45.979Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:52:45.981Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:52:45.982Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:52:45.983Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:52:45.986Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T12:52:46.001Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:52:46.006Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T12:52:46.013Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T12:54:47.374Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T12:54:47.378Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T12:54:47.380Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T12:54:48.574Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:54:48.578Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T12:54:48.629Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:54:48.633Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:54:48.636Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:54:48.637Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 50 ms. Found 0 JDBC repository interfaces.
2025-06-04T12:54:48.659Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:54:48.663Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T12:54:48.842Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 167 ms. Found 3 JPA repository interfaces.
2025-06-04T12:54:48.868Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:54:48.871Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T12:54:48.890Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:54:48.892Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:54:48.894Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:54:48.895Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-06-04T12:54:49.821Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T12:54:49.845Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T12:54:49.847Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T12:54:49.983Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T12:54:49.985Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2534 ms
2025-06-04T12:54:50.193Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T12:54:50.478Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@378bd86d
2025-06-04T12:54:50.482Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T12:54:50.592Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T12:54:50.594Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T12:54:50.595Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T12:54:50.601Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T12:54:50.603Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T12:54:50.605Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T12:54:50.606Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T12:54:50.607Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T12:54:50.609Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T12:54:50.614Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T12:54:50.615Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T12:54:50.616Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T12:54:50.617Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T12:54:50.623Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:54:50.624Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T12:54:50.626Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T12:54:50.637Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T12:54:50.639Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T12:54:50.641Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T12:54:50.644Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T12:54:50.645Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T12:54:50.655Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T12:54:50.658Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T12:54:50.659Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:54:50.682Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T12:54:50.690Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:54:50.705Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:54:50.707Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T12:54:50.708Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T12:54:50.711Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:54:50.712Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T12:54:50.713Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T12:54:50.736Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.051s)
2025-06-04T12:54:50.744Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T12:54:50.759Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T12:54:50.765Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T12:54:50.773Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 47 of 64M
2025-06-04T12:54:50.910Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T12:54:51.015Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T12:54:51.074Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T12:54:51.539Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T12:54:52.964Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T12:54:53.038Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:54:53.303Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T12:54:54.204Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T12:54:54.211Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T12:54:54.952Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T12:54:55.080Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T12:54:55.155Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T12:54:55.216Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T12:54:55.275Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T12:54:55.349Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T12:54:55.623Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T12:54:56.000Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T12:54:56.052Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T12:54:56.149Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T12:54:56.374Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T12:54:56.378Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T12:54:56.379Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T12:54:56.380Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749041696376
2025-06-04T12:54:56.385Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T12:54:56.399Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:54:56.413Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 9.885 seconds (process running for 10.63)
2025-06-04T12:54:56.798Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T12:54:56.800Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T12:54:56.804Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T12:54:56.829Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-ee8a35ff-a307-46f3-a8dc-9f20a8aed680
2025-06-04T12:54:56.831Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T12:54:56.835Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=55, memberId='consumer-weather-stats-group-1-ee8a35ff-a307-46f3-a8dc-9f20a8aed680', protocol='range'}
2025-06-04T12:54:56.845Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 55: {consumer-weather-stats-group-1-ee8a35ff-a307-46f3-a8dc-9f20a8aed680=Assignment(partitions=[weather-requests-0])}
2025-06-04T12:54:56.863Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=55, memberId='consumer-weather-stats-group-1-ee8a35ff-a307-46f3-a8dc-9f20a8aed680', protocol='range'}
2025-06-04T12:54:56.866Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T12:54:56.870Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T12:54:56.881Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=114, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T12:54:56.883Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T12:55:01.406Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:55:01.410Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:55:06.412Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:55:06.414Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:55:07.638Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T12:55:07.640Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T12:55:07.642Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T12:55:07.644Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T12:55:07.645Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T12:55:07.648Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1842dc39
2025-06-04T12:55:07.649Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@1ee6434
2025-06-04T12:55:07.651Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T12:55:07.652Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2025-06-04T12:55:07.678Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%B0%D1%80%D0%B0%D1%82%D0%BE%D0%B2", parameters={}
2025-06-04T12:55:07.698Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T12:55:07.745Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Саратов
2025-06-04T12:55:07.747Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T12:00
2025-06-04T12:55:08.724Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T12:55:08.727Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T12:55:08.747Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T12:55:08.776Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T12:55:08.778Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T12:55:08.781Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T12:55:08.782Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749041708777
2025-06-04T12:55:08.784Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T12:55:08.785Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@64a57337]
2025-06-04T12:55:08.800Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 20001 with epoch 0
2025-06-04T12:55:08.858Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T12:55:08.869Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Саратов","requestTime":"2025-06-04T12:55:08.682562100Z"}, headers={kafka_offset=114, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@530e1333, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Саратов, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749041708799, kafka_groupId=weather-stats-group}]]
2025-06-04T12:55:08.874Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Саратов","requestTime":"2025-06-04T12:55:08.682562100Z"}
2025-06-04T12:55:08.901Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Саратов на 2025-06-04T12:00 успешно сформирован
2025-06-04T12:55:08.931Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T12:55:08.942Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=149, cityId=4, temperature=23.684, date=2025-06-04 12:00:00.0, windSpeed=4.482]]
2025-06-04T12:55:08.961Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 4
2025-06-04T12:55:08.963Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T12:55:08.967Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1128586631 wrapping org.postgresql.jdbc.PgConnection@8fc5bf9] read-only
2025-06-04T12:55:08.992Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1128586631 wrapping org.postgresql.jdbc.PgConnection@8fc5bf9]
2025-06-04T12:55:08.994Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T12:55:08.995Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 12:55:08.6825621
2025-06-04T12:55:08.996Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T12:55:09.008Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.addRequestCount(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:529) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:647) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy186.executeUpdate(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:267) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	... 27 common frames omitted

2025-06-04T12:55:09.020Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=115, leaderEpoch=null, metadata=''}}
2025-06-04T12:55:09.023Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=115, leaderEpoch=null, metadata=''}}
2025-06-04T12:55:14.031Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:55:14.034Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:55:19.037Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:55:19.039Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:55:24.041Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:55:24.044Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:55:29.046Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:55:29.048Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:55:34.050Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:55:34.052Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:55:36.513Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:55:36.515Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T12:55:36.517Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T12:55:36.518Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:55:36.519Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-ee8a35ff-a307-46f3-a8dc-9f20a8aed680 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T12:55:36.521Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:55:36.523Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:55:36.524Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T12:55:36.529Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:55:36.530Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:55:36.771Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:55:36.773Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:55:36.774Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:55:36.775Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:55:36.792Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T12:55:36.794Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T12:55:36.798Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T12:55:36.801Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T12:55:36.806Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T12:55:36.855Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T12:55:36.864Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:55:36.865Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:55:36.867Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:55:36.867Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:55:36.869Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T12:55:36.888Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:55:36.895Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T12:55:36.900Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T12:57:44.416Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T12:57:44.420Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T12:57:44.422Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T12:57:45.791Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:57:45.795Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T12:57:45.852Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:57:45.856Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:57:45.859Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T12:57:45.861Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 49 ms. Found 0 JDBC repository interfaces.
2025-06-04T12:57:45.884Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:57:45.888Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T12:57:46.086Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 187 ms. Found 3 JPA repository interfaces.
2025-06-04T12:57:46.113Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T12:57:46.116Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T12:57:46.135Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:57:46.137Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:57:46.139Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T12:57:46.141Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-06-04T12:57:47.154Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T12:57:47.180Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T12:57:47.181Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T12:57:47.335Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T12:57:47.336Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2834 ms
2025-06-04T12:57:47.547Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T12:57:47.872Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@375b5b7f
2025-06-04T12:57:47.876Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T12:57:48.002Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T12:57:48.004Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T12:57:48.005Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T12:57:48.010Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T12:57:48.012Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T12:57:48.013Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T12:57:48.015Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T12:57:48.017Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T12:57:48.019Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T12:57:48.025Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T12:57:48.026Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T12:57:48.027Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T12:57:48.028Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T12:57:48.035Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:57:48.037Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T12:57:48.039Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T12:57:48.050Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T12:57:48.051Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T12:57:48.053Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T12:57:48.056Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T12:57:48.058Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T12:57:48.067Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T12:57:48.070Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T12:57:48.071Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:57:48.087Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T12:57:48.095Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:57:48.108Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:57:48.110Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T12:57:48.111Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T12:57:48.112Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T12:57:48.114Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T12:57:48.114Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T12:57:48.138Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.047s)
2025-06-04T12:57:48.143Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T12:57:48.157Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T12:57:48.163Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T12:57:48.170Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 50 of 64M
2025-06-04T12:57:48.311Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T12:57:48.436Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T12:57:48.505Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T12:57:49.072Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T12:57:50.642Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T12:57:50.730Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:57:51.092Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T12:57:52.125Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T12:57:52.132Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", beanRef="__listener", contentTypeConverter="", containerFactory="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T12:57:52.971Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T12:57:53.115Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T12:57:53.181Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T12:57:53.239Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T12:57:53.284Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T12:57:53.370Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T12:57:53.597Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T12:57:53.991Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T12:57:54.075Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T12:57:54.156Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T12:57:54.399Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T12:57:54.403Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T12:57:54.404Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T12:57:54.405Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749041874401
2025-06-04T12:57:54.411Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T12:57:54.423Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:57:54.440Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 10.884 seconds (process running for 11.631)
2025-06-04T12:57:54.835Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T12:57:54.837Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T12:57:54.840Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T12:57:54.862Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-4916571a-2b11-4317-9f41-a38fc9367d17
2025-06-04T12:57:54.864Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T12:57:54.867Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=57, memberId='consumer-weather-stats-group-1-4916571a-2b11-4317-9f41-a38fc9367d17', protocol='range'}
2025-06-04T12:57:54.876Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 57: {consumer-weather-stats-group-1-4916571a-2b11-4317-9f41-a38fc9367d17=Assignment(partitions=[weather-requests-0])}
2025-06-04T12:57:54.897Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=57, memberId='consumer-weather-stats-group-1-4916571a-2b11-4317-9f41-a38fc9367d17', protocol='range'}
2025-06-04T12:57:54.899Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T12:57:54.902Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T12:57:54.913Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=115, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T12:57:54.916Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T12:57:59.428Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:57:59.431Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:58:04.435Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:58:04.437Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:58:08.796Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T12:58:08.798Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T12:58:08.800Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T12:58:08.801Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T12:58:08.803Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T12:58:08.807Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5c459194
2025-06-04T12:58:08.808Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@39109603
2025-06-04T12:58:08.809Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T12:58:08.810Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2025-06-04T12:58:08.826Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%B0%D1%80%D0%B0%D1%82%D0%BE%D0%B2", parameters={}
2025-06-04T12:58:08.847Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T12:58:08.897Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Саратов
2025-06-04T12:58:08.899Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T12:00
2025-06-04T12:58:09.439Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:58:09.441Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:58:09.809Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T12:58:09.814Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T12:58:09.835Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T12:58:09.865Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T12:58:09.867Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T12:58:09.868Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T12:58:09.869Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749041889867
2025-06-04T12:58:09.873Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@71bb01fb]
2025-06-04T12:58:09.874Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T12:58:09.892Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 21001 with epoch 0
2025-06-04T12:58:09.939Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T12:58:09.960Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Саратов","requestTime":"2025-06-04T12:58:09.767072100Z"}, headers={kafka_offset=115, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@2cc0e40d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Саратов, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749041889888, kafka_groupId=weather-stats-group}]]
2025-06-04T12:58:09.964Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Саратов","requestTime":"2025-06-04T12:58:09.767072100Z"}
2025-06-04T12:58:09.978Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Прогноз для города Саратов на 2025-06-04T12:00 успешно сформирован
2025-06-04T12:58:10.010Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T12:58:10.023Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=150, cityId=4, temperature=23.684, date=2025-06-04 12:00:00.0, windSpeed=4.482]]
2025-06-04T12:58:10.042Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 4
2025-06-04T12:58:10.044Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T12:58:10.049Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@761309979 wrapping org.postgresql.jdbc.PgConnection@2641ff60] read-only
2025-06-04T12:58:10.075Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@761309979 wrapping org.postgresql.jdbc.PgConnection@2641ff60]
2025-06-04T12:58:10.076Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T12:58:10.078Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 12:58:09.7670721
2025-06-04T12:58:10.079Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T12:58:10.090Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.addRequestCount(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:529) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:647) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy186.executeUpdate(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:267) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	... 27 common frames omitted

2025-06-04T12:58:10.101Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=116, leaderEpoch=null, metadata=''}}
2025-06-04T12:58:10.104Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=116, leaderEpoch=null, metadata=''}}
2025-06-04T12:58:15.113Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:58:15.115Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:58:20.117Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:58:20.120Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:58:25.122Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:58:25.124Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:58:30.127Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:58:30.130Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:58:35.132Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:58:35.135Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:58:40.138Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:58:40.140Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:58:45.144Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:58:45.147Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:58:50.149Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:58:50.151Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:58:55.153Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T12:58:55.155Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:58:58.139Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:58:58.141Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T12:58:58.143Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T12:58:58.144Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T12:58:58.146Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-4916571a-2b11-4317-9f41-a38fc9367d17 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T12:58:58.148Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:58:58.149Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:58:58.150Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T12:58:58.154Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T12:58:58.155Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T12:58:58.612Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:58:58.613Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:58:58.615Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:58:58.616Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:58:58.628Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T12:58:58.630Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T12:58:58.633Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T12:58:58.636Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T12:58:58.641Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T12:58:58.681Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T12:58:58.689Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T12:58:58.690Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T12:58:58.691Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T12:58:58.692Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T12:58:58.693Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T12:58:58.709Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T12:58:58.714Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T12:58:58.724Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T13:01:06.214Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T13:01:06.218Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T13:01:06.220Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T13:01:07.436Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:01:07.441Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T13:01:07.492Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:01:07.496Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:01:07.499Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:01:07.501Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 50 ms. Found 0 JDBC repository interfaces.
2025-06-04T13:01:07.525Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:01:07.530Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T13:01:07.704Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 165 ms. Found 3 JPA repository interfaces.
2025-06-04T13:01:07.734Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:01:07.740Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T13:01:07.760Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:01:07.761Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:01:07.763Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:01:07.764Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-06-04T13:01:08.756Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T13:01:08.790Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T13:01:08.793Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T13:01:08.928Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T13:01:08.929Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2640 ms
2025-06-04T13:01:09.132Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T13:01:09.511Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@bcb09a6
2025-06-04T13:01:09.516Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T13:01:09.700Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T13:01:09.702Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T13:01:09.703Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T13:01:09.713Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T13:01:09.723Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T13:01:09.732Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T13:01:09.734Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T13:01:09.736Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T13:01:09.739Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T13:01:09.747Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T13:01:09.748Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T13:01:09.749Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T13:01:09.751Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T13:01:09.761Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:01:09.763Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T13:01:09.765Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T13:01:09.779Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T13:01:09.781Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T13:01:09.782Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T13:01:09.785Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T13:01:09.786Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T13:01:09.796Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T13:01:09.800Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T13:01:09.801Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:01:09.820Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T13:01:09.830Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:01:09.845Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:01:09.846Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T13:01:09.847Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T13:01:09.850Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:01:09.851Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T13:01:09.854Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T13:01:09.875Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.051s)
2025-06-04T13:01:09.881Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T13:01:09.896Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T13:01:09.902Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T13:01:09.907Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 54 of 70M
2025-06-04T13:01:10.058Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T13:01:10.186Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T13:01:10.248Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T13:01:10.734Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T13:01:12.034Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T13:01:12.107Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T13:01:12.415Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T13:01:13.349Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T13:01:13.358Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T13:01:14.096Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T13:01:14.239Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T13:01:14.326Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T13:01:14.385Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T13:01:14.429Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T13:01:14.516Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T13:01:14.732Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T13:01:15.112Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T13:01:15.166Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T13:01:15.247Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T13:01:15.451Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T13:01:15.455Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T13:01:15.456Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T13:01:15.457Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749042075453
2025-06-04T13:01:15.463Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T13:01:15.474Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:01:15.486Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 10.108 seconds (process running for 10.866)
2025-06-04T13:01:15.882Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T13:01:15.884Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T13:01:15.888Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T13:01:15.910Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-83acdd38-e32a-45b1-910f-ebcc250cfeed
2025-06-04T13:01:15.912Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T13:01:15.916Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=59, memberId='consumer-weather-stats-group-1-83acdd38-e32a-45b1-910f-ebcc250cfeed', protocol='range'}
2025-06-04T13:01:15.928Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 59: {consumer-weather-stats-group-1-83acdd38-e32a-45b1-910f-ebcc250cfeed=Assignment(partitions=[weather-requests-0])}
2025-06-04T13:01:15.949Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=59, memberId='consumer-weather-stats-group-1-83acdd38-e32a-45b1-910f-ebcc250cfeed', protocol='range'}
2025-06-04T13:01:15.951Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T13:01:15.956Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T13:01:15.966Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=116, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T13:01:15.969Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T13:01:20.480Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:01:20.484Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:01:21.252Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T13:01:21.254Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T13:01:21.256Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T13:01:21.257Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T13:01:21.258Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T13:01:21.262Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4d3990a5
2025-06-04T13:01:21.263Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@6296e4bf
2025-06-04T13:01:21.265Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T13:01:21.266Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-06-04T13:01:21.285Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%B0%D1%80%D0%B0%D1%82%D0%BE%D0%B2", parameters={}
2025-06-04T13:01:21.310Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T13:01:21.366Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Саратов
2025-06-04T13:01:21.369Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T13:00
2025-06-04T13:01:22.466Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=46.034176&lon=51.533338&date=2025-06-04T13:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T13:01:22.486Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T13:01:23.484Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T13:01:23.488Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T13:01:23.562Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T13:01:23.565Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T13:01:23.589Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T13:01:23.620Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T13:01:23.622Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T13:01:23.625Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T13:01:23.626Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749042083622
2025-06-04T13:01:23.631Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@22ea1fe5]
2025-06-04T13:01:23.632Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T13:01:23.650Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 22001 with epoch 0
2025-06-04T13:01:23.716Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T13:01:23.727Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Саратов","requestTime":"2025-06-04T13:01:23.522616600Z"}, headers={kafka_offset=116, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@7a80e050, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Саратов, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749042083648, kafka_groupId=weather-stats-group}]]
2025-06-04T13:01:23.737Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Саратов","requestTime":"2025-06-04T13:01:23.522616600Z"}
2025-06-04T13:01:23.785Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Саратов на 2025-06-04T13:00 успешно сформирован
2025-06-04T13:01:23.797Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 4
2025-06-04T13:01:23.803Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1020509728 wrapping org.postgresql.jdbc.PgConnection@4fa671a3] read-only
2025-06-04T13:01:23.808Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T13:01:23.817Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=151, cityId=4, temperature=23.631, date=2025-06-04 13:00:00.0, windSpeed=5.326]]
2025-06-04T13:01:23.826Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1020509728 wrapping org.postgresql.jdbc.PgConnection@4fa671a3]
2025-06-04T13:01:23.828Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T13:01:23.829Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 13:01:23.5226166
2025-06-04T13:01:23.830Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T13:01:23.832Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:01:23.840Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T13:01:23.855Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T13:01:23.866Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=117, leaderEpoch=null, metadata=''}}
2025-06-04T13:01:23.869Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=117, leaderEpoch=null, metadata=''}}
2025-06-04T13:01:28.877Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:01:28.879Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:01:33.882Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:01:33.884Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:01:38.887Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:01:38.889Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:01:43.892Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:01:43.893Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:01:48.896Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:01:48.898Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:01:53.900Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:01:53.902Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:01:58.905Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:01:58.908Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:02:03.910Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:02:03.912Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:02:08.915Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:02:08.917Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:02:13.920Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:02:13.922Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:02:18.925Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:02:18.928Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:02:23.930Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:02:23.932Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:02:28.934Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:02:28.937Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:02:33.939Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:02:33.940Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:02:38.943Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:02:38.945Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:02:43.948Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:02:43.950Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:02:48.952Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:02:48.954Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:02:53.957Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:02:53.959Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:02:58.961Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:02:58.963Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:03:03.966Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:03:03.976Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:03:08.978Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:03:08.980Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:03:13.982Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:03:13.984Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:03:16.865Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:03:16.867Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T13:03:16.868Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T13:03:16.869Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:03:16.871Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-83acdd38-e32a-45b1-910f-ebcc250cfeed sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T13:03:16.874Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T13:03:16.877Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T13:03:16.878Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T13:03:16.882Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T13:03:16.884Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T13:05:14.441Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T13:05:14.446Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T13:05:14.451Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T13:05:15.820Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:05:15.825Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T13:05:15.889Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:05:15.892Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:05:15.895Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:05:15.897Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 58 ms. Found 0 JDBC repository interfaces.
2025-06-04T13:05:15.920Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:05:15.923Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T13:05:16.143Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 209 ms. Found 3 JPA repository interfaces.
2025-06-04T13:05:16.176Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:05:16.180Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T13:05:16.200Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:05:16.202Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:05:16.204Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:05:16.205Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-06-04T13:05:17.278Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T13:05:17.306Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T13:05:17.308Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T13:05:17.443Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T13:05:17.444Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2926 ms
2025-06-04T13:05:17.671Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T13:05:18.017Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@378bd86d
2025-06-04T13:05:18.021Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T13:05:18.150Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T13:05:18.151Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T13:05:18.153Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T13:05:18.159Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T13:05:18.161Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T13:05:18.162Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T13:05:18.164Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T13:05:18.167Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T13:05:18.169Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T13:05:18.174Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T13:05:18.175Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T13:05:18.176Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T13:05:18.177Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T13:05:18.186Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:05:18.187Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T13:05:18.190Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T13:05:18.202Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T13:05:18.203Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T13:05:18.204Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T13:05:18.206Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T13:05:18.208Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T13:05:18.217Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T13:05:18.220Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T13:05:18.222Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:05:18.235Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T13:05:18.243Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:05:18.259Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:05:18.261Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T13:05:18.262Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T13:05:18.264Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:05:18.266Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T13:05:18.267Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T13:05:18.292Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.054s)
2025-06-04T13:05:18.296Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T13:05:18.312Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T13:05:18.318Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T13:05:18.323Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 49 of 67M
2025-06-04T13:05:18.466Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T13:05:18.590Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T13:05:18.655Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T13:05:19.185Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T13:05:20.728Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T13:05:20.802Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T13:05:21.110Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T13:05:22.141Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T13:05:22.147Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", beanRef="__listener", contentTypeConverter="", containerFactory="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T13:05:22.988Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T13:05:23.137Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T13:05:23.228Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T13:05:23.301Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T13:05:23.353Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T13:05:23.419Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T13:05:23.649Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T13:05:24.066Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T13:05:24.134Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T13:05:24.227Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T13:05:24.465Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T13:05:24.469Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T13:05:24.470Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T13:05:24.471Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749042324467
2025-06-04T13:05:24.478Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T13:05:24.493Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:05:24.506Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 10.932 seconds (process running for 11.726)
2025-06-04T13:05:24.935Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T13:05:24.937Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T13:05:24.941Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T13:05:24.964Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-c2d28bea-2282-4942-8460-78b41cfa947b
2025-06-04T13:05:24.967Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T13:05:24.972Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=61, memberId='consumer-weather-stats-group-1-c2d28bea-2282-4942-8460-78b41cfa947b', protocol='range'}
2025-06-04T13:05:24.982Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 61: {consumer-weather-stats-group-1-c2d28bea-2282-4942-8460-78b41cfa947b=Assignment(partitions=[weather-requests-0])}
2025-06-04T13:05:25.004Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=61, memberId='consumer-weather-stats-group-1-c2d28bea-2282-4942-8460-78b41cfa947b', protocol='range'}
2025-06-04T13:05:25.006Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T13:05:25.012Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T13:05:25.023Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=117, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T13:05:25.026Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T13:05:29.500Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:05:29.503Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:05:34.506Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:05:34.509Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:05:39.512Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:05:39.515Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:05:44.517Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:05:44.521Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:05:49.525Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:05:49.527Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:05:51.216Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T13:05:51.217Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T13:05:51.218Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T13:05:51.219Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T13:05:51.221Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T13:05:51.224Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1842dc39
2025-06-04T13:05:51.225Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@1ee6434
2025-06-04T13:05:51.226Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T13:05:51.228Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2025-06-04T13:05:51.245Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%B0%D1%80%D0%B0%D1%82%D0%BE%D0%B2", parameters={}
2025-06-04T13:05:51.268Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T13:05:51.325Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Саратов
2025-06-04T13:05:51.327Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T13:00
2025-06-04T13:05:52.271Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T13:05:52.276Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T13:05:52.296Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T13:05:52.330Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T13:05:52.337Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T13:05:52.338Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T13:05:52.339Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T13:05:52.340Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749042352336
2025-06-04T13:05:52.354Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@60f2ffb1]
2025-06-04T13:05:52.367Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 23001 with epoch 0
2025-06-04T13:05:52.424Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T13:05:52.441Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Саратов","requestTime":"2025-06-04T13:05:52.231236400Z"}, headers={kafka_offset=117, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@530e1333, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Саратов, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749042352366, kafka_groupId=weather-stats-group}]]
2025-06-04T13:05:52.445Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Саратов","requestTime":"2025-06-04T13:05:52.231236400Z"}
2025-06-04T13:05:52.462Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Прогноз для города Саратов на 2025-06-04T13:00 успешно сформирован
2025-06-04T13:05:52.495Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T13:05:52.507Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=184, cityId=4, temperature=23.631, date=2025-06-04 13:00:00.0, windSpeed=5.326]]
2025-06-04T13:05:52.519Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 4
2025-06-04T13:05:52.525Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1128586631 wrapping org.postgresql.jdbc.PgConnection@8fc5bf9] read-only
2025-06-04T13:05:52.527Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:05:52.552Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1128586631 wrapping org.postgresql.jdbc.PgConnection@8fc5bf9]
2025-06-04T13:05:52.553Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T13:05:52.554Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 13:05:52.2312364
2025-06-04T13:05:52.555Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T13:05:52.566Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T13:05:52.578Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T13:05:52.589Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=118, leaderEpoch=null, metadata=''}}
2025-06-04T13:05:52.591Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=118, leaderEpoch=null, metadata=''}}
2025-06-04T13:05:57.600Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:05:57.603Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:06:02.607Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:06:02.610Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:06:07.614Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:06:07.616Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:06:12.618Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:06:12.620Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:06:17.623Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:06:17.625Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:06:22.628Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:06:22.631Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:06:27.633Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:06:27.635Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:06:32.638Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:06:32.640Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:06:37.642Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:06:37.644Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:06:42.645Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:06:42.647Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:06:47.650Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:06:47.652Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:06:52.655Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:06:52.660Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:06:57.664Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:06:57.667Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:07:02.669Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:07:02.671Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:07:07.672Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:07:07.674Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:07:12.676Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:07:12.678Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:07:17.680Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:07:17.683Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:07:22.685Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:07:22.687Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:07:27.689Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:07:27.691Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:07:32.693Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:07:32.705Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:07:37.709Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:07:37.711Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:07:42.714Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:07:42.716Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:07:47.719Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:07:47.721Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:07:52.724Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:07:52.726Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:07:57.728Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:07:57.732Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:08:02.734Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:08:02.736Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:08:07.739Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:08:07.741Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:08:12.743Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:08:12.745Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:08:17.748Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:08:17.757Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:08:22.759Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:08:22.761Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:08:27.764Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:08:27.789Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:08:32.792Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:08:32.796Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:08:37.798Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:08:37.800Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:08:42.802Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:08:42.805Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:08:47.807Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:08:47.809Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:08:52.812Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:08:52.815Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:08:57.819Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:08:57.822Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:09:02.824Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:09:02.826Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:09:07.827Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:09:07.829Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:09:12.831Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:09:12.834Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:09:17.837Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:09:17.840Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:09:22.843Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:09:22.846Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:09:27.849Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:09:27.852Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:09:32.855Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:09:32.858Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:09:37.862Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:09:37.865Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:09:42.867Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:09:42.869Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:09:47.872Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:09:47.874Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:09:52.876Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:09:52.879Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:09:57.882Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:09:57.886Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:10:02.888Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:10:02.891Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:10:07.893Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:10:07.895Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:10:12.898Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:10:12.901Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:10:17.904Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:10:17.906Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:10:22.908Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:10:22.911Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:10:27.914Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:10:27.916Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:10:32.918Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:10:32.920Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:10:37.922Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:10:37.925Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:10:42.927Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:10:42.929Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:10:47.931Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:10:47.933Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:10:52.937Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:10:52.939Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:10:57.942Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:10:57.944Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:11:02.948Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:11:02.950Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:11:07.952Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:11:07.954Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:11:12.956Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:11:12.958Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:11:17.960Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:11:17.965Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:11:22.983Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:11:22.992Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:11:27.995Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:11:27.997Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:11:33.000Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:11:33.002Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:11:38.004Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:11:38.005Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:11:43.009Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:11:43.010Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:11:48.013Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:11:48.015Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:11:53.018Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:11:53.020Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:11:58.024Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:11:58.026Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:12:03.028Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:12:03.030Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:12:08.033Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:12:08.035Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:12:13.037Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:12:13.039Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:12:18.042Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:12:18.044Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:12:23.046Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:12:23.048Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:12:28.051Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:12:28.053Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:12:33.055Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:12:33.057Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:12:38.058Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:12:38.060Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:12:43.062Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:12:43.066Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:12:48.069Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:12:48.071Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:12:53.073Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:12:53.077Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:12:58.084Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:12:58.086Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:13:03.089Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:13:03.091Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:13:08.095Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:13:08.097Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:13:13.101Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:13:13.103Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:13:18.106Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:13:18.109Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:13:21.230Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:13:21.232Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T13:13:21.234Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T13:13:21.236Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:13:21.238Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-c2d28bea-2282-4942-8460-78b41cfa947b sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T13:13:21.241Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T13:13:21.242Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T13:13:21.243Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T13:13:21.248Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T13:13:21.249Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T13:13:21.313Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T13:13:21.315Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T13:13:21.316Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T13:13:21.317Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T13:13:21.328Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T13:13:21.331Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T13:13:21.334Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T13:13:21.337Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T13:13:21.341Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T13:13:21.386Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T13:13:21.393Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T13:13:21.394Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T13:13:21.395Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T13:13:21.397Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T13:13:21.398Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T13:13:21.415Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T13:13:21.422Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T13:13:21.431Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T13:15:18.508Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T13:15:18.513Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T13:15:18.516Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T13:15:19.870Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:15:19.874Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T13:15:19.922Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:15:19.925Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:15:19.928Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:15:19.930Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 45 ms. Found 0 JDBC repository interfaces.
2025-06-04T13:15:19.950Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:15:19.953Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T13:15:20.167Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 205 ms. Found 3 JPA repository interfaces.
2025-06-04T13:15:20.202Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:15:20.207Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T13:15:20.231Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:15:20.233Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:15:20.236Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:15:20.240Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-06-04T13:15:21.249Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T13:15:21.275Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T13:15:21.276Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T13:15:21.419Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T13:15:21.421Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2833 ms
2025-06-04T13:15:21.657Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T13:15:21.987Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@a619c2
2025-06-04T13:15:21.991Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T13:15:22.114Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T13:15:22.116Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T13:15:22.117Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T13:15:22.124Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T13:15:22.125Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T13:15:22.126Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T13:15:22.127Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T13:15:22.129Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T13:15:22.131Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T13:15:22.136Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T13:15:22.138Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T13:15:22.139Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T13:15:22.140Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T13:15:22.147Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:15:22.148Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T13:15:22.151Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T13:15:22.162Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T13:15:22.164Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T13:15:22.166Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T13:15:22.168Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T13:15:22.170Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T13:15:22.178Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T13:15:22.181Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T13:15:22.182Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:15:22.195Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T13:15:22.203Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:15:22.215Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:15:22.216Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T13:15:22.217Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T13:15:22.219Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:15:22.220Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T13:15:22.221Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T13:15:22.243Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.044s)
2025-06-04T13:15:22.248Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T13:15:22.263Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T13:15:22.270Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T13:15:22.276Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 50 of 64M
2025-06-04T13:15:22.423Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T13:15:22.567Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T13:15:22.638Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T13:15:23.203Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T13:15:24.646Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T13:15:24.712Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T13:15:24.992Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T13:15:25.995Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T13:15:26.002Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T13:15:26.817Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T13:15:26.940Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T13:15:27.006Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T13:15:27.063Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T13:15:27.114Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T13:15:27.183Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T13:15:27.423Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T13:15:27.854Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T13:15:27.923Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T13:15:28.008Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T13:15:28.243Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T13:15:28.247Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T13:15:28.248Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T13:15:28.249Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749042928245
2025-06-04T13:15:28.257Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T13:15:28.272Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:15:28.289Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 10.671 seconds (process running for 11.514)
2025-06-04T13:15:28.689Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T13:15:28.710Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T13:15:28.726Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T13:15:28.744Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-bc963f77-9272-4b7c-9cf9-82e0ff3c0edb
2025-06-04T13:15:28.745Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T13:15:28.748Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=63, memberId='consumer-weather-stats-group-1-bc963f77-9272-4b7c-9cf9-82e0ff3c0edb', protocol='range'}
2025-06-04T13:15:28.756Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 63: {consumer-weather-stats-group-1-bc963f77-9272-4b7c-9cf9-82e0ff3c0edb=Assignment(partitions=[weather-requests-0])}
2025-06-04T13:15:28.763Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=63, memberId='consumer-weather-stats-group-1-bc963f77-9272-4b7c-9cf9-82e0ff3c0edb', protocol='range'}
2025-06-04T13:15:28.764Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T13:15:28.768Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T13:15:28.779Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=118, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T13:15:28.782Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T13:15:33.279Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:15:33.283Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:15:38.285Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:15:38.287Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:15:40.401Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T13:15:40.403Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T13:15:40.404Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T13:15:40.405Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T13:15:40.407Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T13:15:40.410Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1ee6434
2025-06-04T13:15:40.412Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@5c459194
2025-06-04T13:15:40.413Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T13:15:40.414Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-06-04T13:15:40.429Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0", parameters={}
2025-06-04T13:15:40.449Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T13:15:40.501Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Москва
2025-06-04T13:15:40.503Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T13:00
2025-06-04T13:15:41.600Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=37.617698&lon=55.755864&date=2025-06-04T13:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T13:15:41.622Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T13:15:43.291Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:15:43.293Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:15:43.647Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T13:15:43.651Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T13:15:43.709Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T13:15:43.713Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T13:15:43.735Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T13:15:43.764Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T13:15:43.766Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T13:15:43.768Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T13:15:43.771Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749042943766
2025-06-04T13:15:43.774Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T13:15:43.776Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@7d23e748]
2025-06-04T13:15:43.791Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 24001 with epoch 0
2025-06-04T13:15:43.843Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T13:15:43.860Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Москва","requestTime":"2025-06-04T13:15:43.677898300Z"}, headers={kafka_offset=118, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@62901428, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Москва, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749042943787, kafka_groupId=weather-stats-group}]]
2025-06-04T13:15:43.865Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Москва","requestTime":"2025-06-04T13:15:43.677898300Z"}
2025-06-04T13:15:43.900Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Москва на 2025-06-04T13:00 успешно сформирован
2025-06-04T13:15:43.933Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 3
2025-06-04T13:15:43.937Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T13:15:43.939Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@579207606 wrapping org.postgresql.jdbc.PgConnection@78967f4] read-only
2025-06-04T13:15:43.947Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=185, cityId=3, temperature=20.631, date=2025-06-04 13:00:00.0, windSpeed=8.219]]
2025-06-04T13:15:43.961Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@579207606 wrapping org.postgresql.jdbc.PgConnection@78967f4]
2025-06-04T13:15:43.962Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:15:43.963Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T13:15:43.965Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 13:15:43.6778983
2025-06-04T13:15:43.966Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T13:15:43.976Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.addRequestCount(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:529) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:647) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy186.executeUpdate(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:267) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	... 27 common frames omitted

2025-06-04T13:15:43.986Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=119, leaderEpoch=null, metadata=''}}
2025-06-04T13:15:43.990Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=119, leaderEpoch=null, metadata=''}}
2025-06-04T13:15:49.004Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:15:49.006Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:15:54.009Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:15:54.011Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:15:59.015Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:15:59.017Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:16:04.019Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:16:04.021Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:16:09.024Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:16:09.027Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:16:14.030Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:16:14.034Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:16:19.037Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:16:19.040Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:16:24.042Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:16:24.044Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:16:29.047Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:16:29.049Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:16:34.054Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:16:34.056Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:16:39.060Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:16:39.062Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:16:42.360Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:16:42.362Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T13:16:42.364Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T13:16:42.366Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:16:42.367Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-bc963f77-9272-4b7c-9cf9-82e0ff3c0edb sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T13:16:42.370Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T13:16:42.371Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T13:16:42.372Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T13:16:42.376Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T13:16:42.378Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T13:16:42.752Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T13:16:42.753Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T13:16:42.756Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T13:16:42.758Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T13:16:42.769Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T13:16:42.771Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T13:16:42.775Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T13:16:42.779Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T13:16:42.783Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T13:16:42.823Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T13:16:42.834Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T13:16:42.836Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T13:16:42.837Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T13:16:42.840Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T13:16:42.844Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T13:16:42.861Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T13:16:42.867Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T13:16:42.872Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T13:18:40.051Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T13:18:40.055Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T13:18:40.057Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T13:18:41.495Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:18:41.501Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T13:18:41.561Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:18:41.565Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:18:41.569Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:18:41.573Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 59 ms. Found 0 JDBC repository interfaces.
2025-06-04T13:18:41.596Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:18:41.600Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T13:18:41.816Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 205 ms. Found 3 JPA repository interfaces.
2025-06-04T13:18:41.847Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:18:41.851Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T13:18:41.870Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:18:41.872Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:18:41.873Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:18:41.874Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-06-04T13:18:43.005Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T13:18:43.034Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T13:18:43.036Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T13:18:43.196Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T13:18:43.198Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3063 ms
2025-06-04T13:18:43.412Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T13:18:43.786Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@648ee871
2025-06-04T13:18:43.791Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T13:18:43.916Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T13:18:43.918Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T13:18:43.919Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T13:18:43.929Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T13:18:43.930Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T13:18:43.931Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T13:18:43.933Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T13:18:43.935Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T13:18:43.937Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T13:18:43.943Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T13:18:43.944Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T13:18:43.946Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T13:18:43.947Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T13:18:43.954Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:18:43.955Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T13:18:43.959Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T13:18:43.970Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T13:18:43.971Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T13:18:43.974Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T13:18:43.978Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T13:18:43.979Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T13:18:43.989Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T13:18:43.993Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T13:18:43.994Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:18:44.008Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T13:18:44.017Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:18:44.036Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:18:44.038Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T13:18:44.040Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T13:18:44.042Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:18:44.044Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T13:18:44.045Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T13:18:44.069Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.057s)
2025-06-04T13:18:44.075Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T13:18:44.089Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T13:18:44.094Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T13:18:44.101Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 49 of 63M
2025-06-04T13:18:44.250Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T13:18:44.389Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T13:18:44.466Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T13:18:45.102Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T13:18:46.514Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T13:18:46.586Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T13:18:46.923Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T13:18:47.920Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T13:18:47.927Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", beanRef="__listener", contentTypeConverter="", containerFactory="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T13:18:48.805Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T13:18:48.947Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T13:18:49.019Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T13:18:49.078Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T13:18:49.125Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T13:18:49.198Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T13:18:49.469Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T13:18:49.884Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T13:18:49.957Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T13:18:50.055Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T13:18:50.305Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T13:18:50.308Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T13:18:50.309Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T13:18:50.310Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749043130306
2025-06-04T13:18:50.317Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T13:18:50.332Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:18:50.352Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 11.251 seconds (process running for 12.092)
2025-06-04T13:18:50.785Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T13:18:50.791Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T13:18:50.801Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T13:18:50.822Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-c5436a35-6d31-4db7-8757-b0c0645a6b2e
2025-06-04T13:18:50.824Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T13:18:50.827Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=65, memberId='consumer-weather-stats-group-1-c5436a35-6d31-4db7-8757-b0c0645a6b2e', protocol='range'}
2025-06-04T13:18:50.837Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 65: {consumer-weather-stats-group-1-c5436a35-6d31-4db7-8757-b0c0645a6b2e=Assignment(partitions=[weather-requests-0])}
2025-06-04T13:18:50.843Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=65, memberId='consumer-weather-stats-group-1-c5436a35-6d31-4db7-8757-b0c0645a6b2e', protocol='range'}
2025-06-04T13:18:50.845Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T13:18:50.849Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T13:18:50.860Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=119, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T13:18:50.863Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T13:18:55.339Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:18:55.340Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:19:00.343Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:19:00.344Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:19:05.347Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:19:05.349Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:19:10.352Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:19:10.354Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:19:15.356Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:19:15.358Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:19:15.575Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T13:19:15.576Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T13:19:15.578Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T13:19:15.578Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T13:19:15.581Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T13:19:15.584Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@18df26a1
2025-06-04T13:19:15.586Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@220cda54
2025-06-04T13:19:15.587Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T13:19:15.588Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-06-04T13:19:15.605Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0", parameters={}
2025-06-04T13:19:15.628Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T13:19:15.704Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Москва
2025-06-04T13:19:15.707Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T13:00
2025-06-04T13:19:16.660Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T13:19:16.664Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T13:19:16.687Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T13:19:16.717Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T13:19:16.719Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T13:19:16.720Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T13:19:16.721Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749043156719
2025-06-04T13:19:16.725Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@2341f545]
2025-06-04T13:19:16.726Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T13:19:16.740Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 25001 with epoch 0
2025-06-04T13:19:16.791Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T13:19:16.801Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Москва","requestTime":"2025-06-04T13:19:16.617558200Z"}, headers={kafka_offset=119, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@2d050586, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Москва, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749043156740, kafka_groupId=weather-stats-group}]]
2025-06-04T13:19:16.806Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Москва","requestTime":"2025-06-04T13:19:16.617558200Z"}
2025-06-04T13:19:16.840Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Прогноз для города Москва на 2025-06-04T13:00 успешно сформирован
2025-06-04T13:19:16.872Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T13:19:16.884Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=186, cityId=3, temperature=20.631, date=2025-06-04 13:00:00.0, windSpeed=8.219]]
2025-06-04T13:19:16.887Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 3
2025-06-04T13:19:16.894Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@2042688470 wrapping org.postgresql.jdbc.PgConnection@115a5065] read-only
2025-06-04T13:19:16.903Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:19:16.916Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@2042688470 wrapping org.postgresql.jdbc.PgConnection@115a5065]
2025-06-04T13:19:16.919Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T13:19:16.919Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T13:19:16.931Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T13:19:16.945Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:53) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T13:19:16.957Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=120, leaderEpoch=null, metadata=''}}
2025-06-04T13:19:16.961Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=120, leaderEpoch=null, metadata=''}}
2025-06-04T13:19:21.971Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:19:21.973Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:19:26.975Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:19:26.977Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:19:31.981Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:19:31.983Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:19:36.985Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:19:36.987Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:19:41.988Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:19:41.990Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:19:46.993Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:19:46.994Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:19:51.996Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:19:51.998Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:19:57.001Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:19:57.003Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:20:02.006Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:20:02.007Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:20:07.012Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:20:07.014Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:20:12.015Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:20:12.017Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:20:17.020Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:20:17.022Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:20:22.025Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:20:22.026Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:20:27.030Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:20:27.033Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:20:32.036Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:20:32.038Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:20:37.041Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:20:37.044Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:20:42.046Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:20:42.048Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:20:47.050Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:20:47.053Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:20:52.057Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:20:52.059Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:20:57.061Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:20:57.064Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:21:02.068Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:21:02.070Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:21:07.073Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:21:07.075Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:21:12.078Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:21:12.080Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:21:17.083Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:21:17.085Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:21:22.087Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:21:22.089Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:21:27.091Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:21:27.093Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:21:32.095Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:21:32.097Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:21:37.101Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:21:37.103Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:21:42.105Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:21:42.108Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:21:47.111Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:21:47.113Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:21:52.116Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:21:52.118Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:21:57.120Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:21:57.122Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:22:02.124Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:22:02.126Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:22:07.127Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:22:07.129Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:22:12.133Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:22:12.136Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:22:17.139Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:22:17.141Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:22:22.144Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:22:22.146Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:22:27.150Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:22:27.152Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:22:32.155Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:22:32.156Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:22:37.158Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:22:37.160Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:22:42.163Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:22:42.164Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:22:47.166Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:22:47.167Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:22:52.171Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:22:52.172Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:22:57.174Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:22:57.176Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:23:02.178Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:23:02.180Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:23:07.182Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:23:07.184Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:23:08.903Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:23:08.905Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T13:23:08.907Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T13:23:08.908Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:23:08.909Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-c5436a35-6d31-4db7-8757-b0c0645a6b2e sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T13:23:08.911Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T13:23:08.912Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T13:23:08.913Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T13:23:08.918Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T13:23:08.919Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T13:23:08.946Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T13:23:08.948Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T13:23:08.949Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T13:23:08.951Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T13:23:08.963Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T13:23:08.965Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T13:23:08.969Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T13:23:08.973Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T13:23:08.979Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T13:23:09.026Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T13:23:09.033Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T13:23:09.035Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T13:23:09.036Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T13:23:09.037Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T13:23:09.039Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T13:23:09.061Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T13:23:09.069Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T13:23:09.081Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T13:25:21.196Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T13:25:21.201Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T13:25:21.203Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T13:25:22.501Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:25:22.505Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T13:25:22.568Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:25:22.572Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:25:22.577Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:25:22.579Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 59 ms. Found 0 JDBC repository interfaces.
2025-06-04T13:25:22.603Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:25:22.607Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T13:25:22.784Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 166 ms. Found 3 JPA repository interfaces.
2025-06-04T13:25:22.813Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:25:22.817Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T13:25:22.836Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:25:22.838Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:25:22.839Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:25:22.841Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-06-04T13:25:23.908Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T13:25:23.934Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T13:25:23.936Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T13:25:24.088Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T13:25:24.090Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2814 ms
2025-06-04T13:25:24.294Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T13:25:24.627Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25c5e994
2025-06-04T13:25:24.631Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T13:25:24.748Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T13:25:24.750Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T13:25:24.751Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T13:25:24.760Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T13:25:24.761Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T13:25:24.763Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T13:25:24.764Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T13:25:24.765Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T13:25:24.767Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T13:25:24.772Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T13:25:24.774Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T13:25:24.775Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T13:25:24.776Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T13:25:24.784Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:25:24.786Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T13:25:24.788Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T13:25:24.802Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T13:25:24.804Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T13:25:24.805Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T13:25:24.809Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T13:25:24.810Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T13:25:24.822Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T13:25:24.826Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T13:25:24.827Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:25:24.842Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T13:25:24.851Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:25:24.863Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:25:24.865Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T13:25:24.867Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T13:25:24.870Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:25:24.871Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T13:25:24.872Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T13:25:24.894Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.049s)
2025-06-04T13:25:24.901Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T13:25:24.916Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T13:25:24.922Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T13:25:24.927Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 48 of 64M
2025-06-04T13:25:25.062Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T13:25:25.210Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T13:25:25.280Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T13:25:25.866Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T13:25:27.384Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T13:25:27.459Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T13:25:27.787Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T13:25:28.835Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T13:25:28.842Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T13:25:29.748Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T13:25:29.913Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T13:25:29.991Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T13:25:30.053Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T13:25:30.107Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T13:25:30.179Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T13:25:30.440Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T13:25:30.855Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T13:25:30.930Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T13:25:31.019Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T13:25:31.249Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T13:25:31.252Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T13:25:31.253Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T13:25:31.254Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749043531250
2025-06-04T13:25:31.259Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T13:25:31.280Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:25:31.298Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 10.967 seconds (process running for 11.754)
2025-06-04T13:25:31.707Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T13:25:31.712Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T13:25:31.716Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T13:25:31.740Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-c31241af-c14a-4d65-a9f8-f94929edfda8
2025-06-04T13:25:31.742Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T13:25:31.746Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=67, memberId='consumer-weather-stats-group-1-c31241af-c14a-4d65-a9f8-f94929edfda8', protocol='range'}
2025-06-04T13:25:31.757Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 67: {consumer-weather-stats-group-1-c31241af-c14a-4d65-a9f8-f94929edfda8=Assignment(partitions=[weather-requests-0])}
2025-06-04T13:25:31.763Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=67, memberId='consumer-weather-stats-group-1-c31241af-c14a-4d65-a9f8-f94929edfda8', protocol='range'}
2025-06-04T13:25:31.766Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T13:25:31.771Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T13:25:31.782Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=120, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T13:25:31.785Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T13:25:36.288Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:25:36.291Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:25:41.060Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T13:25:41.061Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T13:25:41.063Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T13:25:41.063Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T13:25:41.064Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T13:25:41.068Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1ee6434
2025-06-04T13:25:41.070Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@5c459194
2025-06-04T13:25:41.071Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T13:25:41.072Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2025-06-04T13:25:41.088Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0", parameters={}
2025-06-04T13:25:41.109Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T13:25:41.163Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Москва
2025-06-04T13:25:41.165Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T13:00
2025-06-04T13:25:41.293Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:25:41.295Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:25:42.091Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T13:25:42.094Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T13:25:42.113Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T13:25:42.138Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T13:25:42.139Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T13:25:42.143Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T13:25:42.145Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749043542139
2025-06-04T13:25:42.146Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T13:25:42.147Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@6ec49a23]
2025-06-04T13:25:42.153Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 26001 with epoch 0
2025-06-04T13:25:42.207Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T13:25:42.216Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Москва","requestTime":"2025-06-04T13:25:42.050395900Z"}, headers={kafka_offset=120, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@2cc0e40d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Москва, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749043542168, kafka_groupId=weather-stats-group}]]
2025-06-04T13:25:42.221Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Москва","requestTime":"2025-06-04T13:25:42.050395900Z"}
2025-06-04T13:25:42.248Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Прогноз для города Москва на 2025-06-04T13:00 успешно сформирован
2025-06-04T13:25:42.278Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T13:25:42.289Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=187, cityId=3, temperature=20.631, date=2025-06-04 13:00:00.0, windSpeed=8.219]]
2025-06-04T13:25:42.292Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 3
2025-06-04T13:25:42.298Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@761309979 wrapping org.postgresql.jdbc.PgConnection@2641ff60] read-only
2025-06-04T13:25:42.309Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:25:42.322Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@761309979 wrapping org.postgresql.jdbc.PgConnection@2641ff60]
2025-06-04T13:25:42.324Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T13:25:42.325Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 3
2025-06-04T13:25:42.327Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T13:25:42.337Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T13:25:42.353Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T13:25:42.365Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=121, leaderEpoch=null, metadata=''}}
2025-06-04T13:25:42.368Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=121, leaderEpoch=null, metadata=''}}
2025-06-04T13:25:47.380Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:25:47.382Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:25:52.384Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:25:52.386Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:25:57.389Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:25:57.393Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:26:02.395Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:26:02.397Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:26:07.400Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:26:07.402Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:26:12.405Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:26:12.407Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:26:17.409Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:26:17.441Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:26:22.488Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:26:22.490Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:26:27.492Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:26:27.495Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:26:32.497Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:26:32.500Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:26:37.502Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:26:37.504Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:26:42.507Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:26:42.509Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:26:47.512Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:26:47.514Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:26:52.516Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:26:52.518Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:26:57.523Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:26:57.526Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:27:02.529Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:27:02.531Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:27:07.533Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:27:07.535Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:27:12.537Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:27:12.540Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:27:17.543Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:27:17.546Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:27:22.549Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:27:22.551Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:27:27.554Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:27:27.558Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:27:32.562Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:27:32.565Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:27:37.569Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:27:37.571Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:27:42.573Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:27:42.576Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:27:47.579Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:27:47.582Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:27:52.584Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:27:52.586Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:27:57.588Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:27:57.593Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:28:02.596Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:28:02.598Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:28:07.600Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:28:07.602Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:28:12.604Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:28:12.606Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:28:17.608Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:28:17.611Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:28:22.614Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:28:22.616Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:28:27.618Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:28:27.621Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:28:32.625Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:28:32.627Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:28:37.630Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:28:37.632Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:28:42.634Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:28:42.636Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:28:47.642Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:28:47.644Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:28:52.646Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:28:52.648Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:28:57.650Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:28:57.652Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:29:02.653Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:29:02.656Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:29:07.659Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:29:07.661Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:29:12.663Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:29:12.665Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:29:17.668Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:29:17.670Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:29:22.674Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:29:22.676Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:29:27.679Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:29:27.681Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:29:32.685Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:29:32.687Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:29:37.689Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:29:37.692Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:29:42.695Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:29:42.696Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:29:47.699Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:29:47.702Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:29:52.703Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:29:52.705Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:29:57.710Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:29:57.713Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:30:02.715Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:30:02.717Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:30:07.720Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:30:07.722Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:30:12.724Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:30:12.726Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:30:17.730Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:30:17.732Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:30:22.735Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:30:22.738Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:30:27.740Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:30:27.742Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:30:32.745Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:30:32.747Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:30:37.751Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:30:37.753Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:30:42.754Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:30:42.757Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:30:47.759Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:30:47.762Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:30:52.765Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:30:52.767Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:30:57.770Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:30:57.772Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:31:02.774Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:31:02.776Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:31:07.779Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:31:07.781Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:31:12.783Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:31:12.785Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:31:17.788Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:31:17.791Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:31:22.793Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:31:22.796Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:31:27.798Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:31:27.800Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:31:32.802Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:31:32.804Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:31:37.806Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:31:37.809Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:31:42.811Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:31:42.813Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:31:47.815Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:31:47.817Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:31:52.820Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:31:52.822Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:31:57.826Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:31:57.829Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:32:02.832Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:32:02.834Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:32:07.838Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:32:07.840Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:32:12.842Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:32:12.844Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:32:17.846Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:32:17.848Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:32:22.851Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:32:22.852Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:32:27.855Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:32:27.858Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:32:32.860Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:32:32.863Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:32:37.865Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:32:37.868Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:32:42.870Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:32:42.872Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:32:47.874Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:32:47.876Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:32:52.879Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:32:52.881Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:32:57.884Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:32:57.887Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:33:02.890Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:33:02.892Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:33:07.894Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:33:07.897Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:33:12.899Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:33:12.901Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:33:17.904Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:33:17.907Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:33:22.909Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:33:22.912Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:33:27.914Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:33:27.917Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:33:32.920Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:33:32.922Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:33:37.924Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:33:37.926Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:33:42.929Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:33:42.931Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:33:47.934Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:33:47.937Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:33:52.939Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:33:52.942Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:33:57.945Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:33:57.947Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:34:02.950Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:34:02.952Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:34:07.954Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:34:07.956Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:34:12.959Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:34:12.961Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:34:17.963Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:34:17.965Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:34:22.967Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:34:22.969Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:34:27.971Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:34:27.974Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:34:31.865Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node -1 disconnected.
2025-06-04T13:34:32.976Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:34:32.978Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:34:37.981Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:34:37.983Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:34:42.370Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=demo-producer-1] Node -1 disconnected.
2025-06-04T13:34:42.985Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:34:42.987Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:34:47.991Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:34:47.994Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:34:52.996Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:34:52.999Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:34:58.001Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:34:58.003Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:35:03.007Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:35:03.009Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:35:08.011Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:35:08.013Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:35:13.015Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:35:13.017Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:35:18.019Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:35:18.022Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:35:23.025Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:35:23.027Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:35:28.029Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:35:28.031Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:35:33.035Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:35:33.038Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:35:38.040Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:35:38.043Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:35:43.046Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:35:43.049Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:35:48.053Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:35:48.056Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:35:53.058Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:35:53.060Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:35:58.062Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:35:58.063Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:36:03.066Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:36:03.068Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:36:08.070Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:36:08.072Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:36:13.077Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:36:13.078Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:36:18.080Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:36:18.082Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:36:23.083Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:36:23.085Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:36:28.087Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:36:28.090Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:36:33.092Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:36:33.094Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:36:38.096Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:36:38.105Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:36:43.106Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:36:43.108Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:36:48.110Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:36:48.113Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:36:53.116Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:36:53.118Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:36:58.120Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:36:58.122Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:37:03.124Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:37:03.126Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:37:08.128Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:37:08.130Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:37:13.132Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:37:13.134Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:37:18.137Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:37:18.138Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:37:23.140Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:37:23.142Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:37:28.143Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:37:28.145Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:37:33.147Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:37:33.149Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:37:38.152Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:37:38.153Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:37:43.156Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:37:43.157Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:37:48.160Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:37:48.162Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:37:53.164Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:37:53.165Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:37:58.168Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:37:58.169Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:38:03.172Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:38:03.173Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:38:08.175Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:38:08.176Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:38:13.178Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:38:13.181Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:38:18.185Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:38:18.187Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:38:23.189Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:38:23.191Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:38:28.194Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:38:28.196Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:38:33.198Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:38:33.200Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:38:38.202Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:38:38.204Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:38:43.206Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:38:43.207Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:38:48.211Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:38:48.213Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:38:53.215Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:38:53.217Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:38:58.219Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:38:58.220Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:39:03.222Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:39:03.225Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:39:08.227Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:39:08.228Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:39:13.231Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:39:13.234Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:39:18.239Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:39:18.241Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:39:23.243Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:39:23.250Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:39:28.253Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:39:28.254Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:39:33.256Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:39:33.258Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:39:38.260Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:39:38.263Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:39:43.266Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:39:43.268Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:39:48.271Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:39:48.273Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:39:53.275Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:39:53.277Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:39:58.279Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:39:58.282Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:40:03.284Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:40:03.291Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:40:08.294Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:40:08.297Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:40:13.300Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:40:13.301Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:40:18.303Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:40:18.305Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:40:23.305Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:40:23.307Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:40:28.309Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:40:28.311Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:40:33.313Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:40:33.315Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:40:38.317Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:40:38.319Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:40:43.323Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:40:43.325Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:40:48.327Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:40:48.330Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:40:53.331Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:40:53.333Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:40:58.335Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:40:58.336Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:41:03.339Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:41:03.340Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:41:08.342Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:41:08.344Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:41:12.813Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:41:12.815Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T13:41:12.818Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T13:41:12.819Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:41:12.820Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-c31241af-c14a-4d65-a9f8-f94929edfda8 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T13:41:12.821Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T13:41:12.822Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T13:41:12.824Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T13:41:12.828Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T13:41:12.829Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T13:41:12.898Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T13:41:12.900Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T13:41:12.901Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T13:41:12.901Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T13:41:12.911Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T13:41:12.914Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T13:41:12.918Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T13:41:12.921Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T13:41:12.926Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T13:41:12.981Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T13:41:13.009Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T13:41:13.011Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T13:41:13.012Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T13:41:13.012Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T13:41:13.015Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T13:41:13.033Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T13:41:13.039Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T13:41:13.046Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T13:43:17.120Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T13:43:17.124Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T13:43:17.127Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T13:43:18.296Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:43:18.301Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T13:43:18.354Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:43:18.358Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:43:18.362Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T13:43:18.365Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 55 ms. Found 0 JDBC repository interfaces.
2025-06-04T13:43:18.384Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:43:18.388Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T13:43:18.578Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 181 ms. Found 3 JPA repository interfaces.
2025-06-04T13:43:18.610Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T13:43:18.613Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T13:43:18.629Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:43:18.632Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:43:18.634Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T13:43:18.636Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-06-04T13:43:19.571Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T13:43:19.603Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T13:43:19.604Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T13:43:19.728Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T13:43:19.730Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2547 ms
2025-06-04T13:43:19.922Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T13:43:20.257Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@375b5b7f
2025-06-04T13:43:20.261Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T13:43:20.374Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T13:43:20.376Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T13:43:20.377Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T13:43:20.384Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T13:43:20.385Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T13:43:20.386Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T13:43:20.388Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T13:43:20.389Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T13:43:20.391Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T13:43:20.397Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T13:43:20.398Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T13:43:20.400Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T13:43:20.402Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T13:43:20.408Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:43:20.410Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T13:43:20.413Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T13:43:20.423Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T13:43:20.424Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T13:43:20.425Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T13:43:20.428Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T13:43:20.429Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T13:43:20.438Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T13:43:20.441Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T13:43:20.442Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:43:20.455Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T13:43:20.461Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:43:20.473Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:43:20.475Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T13:43:20.477Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T13:43:20.479Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T13:43:20.481Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T13:43:20.482Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T13:43:20.508Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.050s)
2025-06-04T13:43:20.513Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T13:43:20.530Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T13:43:20.536Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T13:43:20.541Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 21 of 58M
2025-06-04T13:43:20.664Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T13:43:20.774Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T13:43:20.832Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T13:43:21.320Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T13:43:22.642Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T13:43:22.707Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T13:43:23.001Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T13:43:23.877Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T13:43:23.884Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T13:43:24.634Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T13:43:24.757Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T13:43:24.826Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T13:43:24.886Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T13:43:24.931Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T13:43:25.016Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T13:43:25.255Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T13:43:25.628Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T13:43:25.690Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T13:43:25.793Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T13:43:26.019Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T13:43:26.022Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T13:43:26.023Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T13:43:26.024Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749044606020
2025-06-04T13:43:26.030Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T13:43:26.046Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:43:26.062Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 9.801 seconds (process running for 10.551)
2025-06-04T13:43:26.462Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T13:43:26.465Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T13:43:26.470Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T13:43:26.491Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-44f106fa-0d85-4228-aa1c-2b12ad99a865
2025-06-04T13:43:26.494Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T13:43:26.497Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=69, memberId='consumer-weather-stats-group-1-44f106fa-0d85-4228-aa1c-2b12ad99a865', protocol='range'}
2025-06-04T13:43:26.506Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 69: {consumer-weather-stats-group-1-44f106fa-0d85-4228-aa1c-2b12ad99a865=Assignment(partitions=[weather-requests-0])}
2025-06-04T13:43:26.525Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=69, memberId='consumer-weather-stats-group-1-44f106fa-0d85-4228-aa1c-2b12ad99a865', protocol='range'}
2025-06-04T13:43:26.527Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T13:43:26.532Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T13:43:26.545Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=121, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T13:43:26.548Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T13:43:31.052Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:43:31.054Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:43:33.883Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T13:43:33.886Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T13:43:33.887Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T13:43:33.888Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T13:43:33.889Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T13:43:33.893Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@69cb134
2025-06-04T13:43:33.895Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@6a7fc4c1
2025-06-04T13:43:33.897Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T13:43:33.898Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2025-06-04T13:43:33.928Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0", parameters={}
2025-06-04T13:43:33.954Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T13:43:34.022Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Москва
2025-06-04T13:43:34.025Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T13:00
2025-06-04T13:43:34.989Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T13:43:34.993Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T13:43:35.009Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T13:43:35.039Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T13:43:35.041Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T13:43:35.042Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T13:43:35.043Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749044615041
2025-06-04T13:43:35.046Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@349bb5f7]
2025-06-04T13:43:35.048Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T13:43:35.061Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 27001 with epoch 0
2025-06-04T13:43:35.110Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T13:43:35.121Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Москва","requestTime":"2025-06-04T13:43:34.950613200Z"}, headers={kafka_offset=121, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@2229bcb1, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Москва, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749044615060, kafka_groupId=weather-stats-group}]]
2025-06-04T13:43:35.129Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Москва","requestTime":"2025-06-04T13:43:34.950613200Z"}
2025-06-04T13:43:35.162Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Прогноз для города Москва на 2025-06-04T13:00 успешно сформирован
2025-06-04T13:43:35.207Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T13:43:35.218Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=188, cityId=3, temperature=20.631, date=2025-06-04 13:00:00.0, windSpeed=8.219]]
2025-06-04T13:43:35.222Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 3
2025-06-04T13:43:35.228Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@645911026 wrapping org.postgresql.jdbc.PgConnection@417e4e] read-only
2025-06-04T13:43:35.240Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:43:35.259Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@645911026 wrapping org.postgresql.jdbc.PgConnection@417e4e]
2025-06-04T13:43:35.260Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T13:43:35.262Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 3
2025-06-04T13:43:35.264Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T13:43:35.293Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.updateRequestsByCityId(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:529) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:647) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy186.executeUpdate(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:267) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	... 27 common frames omitted

2025-06-04T13:43:35.303Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=122, leaderEpoch=null, metadata=''}}
2025-06-04T13:43:35.305Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=122, leaderEpoch=null, metadata=''}}
2025-06-04T13:43:40.316Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:43:40.318Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:43:45.322Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:43:45.324Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:43:50.327Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:43:50.330Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:43:55.333Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:43:55.338Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:44:00.343Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:44:00.346Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:44:05.349Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:44:05.351Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:44:10.354Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:44:10.358Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:44:15.360Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:44:15.361Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:44:20.363Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:44:20.366Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:44:25.369Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:44:25.371Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:44:30.374Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:44:30.376Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:44:35.378Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:44:35.380Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:50:20.430Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Disconnecting from node 0 due to request timeout.
2025-06-04T13:50:20.435Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cancelled in-flight FETCH request with correlation id 170 due to node 0 being disconnected (elapsed time since creation: 340243ms, elapsed time since send: 340243ms, throttle time: 0ms, request timeout: 30000ms)
2025-06-04T13:50:20.437Z  INFO 1 --- [demo] [kafka-coordinator-heartbeat-thread | weather-stats-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Group coordinator redpanda:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-06-04T13:50:20.436Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Error sending fetch request (sessionId=2, epoch=136) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2025-06-04T13:50:20.438Z  INFO 1 --- [demo] [kafka-coordinator-heartbeat-thread | weather-stats-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Requesting disconnect from last known coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T13:50:20.439Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:50:20.439Z  INFO 1 --- [demo] [kafka-coordinator-heartbeat-thread | weather-stats-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Client requested disconnect from node 2147483647
2025-06-04T13:50:20.440Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:50:20.533Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T13:50:25.442Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:50:25.445Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:50:30.447Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:50:30.449Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:50:35.451Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:50:35.453Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:50:40.457Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:50:40.458Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:50:45.460Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:50:45.462Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:50:50.464Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:50:50.466Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:50:55.468Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:50:55.470Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:51:00.473Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:51:00.477Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:51:05.479Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:51:05.481Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:51:10.484Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:51:10.486Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:51:15.488Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:51:15.490Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:51:20.491Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:51:20.493Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:51:25.495Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:51:25.497Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:51:30.499Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:51:30.501Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:51:35.504Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:51:35.505Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:51:40.507Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:51:40.509Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:51:45.514Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:51:45.515Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:51:50.518Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:51:50.521Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:51:55.525Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:51:55.527Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:52:00.530Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:52:00.533Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:52:05.537Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:52:05.538Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:52:10.540Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:52:10.542Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:52:15.546Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:52:15.548Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:52:20.551Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:52:20.553Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:52:25.556Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:52:25.565Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:52:30.567Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:52:30.576Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:52:35.580Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:52:35.583Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:52:40.586Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:52:40.588Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:52:45.590Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:52:45.592Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:52:50.594Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:52:50.596Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:52:55.599Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:52:55.601Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:53:00.603Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:53:00.605Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:53:05.608Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:53:05.610Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:53:10.612Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:53:10.614Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:53:15.616Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:53:15.618Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:53:20.621Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:53:20.623Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:53:25.626Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:53:25.627Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:53:30.629Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:53:30.632Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:53:35.634Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:53:35.637Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:53:40.640Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:53:40.642Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:53:45.644Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:53:45.646Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:53:50.649Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:53:50.651Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:53:55.653Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:53:55.655Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:54:00.658Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:54:00.660Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:54:05.663Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:54:05.664Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:54:10.666Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:54:10.669Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:54:15.671Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:54:15.673Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:54:20.675Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:54:20.676Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:54:25.679Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:54:25.681Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:54:30.684Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:54:30.687Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:54:35.689Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:54:35.691Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:54:40.693Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:54:40.695Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:54:45.699Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:54:45.701Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:54:50.704Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:54:50.706Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:54:55.707Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:54:55.715Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:55:00.719Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:55:00.721Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:55:05.724Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:55:05.727Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:55:10.730Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:55:10.732Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:55:15.735Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:55:15.737Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:55:20.739Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:55:20.740Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:55:25.743Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:55:25.745Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:55:30.747Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:55:30.748Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:55:35.750Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:55:35.751Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:55:40.753Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:55:40.754Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:55:45.758Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:55:45.760Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:55:50.762Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:55:50.777Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:55:55.788Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:55:55.790Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:56:00.793Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:56:00.795Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:56:05.798Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:56:05.800Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:56:10.802Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:56:10.803Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:56:15.806Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:56:15.808Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:56:20.809Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:56:20.811Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:56:25.813Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:56:25.814Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:56:30.817Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:56:30.820Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:56:35.822Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:56:35.832Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:56:40.836Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:56:40.837Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:56:45.839Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:56:45.842Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:56:50.844Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:56:50.846Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:56:55.848Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:56:55.850Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:57:00.855Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:57:00.857Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:57:05.858Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:57:05.860Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:57:10.862Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:57:10.864Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:57:15.866Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:57:15.867Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:57:20.869Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:57:20.871Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:57:25.873Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:57:25.875Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:57:30.877Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:57:30.878Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:57:35.881Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:57:35.883Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:57:40.885Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:57:40.887Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:57:45.890Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:57:45.893Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:57:50.896Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:57:50.898Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:57:55.900Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:57:55.902Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:58:00.905Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:58:00.907Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:58:05.909Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:58:05.911Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:58:06.966Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node -1 disconnected.
2025-06-04T13:58:10.913Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:58:10.915Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:58:15.350Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=demo-producer-1] Node -1 disconnected.
2025-06-04T13:58:15.917Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:58:15.919Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:58:20.921Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:58:20.923Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:58:25.926Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:58:25.928Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:58:29.186Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/index.html", parameters={}
2025-06-04T13:58:29.195Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-06-04T13:58:29.219Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:58:29.261Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui.css", parameters={}
2025-06-04T13:58:29.264Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-06-04T13:58:29.271Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
2025-06-04T13:58:29.275Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-06-04T13:58:29.275Z DEBUG 1 --- [demo] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
2025-06-04T13:58:29.275Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/index.css", parameters={}
2025-06-04T13:58:29.280Z DEBUG 1 --- [demo] [http-nio-8080-exec-8] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-06-04T13:58:29.280Z DEBUG 1 --- [demo] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-06-04T13:58:29.281Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:58:29.283Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-06-04T13:58:29.292Z DEBUG 1 --- [demo] [http-nio-8080-exec-9] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-06-04T13:58:29.300Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:58:29.301Z DEBUG 1 --- [demo] [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:58:29.326Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:58:29.341Z DEBUG 1 --- [demo] [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:58:29.900Z DEBUG 1 --- [demo] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/v3/api-docs/swagger-config", parameters={}
2025-06-04T13:58:29.910Z DEBUG 1 --- [demo] [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-06-04T13:58:29.914Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/favicon-32x32.png", parameters={}
2025-06-04T13:58:29.918Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-06-04T13:58:29.922Z DEBUG 1 --- [demo] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json]
2025-06-04T13:58:29.923Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:58:29.928Z DEBUG 1 --- [demo] [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8080/swagger-ui/oauth2-re (truncated)...]
2025-06-04T13:58:29.932Z DEBUG 1 --- [demo] [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:58:30.010Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/v3/api-docs", parameters={}
2025-06-04T13:58:30.012Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-06-04T13:58:30.273Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.springdoc.api.AbstractOpenApiResource  : Init duration for springdoc-openapi is: 254 ms
2025-06-04T13:58:30.319Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, */*] and supported [application/json]
2025-06-04T13:58:30.322Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-06-04T13:58:30.325Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:58:30.931Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:58:30.933Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:58:35.936Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:58:35.937Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:58:36.147Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/request_counters", parameters={}
2025-06-04T13:58:36.149Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.RequestCounterController#getRequestCounters()
2025-06-04T13:58:36.153Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1902383663 wrapping org.postgresql.jdbc.PgConnection@375b5b7f] read-only
2025-06-04T13:58:36.237Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1902383663 wrapping org.postgresql.jdbc.PgConnection@375b5b7f]
2025-06-04T13:58:36.246Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T13:58:36.250Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [[RequestCounterDto[cityId=4, requestCount=1, lastAccessDatetime=2025-06-04 13:05:52.231236]]]
2025-06-04T13:58:36.255Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:58:40.940Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:58:40.942Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:58:45.945Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:58:45.949Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:58:50.953Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:58:50.955Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:58:55.957Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:58:55.960Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:59:00.963Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:59:00.965Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:59:05.967Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:59:05.969Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:59:10.972Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:59:10.975Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:59:15.976Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:59:15.978Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:59:20.981Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:59:20.982Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:59:25.985Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:59:25.987Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:59:30.989Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:59:30.991Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:59:35.994Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:59:35.996Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:59:40.999Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:59:41.000Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:59:46.004Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:59:46.005Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:59:51.007Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:59:51.009Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T13:59:51.800Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0", parameters={}
2025-06-04T13:59:51.803Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T13:59:51.804Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Москва
2025-06-04T13:59:51.806Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T13:00
2025-06-04T13:59:51.826Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Москва на 2025-06-04T13:00 успешно сформирован
2025-06-04T13:59:51.828Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T13:59:51.830Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=189, cityId=3, temperature=20.631, date=2025-06-04 13:00:00.0, windSpeed=8.219]]
2025-06-04T13:59:51.832Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T13:59:51.834Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Москва","requestTime":"2025-06-04T13:59:51.816618100Z"}, headers={kafka_offset=122, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@2229bcb1, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Москва, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749045591818, kafka_groupId=weather-stats-group}]]
2025-06-04T13:59:51.835Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T13:59:51.835Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Москва","requestTime":"2025-06-04T13:59:51.816618100Z"}
2025-06-04T13:59:51.840Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 3
2025-06-04T13:59:51.842Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@23428596 wrapping org.postgresql.jdbc.PgConnection@417e4e] read-only
2025-06-04T13:59:51.845Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@23428596 wrapping org.postgresql.jdbc.PgConnection@417e4e]
2025-06-04T13:59:51.848Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T13:59:51.849Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 3
2025-06-04T13:59:51.851Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T13:59:51.854Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.updateRequestsByCityId(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:529) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:647) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy186.executeUpdate(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:267) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	... 27 common frames omitted

2025-06-04T13:59:51.859Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=123, leaderEpoch=null, metadata=''}}
2025-06-04T13:59:51.860Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=123, leaderEpoch=null, metadata=''}}
2025-06-04T13:59:56.865Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T13:59:56.867Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:00:01.870Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:00:01.872Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:00:06.874Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:00:06.876Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:00:11.878Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:00:11.879Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:00:16.881Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:00:16.883Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:00:21.886Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:00:21.888Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:00:26.890Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:00:26.892Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:00:31.894Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:00:31.896Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:00:36.899Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:00:36.901Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:00:41.903Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:00:41.905Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:00:46.907Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:00:46.908Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:00:51.911Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:00:51.913Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:00:56.915Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:00:56.917Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:01:01.919Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:01:01.920Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:01:06.923Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:01:06.925Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:01:11.927Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:01:11.929Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:01:16.931Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:01:16.933Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:01:21.935Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:01:21.941Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:01:26.944Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:01:26.946Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:01:31.948Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:01:31.950Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:01:36.954Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:01:36.956Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:01:41.959Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:01:41.961Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:01:46.969Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:01:46.971Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:01:51.973Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:01:51.974Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:01:56.976Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:01:56.978Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:02:01.980Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:02:01.983Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:02:06.986Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:02:06.988Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:02:11.992Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:02:11.994Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:02:16.996Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:02:16.999Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:02:22.001Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:02:22.003Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:02:27.006Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:02:27.007Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:02:32.010Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:02:32.011Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:02:37.013Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:02:37.015Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:02:42.018Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:02:42.019Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:02:47.022Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:02:47.025Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:02:52.029Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:02:52.031Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:02:57.033Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:02:57.035Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:03:02.037Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:03:02.040Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:03:07.042Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:03:07.044Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:03:12.046Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:03:12.049Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:03:17.052Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:03:17.053Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:03:22.057Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:03:22.062Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:03:27.065Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:03:27.069Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:03:32.071Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:03:32.072Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:03:37.076Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:03:37.078Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:03:42.081Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:03:42.084Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:03:47.086Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:03:47.087Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:03:52.089Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:03:52.091Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:03:57.093Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:03:57.095Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:04:02.097Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:04:02.099Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:04:07.101Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:04:07.104Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:04:12.106Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:04:12.108Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:04:17.110Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:04:17.113Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:04:22.115Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:04:22.117Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:04:27.120Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:04:27.121Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:04:32.123Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:04:32.126Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:04:34.840Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%BE%D1%87%D0%B8", parameters={}
2025-06-04T14:04:34.842Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T14:04:34.844Z  INFO 1 --- [demo] [http-nio-8080-exec-3] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Сочи
2025-06-04T14:04:34.845Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T14:00
2025-06-04T14:04:34.851Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] c.e.d.s.i.CoordinatesFromApiServiceImpl  : Сформированный URL запроса: https://geocode-maps.yandex.ru/v1?apikey=be1242a5-4916-4f50-b7ba-17753df6f8cd&geocode=Сочи&format=json
2025-06-04T14:04:35.024Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : HTTP GET https://geocode-maps.yandex.ru/v1?apikey=be1242a5-4916-4f50-b7ba-17753df6f8cd&geocode=%D0%A1%D0%BE%D1%87%D0%B8&format=json
2025-06-04T14:04:35.032Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04T14:04:35.763Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T14:04:35.768Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04T14:04:35.792Z  INFO 1 --- [demo] [http-nio-8080-exec-3] c.e.d.s.i.CoordinatesFromApiServiceImpl  : Найдены координаты для города Сочи: 39.723098, 43.585472
2025-06-04T14:04:35.813Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=39.723098&lon=43.585472&date=2025-06-04T14:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T14:04:35.815Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T14:04:36.425Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T14:04:36.427Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T14:04:36.471Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:04:36.473Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:04:36.463771900Z"}, headers={kafka_offset=123, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@2229bcb1, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749045876464, kafka_groupId=weather-stats-group}]]
2025-06-04T14:04:36.474Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:04:36.463771900Z"}
2025-06-04T14:04:36.480Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 49
2025-06-04T14:04:36.481Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@659301901 wrapping org.postgresql.jdbc.PgConnection@417e4e] read-only
2025-06-04T14:04:36.485Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@659301901 wrapping org.postgresql.jdbc.PgConnection@417e4e]
2025-06-04T14:04:36.485Z  INFO 1 --- [demo] [http-nio-8080-exec-3] c.e.d.controller.ForecastController      : Прогноз для города Сочи на 2025-06-04T14:00 успешно сформирован
2025-06-04T14:04:36.486Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T14:04:36.487Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:04:36.487Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T14:04:36.489Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T14:04:36.490Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=190, cityId=49, temperature=10.777, date=2025-06-04 14:00:00.0, windSpeed=5.339]]
2025-06-04T14:04:36.493Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T14:04:36.493Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.updateRequestsByCityId(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: jakarta.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:529) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:647) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy186.executeUpdate(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:267) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	... 27 common frames omitted

2025-06-04T14:04:36.500Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=124, leaderEpoch=null, metadata=''}}
2025-06-04T14:04:36.501Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=124, leaderEpoch=null, metadata=''}}
2025-06-04T14:04:41.504Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:04:41.505Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:04:46.508Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:04:46.509Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:04:51.511Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:04:51.512Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:04:56.514Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:04:56.516Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:05:01.518Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:05:01.519Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:05:06.521Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:05:06.523Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:05:11.524Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:05:11.526Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:05:16.529Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:05:16.530Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:05:21.533Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:05:21.534Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:05:26.536Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:05:26.538Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:05:31.542Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:05:31.544Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:05:36.547Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:05:36.617Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:05:41.633Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:05:41.635Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:05:46.638Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:05:46.656Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:05:51.659Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:05:51.661Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:05:56.663Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:05:56.666Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:06:01.668Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:06:01.670Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:06:06.672Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:06:06.675Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:06:11.677Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:06:11.679Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:06:16.682Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:06:16.685Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:06:21.688Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:06:21.689Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:06:26.691Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:06:26.694Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:06:31.696Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:06:31.698Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:06:36.701Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:06:36.702Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:06:41.704Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:06:41.706Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:06:46.708Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:06:46.711Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:06:51.712Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:06:51.715Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:06:56.717Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:06:56.719Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:07:01.721Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:07:01.724Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:07:06.726Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:07:06.727Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:07:11.729Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:07:11.731Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:07:16.733Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:07:16.735Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:07:21.737Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:07:21.747Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:07:26.749Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:07:26.752Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:07:31.753Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:07:31.756Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:07:36.758Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:07:36.761Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:07:41.763Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:07:41.765Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:07:46.767Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:07:46.769Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:07:51.771Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:07:51.773Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:07:56.776Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:07:56.778Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:08:01.781Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:08:01.784Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:08:06.786Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:08:06.789Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:08:11.791Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:08:11.793Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:08:16.795Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:08:16.797Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:08:21.800Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:08:21.802Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:08:26.805Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:08:26.809Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:08:31.812Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:08:31.814Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:08:36.817Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:08:36.819Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:08:41.822Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:08:41.824Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:08:46.827Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:08:46.829Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:08:51.831Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:08:51.833Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:08:56.836Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:08:56.838Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:09:01.840Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:09:01.876Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:09:06.881Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:09:06.883Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:09:11.886Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:09:11.887Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:09:16.890Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:09:16.892Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:09:20.542Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node -1 disconnected.
2025-06-04T14:09:21.893Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:09:21.896Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:09:26.899Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:09:26.901Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:09:31.903Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:09:31.905Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:09:36.907Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:09:36.909Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:09:41.911Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:09:41.913Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:09:46.914Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:09:46.915Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:09:51.918Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:09:51.920Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:09:56.923Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:09:56.924Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:10:01.927Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:10:01.929Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:10:06.930Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:10:06.964Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:10:11.968Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:10:11.970Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:10:16.972Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:10:16.975Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:10:21.978Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:10:21.980Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:10:26.982Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:10:26.985Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:10:31.988Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:10:31.990Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:10:36.992Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:10:36.994Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:10:41.997Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:10:42.001Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:10:47.004Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:10:47.006Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:10:52.010Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:10:52.011Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:10:57.014Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:10:57.016Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:11:02.018Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:11:02.022Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:11:07.026Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:11:07.028Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:11:12.030Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:11:12.034Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:11:17.038Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:11:17.090Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:11:22.093Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:11:22.096Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:11:27.099Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:11:27.101Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:11:32.103Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:11:32.105Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:11:37.108Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:11:37.110Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:11:42.112Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:11:42.114Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:11:47.116Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:11:47.118Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:11:48.434Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:11:48.435Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T14:11:48.437Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T14:11:48.438Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:11:48.439Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-44f106fa-0d85-4228-aa1c-2b12ad99a865 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T14:11:48.442Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T14:11:48.443Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T14:11:48.443Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T14:11:48.447Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T14:11:48.448Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T14:13:50.420Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T14:13:50.426Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T14:13:50.429Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T14:13:51.740Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:13:51.745Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T14:13:51.798Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:13:51.802Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:13:51.805Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:13:51.806Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 48 ms. Found 0 JDBC repository interfaces.
2025-06-04T14:13:51.830Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:13:51.834Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T14:13:52.057Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 213 ms. Found 3 JPA repository interfaces.
2025-06-04T14:13:52.094Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:13:52.098Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T14:13:52.119Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:13:52.123Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:13:52.124Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:13:52.125Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-06-04T14:13:53.153Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T14:13:53.178Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T14:13:53.180Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T14:13:53.339Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T14:13:53.340Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2840 ms
2025-06-04T14:13:53.554Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T14:13:53.896Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@bcb09a6
2025-06-04T14:13:53.900Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T14:13:54.023Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T14:13:54.025Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T14:13:54.026Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T14:13:54.031Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T14:13:54.034Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T14:13:54.034Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T14:13:54.036Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T14:13:54.038Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T14:13:54.040Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T14:13:54.047Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T14:13:54.048Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T14:13:54.049Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T14:13:54.050Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T14:13:54.057Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:13:54.058Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T14:13:54.060Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T14:13:54.074Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T14:13:54.076Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T14:13:54.078Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T14:13:54.081Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T14:13:54.083Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T14:13:54.092Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T14:13:54.099Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T14:13:54.101Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:13:54.119Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T14:13:54.129Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:13:54.144Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:13:54.146Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T14:13:54.147Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T14:13:54.149Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:13:54.150Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T14:13:54.151Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T14:13:54.177Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.054s)
2025-06-04T14:13:54.182Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T14:13:54.195Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T14:13:54.202Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T14:13:54.207Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 50 of 64M
2025-06-04T14:13:54.346Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T14:13:54.509Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T14:13:54.578Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T14:13:55.165Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T14:13:56.492Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T14:13:56.561Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T14:13:56.859Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T14:13:57.873Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T14:13:57.879Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T14:13:58.765Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T14:13:58.896Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T14:13:58.962Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T14:13:59.028Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T14:13:59.079Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T14:13:59.150Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T14:13:59.409Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T14:13:59.809Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T14:13:59.879Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T14:13:59.968Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T14:14:00.218Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T14:14:00.222Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T14:14:00.223Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T14:14:00.224Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749046440220
2025-06-04T14:14:00.231Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T14:14:00.244Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:14:00.260Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 10.848 seconds (process running for 11.699)
2025-06-04T14:14:00.654Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T14:14:00.656Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T14:14:00.660Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T14:14:00.678Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-b2630360-b624-4576-8c29-73c2850a6ae6
2025-06-04T14:14:00.680Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T14:14:00.683Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=71, memberId='consumer-weather-stats-group-1-b2630360-b624-4576-8c29-73c2850a6ae6', protocol='range'}
2025-06-04T14:14:00.692Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 71: {consumer-weather-stats-group-1-b2630360-b624-4576-8c29-73c2850a6ae6=Assignment(partitions=[weather-requests-0])}
2025-06-04T14:14:00.702Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=71, memberId='consumer-weather-stats-group-1-b2630360-b624-4576-8c29-73c2850a6ae6', protocol='range'}
2025-06-04T14:14:00.705Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T14:14:00.709Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T14:14:00.720Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=124, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T14:14:00.724Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T14:14:05.252Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:14:05.255Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:14:10.259Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:14:10.261Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:14:15.264Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:14:15.267Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:14:20.269Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:14:20.271Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:14:25.273Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:14:25.275Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:14:30.277Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:14:30.280Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:14:35.284Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:14:35.286Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:14:36.838Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T14:14:36.840Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T14:14:36.842Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T14:14:36.844Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T14:14:36.845Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T14:14:36.849Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@8b1170f
2025-06-04T14:14:36.851Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@1842dc39
2025-06-04T14:14:36.852Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T14:14:36.853Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-06-04T14:14:36.871Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%BE%D1%87%D0%B8", parameters={}
2025-06-04T14:14:36.894Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T14:14:36.948Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Сочи
2025-06-04T14:14:36.950Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T14:00
2025-06-04T14:14:38.132Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=39.723098&lon=43.585472&date=2025-06-04T14:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T14:14:38.152Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T14:14:40.288Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:14:40.290Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:14:40.947Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T14:14:40.949Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T14:14:41.016Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T14:14:41.019Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T14:14:41.041Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T14:14:41.070Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T14:14:41.072Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T14:14:41.073Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T14:14:41.074Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749046481072
2025-06-04T14:14:41.077Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@f56faba]
2025-06-04T14:14:41.082Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T14:14:41.088Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 28001 with epoch 0
2025-06-04T14:14:41.148Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:14:41.161Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:14:40.981988600Z"}, headers={kafka_offset=124, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@44be115b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749046481096, kafka_groupId=weather-stats-group}]]
2025-06-04T14:14:41.165Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:14:40.981988600Z"}
2025-06-04T14:14:41.191Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Сочи на 2025-06-04T14:00 успешно сформирован
2025-06-04T14:14:41.216Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T14:14:41.228Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=191, cityId=49, temperature=10.777, date=2025-06-04 14:00:00.0, windSpeed=5.339]]
2025-06-04T14:14:41.242Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 49
2025-06-04T14:14:41.247Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T14:14:41.248Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1340161432 wrapping org.postgresql.jdbc.PgConnection@743ccde3] read-only
2025-06-04T14:14:41.274Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1340161432 wrapping org.postgresql.jdbc.PgConnection@743ccde3]
2025-06-04T14:14:41.275Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T14:14:41.277Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:14:41.278Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T14:14:41.278Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:14:41.290Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:14:41.305Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:55) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:14:41.316Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=125, leaderEpoch=null, metadata=''}}
2025-06-04T14:14:41.318Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=125, leaderEpoch=null, metadata=''}}
2025-06-04T14:14:46.326Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:14:46.328Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:14:51.330Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:14:51.334Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:14:56.339Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:14:56.342Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:15:01.345Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:15:01.347Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:15:06.350Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:15:06.352Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:15:11.355Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:15:11.357Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:15:16.359Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:15:16.360Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:15:21.362Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:15:21.364Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:15:26.367Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:15:26.370Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:15:27.976Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:15:27.979Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T14:15:27.981Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T14:15:27.983Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:15:27.986Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-b2630360-b624-4576-8c29-73c2850a6ae6 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T14:15:27.988Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T14:15:27.990Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T14:15:27.991Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T14:15:27.995Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T14:15:27.996Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T14:15:28.303Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T14:15:28.305Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T14:15:28.306Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T14:15:28.307Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T14:15:28.317Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T14:15:28.320Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T14:15:28.323Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T14:15:28.325Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T14:15:28.329Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T14:15:28.387Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T14:15:28.407Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T14:15:28.412Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T14:15:28.417Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T14:15:28.419Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T14:15:28.425Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T14:15:28.447Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T14:15:28.458Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T14:15:28.466Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T14:17:20.833Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T14:17:20.837Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T14:17:20.839Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T14:17:22.263Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:17:22.267Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T14:17:22.316Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:17:22.320Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:17:22.323Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:17:22.326Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
2025-06-04T14:17:22.349Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:17:22.354Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T14:17:22.573Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 207 ms. Found 3 JPA repository interfaces.
2025-06-04T14:17:22.613Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:17:22.617Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T14:17:22.641Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:17:22.644Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:17:22.646Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:17:22.647Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-06-04T14:17:23.679Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T14:17:23.705Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T14:17:23.707Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T14:17:23.858Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T14:17:23.860Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2947 ms
2025-06-04T14:17:24.078Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T14:17:24.431Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@bcb09a6
2025-06-04T14:17:24.435Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T14:17:24.564Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T14:17:24.565Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T14:17:24.567Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T14:17:24.574Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T14:17:24.576Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T14:17:24.577Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T14:17:24.579Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T14:17:24.580Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T14:17:24.582Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T14:17:24.589Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T14:17:24.590Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T14:17:24.592Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T14:17:24.593Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T14:17:24.600Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:17:24.601Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T14:17:24.604Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T14:17:24.617Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T14:17:24.619Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T14:17:24.620Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T14:17:24.623Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T14:17:24.625Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T14:17:24.634Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T14:17:24.638Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T14:17:24.640Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:17:24.659Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T14:17:24.668Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:17:24.687Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:17:24.690Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T14:17:24.692Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T14:17:24.695Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:17:24.696Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T14:17:24.697Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T14:17:24.722Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.059s)
2025-06-04T14:17:24.730Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T14:17:24.745Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T14:17:24.751Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T14:17:24.758Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 50 of 64M
2025-06-04T14:17:24.901Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T14:17:25.060Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T14:17:25.133Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T14:17:25.722Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T14:17:27.112Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T14:17:27.184Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T14:17:27.516Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T14:17:28.543Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T14:17:28.550Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T14:17:29.403Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T14:17:29.564Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T14:17:29.633Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T14:17:29.690Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T14:17:29.732Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T14:17:29.803Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T14:17:30.048Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T14:17:30.447Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T14:17:30.519Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T14:17:30.609Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T14:17:30.860Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T14:17:30.865Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T14:17:30.866Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T14:17:30.867Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749046650862
2025-06-04T14:17:30.874Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T14:17:30.888Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:17:30.901Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 10.998 seconds (process running for 11.878)
2025-06-04T14:17:31.324Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T14:17:31.326Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T14:17:31.330Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T14:17:31.348Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-e4d5872a-cd0f-4723-a9da-5bfb1a1d0620
2025-06-04T14:17:31.351Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T14:17:31.355Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=73, memberId='consumer-weather-stats-group-1-e4d5872a-cd0f-4723-a9da-5bfb1a1d0620', protocol='range'}
2025-06-04T14:17:31.365Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 73: {consumer-weather-stats-group-1-e4d5872a-cd0f-4723-a9da-5bfb1a1d0620=Assignment(partitions=[weather-requests-0])}
2025-06-04T14:17:31.384Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=73, memberId='consumer-weather-stats-group-1-e4d5872a-cd0f-4723-a9da-5bfb1a1d0620', protocol='range'}
2025-06-04T14:17:31.387Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T14:17:31.391Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T14:17:31.403Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=125, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T14:17:31.406Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T14:17:35.894Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:17:35.896Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:17:39.550Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T14:17:39.552Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T14:17:39.553Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T14:17:39.554Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T14:17:39.555Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T14:17:39.559Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@8b1170f
2025-06-04T14:17:39.561Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@1842dc39
2025-06-04T14:17:39.562Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T14:17:39.563Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2025-06-04T14:17:39.580Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%BE%D1%87%D0%B8", parameters={}
2025-06-04T14:17:39.600Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T14:17:39.651Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Сочи
2025-06-04T14:17:39.653Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T14:00
2025-06-04T14:17:40.674Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=39.723098&lon=43.585472&date=2025-06-04T14:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T14:17:40.693Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T14:17:40.898Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:17:40.901Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:17:41.472Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T14:17:41.475Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T14:17:41.537Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T14:17:41.541Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T14:17:41.560Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T14:17:41.589Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T14:17:41.590Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T14:17:41.591Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T14:17:41.592Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749046661590
2025-06-04T14:17:41.595Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@1a5f2dff]
2025-06-04T14:17:41.601Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T14:17:41.612Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 29001 with epoch 0
2025-06-04T14:17:41.667Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:17:41.679Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:17:41.502430500Z"}, headers={kafka_offset=125, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@2e2a7287, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749046661611, kafka_groupId=weather-stats-group}]]
2025-06-04T14:17:41.685Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:17:41.502430500Z"}
2025-06-04T14:17:41.719Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Сочи на 2025-06-04T14:00 успешно сформирован
2025-06-04T14:17:41.745Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T14:17:41.756Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=224, cityId=49, temperature=10.777, date=2025-06-04 14:00:00.0, windSpeed=5.339]]
2025-06-04T14:17:41.770Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 49
2025-06-04T14:17:41.774Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T14:17:41.776Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@2112119901 wrapping org.postgresql.jdbc.PgConnection@60b589e1] read-only
2025-06-04T14:17:41.797Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@2112119901 wrapping org.postgresql.jdbc.PgConnection@60b589e1]
2025-06-04T14:17:41.799Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T14:17:41.800Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:17:41.801Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T14:17:41.803Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:17:41.816Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:17:41.832Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:55) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:17:41.843Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=126, leaderEpoch=null, metadata=''}}
2025-06-04T14:17:41.845Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=126, leaderEpoch=null, metadata=''}}
2025-06-04T14:17:46.856Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:17:46.857Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:17:51.860Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:17:51.862Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:17:56.864Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:17:56.866Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:18:01.869Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:18:01.871Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:18:06.874Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:18:06.876Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:18:11.878Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:18:11.880Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:18:16.884Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:18:16.886Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:18:21.889Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:18:21.891Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:18:26.895Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:18:26.897Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:18:31.899Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:18:31.902Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:18:36.906Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:18:36.909Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:18:41.913Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:18:41.915Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:18:46.919Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:18:46.922Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:18:51.940Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:18:51.942Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:18:56.944Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:18:56.946Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:19:01.949Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:19:01.951Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:19:06.953Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:19:06.956Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:19:11.960Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:19:11.962Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:19:16.965Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:19:16.968Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:19:21.971Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:19:21.974Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:19:26.976Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:19:26.979Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:19:31.982Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:19:32.002Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:19:37.005Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:19:37.009Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:19:42.012Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:19:42.014Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:19:42.402Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:19:42.406Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T14:19:42.411Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T14:19:42.414Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:19:42.416Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-e4d5872a-cd0f-4723-a9da-5bfb1a1d0620 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T14:19:42.418Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T14:19:42.420Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T14:19:42.421Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T14:19:42.427Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T14:19:42.429Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T14:21:53.599Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T14:21:53.604Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T14:21:53.608Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T14:21:55.636Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:21:55.648Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T14:21:55.739Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:21:55.744Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:21:55.747Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:21:55.750Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 81 ms. Found 0 JDBC repository interfaces.
2025-06-04T14:21:55.780Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:21:55.783Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T14:21:56.080Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 280 ms. Found 3 JPA repository interfaces.
2025-06-04T14:21:56.126Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:21:56.131Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T14:21:56.159Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:21:56.161Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:21:56.164Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:21:56.167Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-06-04T14:21:57.587Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T14:21:57.628Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T14:21:57.631Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T14:21:57.854Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T14:21:57.857Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4150 ms
2025-06-04T14:21:58.171Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T14:21:58.662Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@378bd86d
2025-06-04T14:21:58.667Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T14:21:58.869Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T14:21:58.871Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T14:21:58.872Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T14:21:58.883Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T14:21:58.885Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T14:21:58.887Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T14:21:58.889Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T14:21:58.890Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T14:21:58.893Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T14:21:58.900Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T14:21:58.902Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T14:21:58.905Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T14:21:58.907Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T14:21:58.916Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:21:58.918Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T14:21:58.922Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T14:21:58.939Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T14:21:58.941Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T14:21:58.943Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T14:21:58.947Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T14:21:58.949Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T14:21:58.961Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T14:21:58.966Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T14:21:58.967Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:21:58.993Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T14:21:59.002Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:21:59.022Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:21:59.024Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T14:21:59.026Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T14:21:59.029Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:21:59.030Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T14:21:59.031Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T14:21:59.062Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.065s)
2025-06-04T14:21:59.069Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T14:21:59.091Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T14:21:59.101Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T14:21:59.114Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 26 of 58M
2025-06-04T14:21:59.351Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T14:21:59.549Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T14:21:59.654Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T14:22:00.541Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T14:22:02.859Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T14:22:02.973Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T14:22:03.533Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T14:22:05.369Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T14:22:05.380Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T14:22:06.887Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T14:22:07.155Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T14:22:07.276Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T14:22:07.384Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T14:22:07.463Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T14:22:07.575Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T14:22:07.981Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T14:22:08.755Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T14:22:08.884Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T14:22:09.035Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T14:22:09.485Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T14:22:09.494Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T14:22:09.496Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T14:22:09.498Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749046929488
2025-06-04T14:22:09.508Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T14:22:09.530Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:22:09.552Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 17.285 seconds (process running for 18.51)
2025-06-04T14:22:10.399Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T14:22:10.402Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T14:22:10.410Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T14:22:10.454Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-3d618acf-5723-417b-82c4-76a0d7ed9542
2025-06-04T14:22:10.457Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T14:22:10.463Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=75, memberId='consumer-weather-stats-group-1-3d618acf-5723-417b-82c4-76a0d7ed9542', protocol='range'}
2025-06-04T14:22:10.479Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 75: {consumer-weather-stats-group-1-3d618acf-5723-417b-82c4-76a0d7ed9542=Assignment(partitions=[weather-requests-0])}
2025-06-04T14:22:10.515Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=75, memberId='consumer-weather-stats-group-1-3d618acf-5723-417b-82c4-76a0d7ed9542', protocol='range'}
2025-06-04T14:22:10.518Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T14:22:10.527Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T14:22:10.545Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=126, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T14:22:10.551Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T14:22:14.538Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:22:14.544Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:22:19.548Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:22:19.550Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:22:24.553Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:22:24.555Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:22:29.563Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:22:29.566Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:22:32.884Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T14:22:32.889Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T14:22:32.891Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T14:22:32.893Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T14:22:32.895Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T14:22:32.900Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1bbc1b90
2025-06-04T14:22:32.904Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@31450fc0
2025-06-04T14:22:32.906Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T14:22:32.908Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
2025-06-04T14:22:32.930Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%BE%D1%87%D0%B8", parameters={}
2025-06-04T14:22:32.956Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T14:22:33.030Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Сочи
2025-06-04T14:22:33.032Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T14:00
2025-06-04T14:22:34.445Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=39.723098&lon=43.585472&date=2025-06-04T14:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T14:22:34.475Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T14:22:34.573Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:22:34.575Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:22:35.775Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T14:22:35.780Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T14:22:35.873Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T14:22:35.878Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T14:22:35.910Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T14:22:35.949Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T14:22:35.952Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T14:22:35.954Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T14:22:35.955Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749046955952
2025-06-04T14:22:35.961Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@58516471]
2025-06-04T14:22:35.961Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T14:22:35.980Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 30001 with epoch 0
2025-06-04T14:22:36.043Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:22:36.056Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:22:35.824275900Z"}, headers={kafka_offset=126, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@4f0d9284, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749046955978, kafka_groupId=weather-stats-group}]]
2025-06-04T14:22:36.063Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:22:35.824275900Z"}
2025-06-04T14:22:36.098Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Сочи на 2025-06-04T14:00 успешно сформирован
2025-06-04T14:22:36.134Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T14:22:36.150Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=257, cityId=49, temperature=10.777, date=2025-06-04 14:00:00.0, windSpeed=5.339]]
2025-06-04T14:22:36.169Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 49
2025-06-04T14:22:36.177Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1582405937 wrapping org.postgresql.jdbc.PgConnection@25bf8bb5] read-only
2025-06-04T14:22:36.177Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T14:22:36.208Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1582405937 wrapping org.postgresql.jdbc.PgConnection@25bf8bb5]
2025-06-04T14:22:36.210Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T14:22:36.212Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:22:36.214Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T14:22:36.215Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:22:36.217Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : CityEntity(id=49, name=Сочи, coordX=39.723098, coordY=43.585472)
2025-06-04T14:22:36.220Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 14:22:35.8242759
2025-06-04T14:22:36.234Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:22:36.253Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:57) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:22:36.268Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=127, leaderEpoch=null, metadata=''}}
2025-06-04T14:22:36.271Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=127, leaderEpoch=null, metadata=''}}
2025-06-04T14:22:41.282Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:22:41.284Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:22:46.287Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:22:46.290Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:22:51.292Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:22:51.295Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:22:56.299Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:22:56.302Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:23:01.306Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:23:01.309Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:23:06.313Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:23:06.316Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:23:11.323Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:23:11.327Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:23:16.329Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:23:16.332Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:23:21.335Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:23:21.338Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:23:26.341Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:23:26.344Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:23:31.348Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:23:31.352Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:23:36.357Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:23:36.360Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:23:41.364Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:23:41.366Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:23:46.371Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:23:46.374Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:23:51.375Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:23:51.378Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:23:56.385Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:23:56.388Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:24:01.391Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:24:01.394Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:24:06.397Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:24:06.401Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:24:11.403Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:24:11.406Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:24:16.408Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:24:16.411Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:24:21.413Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:24:21.419Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:24:26.423Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:24:26.432Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:24:31.435Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:24:31.438Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:24:36.441Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:24:36.444Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:24:41.447Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:24:41.449Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:24:46.452Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:24:46.454Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:24:51.458Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:24:51.461Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:24:56.467Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:24:56.469Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:25:01.472Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:25:01.474Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:25:06.477Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:25:06.478Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:25:11.482Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:25:11.484Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:25:16.486Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:25:16.489Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:25:21.492Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:25:21.493Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:25:26.496Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:25:26.498Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:25:31.500Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:25:31.502Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:25:36.504Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:25:36.506Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:25:41.509Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:25:41.512Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:25:46.514Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:25:46.516Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:25:51.518Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:25:51.528Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:25:56.531Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:25:56.534Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:26:01.537Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:26:01.539Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:26:06.541Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:26:06.543Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:26:11.546Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:26:11.548Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:26:16.550Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:26:16.552Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:26:21.555Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:26:21.559Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:26:26.562Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:26:26.564Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:26:31.568Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:26:31.570Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:26:36.574Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:26:36.577Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:26:41.580Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:26:41.583Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:26:46.587Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:26:46.590Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:26:51.592Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:26:51.595Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:26:56.597Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:26:56.600Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:27:01.603Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:27:01.606Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:27:06.609Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:27:06.612Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:27:11.615Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:27:11.618Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:27:16.620Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:27:16.622Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:27:21.625Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:27:21.627Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:27:26.632Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:27:26.633Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:27:31.636Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:27:31.639Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:27:36.642Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:27:36.643Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:27:41.646Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:27:41.647Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:27:46.650Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:27:46.653Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:27:51.655Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:27:51.657Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:27:56.662Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:27:56.664Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:28:01.665Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:28:01.667Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:28:06.670Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:28:06.673Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:28:11.677Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:28:11.679Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:28:16.681Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:28:16.684Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:28:21.687Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:28:21.689Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:28:26.692Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:28:26.695Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:28:31.698Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:28:31.701Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:28:36.704Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:28:36.706Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:28:41.709Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:28:41.711Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:28:46.714Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:28:46.715Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:28:51.718Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:28:51.722Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:28:56.725Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:28:56.727Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:29:01.730Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:29:01.732Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:29:06.735Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:29:06.737Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:29:11.739Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:29:11.741Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:29:16.743Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:29:16.745Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:29:21.747Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:29:21.749Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:29:25.647Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:29:25.649Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T14:29:25.652Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T14:29:25.653Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:29:25.655Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-3d618acf-5723-417b-82c4-76a0d7ed9542 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T14:29:25.659Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T14:29:25.660Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T14:29:25.662Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T14:29:25.668Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T14:29:25.670Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T14:29:25.699Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T14:29:25.701Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T14:29:25.703Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T14:29:25.705Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T14:29:25.718Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T14:29:25.720Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T14:29:25.725Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T14:29:25.729Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T14:29:25.734Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T14:29:25.785Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T14:29:25.795Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T14:29:25.798Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T14:29:25.800Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T14:29:25.802Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T14:29:25.804Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T14:29:25.828Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T14:29:25.842Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T14:29:25.853Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T14:31:44.192Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T14:31:44.199Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T14:31:44.203Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T14:31:46.343Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:31:46.351Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T14:31:46.427Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:31:46.432Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:31:46.436Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:31:46.439Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71 ms. Found 0 JDBC repository interfaces.
2025-06-04T14:31:46.471Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:31:46.479Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T14:31:46.772Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 277 ms. Found 3 JPA repository interfaces.
2025-06-04T14:31:46.824Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:31:46.830Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T14:31:46.867Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:31:46.869Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:31:46.872Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:31:46.874Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-06-04T14:31:48.332Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T14:31:48.371Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T14:31:48.373Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T14:31:48.574Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T14:31:48.577Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4265 ms
2025-06-04T14:31:48.897Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T14:31:49.431Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25c5e994
2025-06-04T14:31:49.437Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T14:31:49.616Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T14:31:49.618Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T14:31:49.619Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T14:31:49.626Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T14:31:49.629Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T14:31:49.631Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T14:31:49.632Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T14:31:49.633Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T14:31:49.636Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T14:31:49.642Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T14:31:49.644Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T14:31:49.647Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T14:31:49.648Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T14:31:49.658Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:31:49.660Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T14:31:49.664Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T14:31:49.680Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T14:31:49.682Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T14:31:49.684Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T14:31:49.695Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T14:31:49.699Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T14:31:49.723Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T14:31:49.732Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T14:31:49.734Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:31:49.760Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T14:31:49.777Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:31:49.802Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:31:49.805Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T14:31:49.806Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T14:31:49.810Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:31:49.811Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T14:31:49.812Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T14:31:49.841Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.076s)
2025-06-04T14:31:49.852Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T14:31:49.870Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T14:31:49.876Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T14:31:49.887Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 53 of 64M
2025-06-04T14:31:50.093Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T14:31:50.291Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T14:31:50.399Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T14:31:51.262Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T14:31:53.629Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T14:31:53.752Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T14:31:54.328Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T14:31:56.201Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T14:31:56.214Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", beanRef="__listener", contentTypeConverter="", containerFactory="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T14:31:57.688Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T14:31:57.948Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T14:31:58.075Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T14:31:58.183Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T14:31:58.258Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T14:31:58.394Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T14:31:58.833Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T14:31:59.592Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T14:31:59.702Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T14:31:59.928Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T14:32:00.378Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T14:32:00.384Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T14:32:00.389Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T14:32:00.393Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749047520380
2025-06-04T14:32:00.416Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T14:32:00.440Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:00.466Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 17.609 seconds (process running for 18.823)
2025-06-04T14:32:01.292Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T14:32:01.302Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T14:32:01.310Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T14:32:01.349Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-002b6040-bd58-4be6-8ad6-532511e9bc67
2025-06-04T14:32:01.351Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T14:32:01.357Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=77, memberId='consumer-weather-stats-group-1-002b6040-bd58-4be6-8ad6-532511e9bc67', protocol='range'}
2025-06-04T14:32:01.376Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 77: {consumer-weather-stats-group-1-002b6040-bd58-4be6-8ad6-532511e9bc67=Assignment(partitions=[weather-requests-0])}
2025-06-04T14:32:01.393Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=77, memberId='consumer-weather-stats-group-1-002b6040-bd58-4be6-8ad6-532511e9bc67', protocol='range'}
2025-06-04T14:32:01.396Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T14:32:01.406Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T14:32:01.431Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=127, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T14:32:01.436Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T14:32:05.452Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:32:05.455Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:10.459Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:32:10.461Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:11.182Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T14:32:11.184Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T14:32:11.186Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T14:32:11.188Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T14:32:11.189Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T14:32:11.192Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1bbc1b90
2025-06-04T14:32:11.194Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@31450fc0
2025-06-04T14:32:11.196Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T14:32:11.198Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-06-04T14:32:11.228Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%BE%D1%87%D0%B8", parameters={}
2025-06-04T14:32:11.259Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T14:32:11.331Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Сочи
2025-06-04T14:32:11.334Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T14:00
2025-06-04T14:32:12.797Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=39.723098&lon=43.585472&date=2025-06-04T14:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T14:32:12.822Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T14:32:15.464Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:32:15.466Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:20.470Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:32:20.472Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:25.476Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:32:25.478Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:29.198Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T14:32:29.203Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T14:32:29.302Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T14:32:29.314Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T14:32:29.345Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T14:32:29.416Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T14:32:29.419Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T14:32:29.421Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T14:32:29.423Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749047549419
2025-06-04T14:32:29.428Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@10d05986]
2025-06-04T14:32:29.432Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T14:32:29.451Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 31001 with epoch 0
2025-06-04T14:32:29.521Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:32:29.536Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}, headers={kafka_offset=127, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@3a8402ce, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749047549462, kafka_groupId=weather-stats-group}]]
2025-06-04T14:32:29.544Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}
2025-06-04T14:32:29.570Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 49
2025-06-04T14:32:29.575Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Сочи на 2025-06-04T14:00 успешно сформирован
2025-06-04T14:32:29.598Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T14:32:29.600Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:29.601Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T14:32:29.602Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:29.604Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : CityEntity(id=49, name=Сочи, coordX=39.723098, coordY=43.585472)
2025-06-04T14:32:29.606Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 14:32:29.2515507
2025-06-04T14:32:29.609Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T14:32:29.618Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:32:29.623Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=258, cityId=49, temperature=10.777, date=2025-06-04 14:00:00.0, windSpeed=5.339]]
2025-06-04T14:32:29.633Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:32:29.650Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T14:32:29.656Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:29.677Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 127 for partition weather-requests-0
2025-06-04T14:32:29.679Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:32:29.681Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:30.030Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:32:30.033Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}, headers={kafka_offset=127, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@3a8402ce, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749047549462, kafka_groupId=weather-stats-group}]]
2025-06-04T14:32:30.035Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}
2025-06-04T14:32:30.042Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 49
2025-06-04T14:32:30.047Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T14:32:30.048Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:30.049Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T14:32:30.050Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:30.052Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : CityEntity(id=49, name=Сочи, coordX=39.723098, coordY=43.585472)
2025-06-04T14:32:30.054Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 14:32:29.2515507
2025-06-04T14:32:30.058Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:32:30.059Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:32:30.067Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:30.080Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 127 for partition weather-requests-0
2025-06-04T14:32:30.081Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:32:30.083Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:30.541Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:32:30.544Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}, headers={kafka_offset=127, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@3a8402ce, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749047549462, kafka_groupId=weather-stats-group}]]
2025-06-04T14:32:30.546Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}
2025-06-04T14:32:30.552Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 49
2025-06-04T14:32:30.556Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T14:32:30.558Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:30.561Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T14:32:30.562Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:30.563Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : CityEntity(id=49, name=Сочи, coordX=39.723098, coordY=43.585472)
2025-06-04T14:32:30.564Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 14:32:29.2515507
2025-06-04T14:32:30.569Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:32:30.571Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:32:30.578Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:30.591Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 127 for partition weather-requests-0
2025-06-04T14:32:30.593Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:32:30.594Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:31.050Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:32:31.052Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}, headers={kafka_offset=127, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@3a8402ce, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749047549462, kafka_groupId=weather-stats-group}]]
2025-06-04T14:32:31.054Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}
2025-06-04T14:32:31.063Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 49
2025-06-04T14:32:31.069Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T14:32:31.073Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:31.078Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T14:32:31.080Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:31.081Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : CityEntity(id=49, name=Сочи, coordX=39.723098, coordY=43.585472)
2025-06-04T14:32:31.083Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 14:32:29.2515507
2025-06-04T14:32:31.087Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:32:31.091Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:32:31.102Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:31.114Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 127 for partition weather-requests-0
2025-06-04T14:32:31.116Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:32:31.117Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:31.559Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:32:31.561Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}, headers={kafka_offset=127, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@3a8402ce, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749047549462, kafka_groupId=weather-stats-group}]]
2025-06-04T14:32:31.563Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}
2025-06-04T14:32:31.571Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 49
2025-06-04T14:32:31.578Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T14:32:31.579Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:31.581Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T14:32:31.582Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:31.584Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : CityEntity(id=49, name=Сочи, coordX=39.723098, coordY=43.585472)
2025-06-04T14:32:31.585Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 14:32:29.2515507
2025-06-04T14:32:31.590Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:32:31.594Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:32:31.602Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:31.614Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 127 for partition weather-requests-0
2025-06-04T14:32:31.617Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:32:31.618Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:32.067Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:32:32.069Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}, headers={kafka_offset=127, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@3a8402ce, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749047549462, kafka_groupId=weather-stats-group}]]
2025-06-04T14:32:32.071Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}
2025-06-04T14:32:32.077Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 49
2025-06-04T14:32:32.081Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T14:32:32.082Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:32.085Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T14:32:32.086Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:32.087Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : CityEntity(id=49, name=Сочи, coordX=39.723098, coordY=43.585472)
2025-06-04T14:32:32.089Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 14:32:29.2515507
2025-06-04T14:32:32.093Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:32:32.094Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:32:32.100Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:32.112Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 127 for partition weather-requests-0
2025-06-04T14:32:32.115Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:32:32.116Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:32.577Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:32:32.579Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}, headers={kafka_offset=127, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@3a8402ce, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749047549462, kafka_groupId=weather-stats-group}]]
2025-06-04T14:32:32.580Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}
2025-06-04T14:32:32.586Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 49
2025-06-04T14:32:32.593Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T14:32:32.595Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:32.596Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T14:32:32.597Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:32.599Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : CityEntity(id=49, name=Сочи, coordX=39.723098, coordY=43.585472)
2025-06-04T14:32:32.600Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 14:32:29.2515507
2025-06-04T14:32:32.605Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:32:32.607Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:32:32.613Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:32.624Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 127 for partition weather-requests-0
2025-06-04T14:32:32.626Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:32:32.629Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:33.085Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:32:33.087Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}, headers={kafka_offset=127, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@3a8402ce, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749047549462, kafka_groupId=weather-stats-group}]]
2025-06-04T14:32:33.090Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}
2025-06-04T14:32:33.095Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 49
2025-06-04T14:32:33.100Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T14:32:33.101Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:33.103Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T14:32:33.104Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:33.106Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : CityEntity(id=49, name=Сочи, coordX=39.723098, coordY=43.585472)
2025-06-04T14:32:33.107Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 14:32:29.2515507
2025-06-04T14:32:33.111Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:32:33.114Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:32:33.121Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:33.133Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 127 for partition weather-requests-0
2025-06-04T14:32:33.135Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:32:33.138Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:33.594Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:32:33.596Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}, headers={kafka_offset=127, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@3a8402ce, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749047549462, kafka_groupId=weather-stats-group}]]
2025-06-04T14:32:33.598Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}
2025-06-04T14:32:33.604Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 49
2025-06-04T14:32:33.608Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T14:32:33.610Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:33.611Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T14:32:33.612Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:33.614Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : CityEntity(id=49, name=Сочи, coordX=39.723098, coordY=43.585472)
2025-06-04T14:32:33.615Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 14:32:29.2515507
2025-06-04T14:32:33.618Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:32:33.620Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:32:33.627Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:33.639Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 127 for partition weather-requests-0
2025-06-04T14:32:33.642Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:32:33.643Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:34.102Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:32:34.105Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}, headers={kafka_offset=127, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@3a8402ce, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749047549462, kafka_groupId=weather-stats-group}]]
2025-06-04T14:32:34.107Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:32:29.251550700Z"}
2025-06-04T14:32:34.113Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 49
2025-06-04T14:32:34.116Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T14:32:34.117Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:34.121Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T14:32:34.123Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 49
2025-06-04T14:32:34.125Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : CityEntity(id=49, name=Сочи, coordX=39.723098, coordY=43.585472)
2025-06-04T14:32:34.126Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 14:32:29.2515507
2025-06-04T14:32:34.129Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:32:34.131Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:59) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:32:34.137Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:34.148Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.DefaultErrorHandler   : Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for weather-requests-0@127

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:489) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
Caused by: org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:804) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	... 10 common frames omitted

2025-06-04T14:32:34.155Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.DefaultErrorHandler   : Skipping seek of: weather-requests-0@127
2025-06-04T14:32:34.159Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=128, leaderEpoch=null, metadata=''}}
2025-06-04T14:32:34.162Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=128, leaderEpoch=null, metadata=''}}
2025-06-04T14:32:39.180Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:32:39.183Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:44.187Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:32:44.189Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:49.192Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:32:49.193Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:54.196Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:32:54.199Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:32:59.202Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:32:59.204Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:33:04.208Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:33:04.210Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:33:09.213Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:33:09.215Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:33:14.217Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:33:14.219Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:33:19.223Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:33:19.225Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:33:24.228Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:33:24.230Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:33:29.234Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:33:29.237Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:33:34.240Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:33:34.243Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:33:39.246Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:33:39.249Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:33:44.250Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:33:44.253Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:33:49.254Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:33:49.257Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:33:54.259Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:33:54.262Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:33:59.265Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:33:59.275Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:34:04.278Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:34:04.281Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:34:09.284Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:34:09.287Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:34:14.290Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:34:14.292Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:34:19.296Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:34:19.299Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:34:24.301Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:34:24.303Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:34:29.306Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:34:29.307Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:34:34.311Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:34:34.315Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:34:39.318Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:34:39.320Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:34:44.323Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:34:44.325Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:34:49.328Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:34:49.330Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:34:54.333Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:34:54.338Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:34:59.342Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:34:59.344Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:35:04.346Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:35:04.348Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:35:09.351Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:35:09.354Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:35:14.357Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:35:14.359Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:35:19.361Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:35:19.363Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:35:24.366Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:35:24.370Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:35:29.374Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:35:29.377Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:35:34.380Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:35:34.383Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:35:39.386Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:35:39.388Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:35:44.392Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:35:44.394Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:35:49.397Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:35:49.399Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:35:54.402Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:35:54.405Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:35:59.409Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:35:59.412Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:36:04.416Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:36:04.418Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:36:09.421Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:36:09.422Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:36:14.426Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:36:14.429Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:36:19.432Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:36:19.434Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:36:24.436Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:36:24.439Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:36:29.442Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:36:29.445Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:36:34.447Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:36:34.450Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:36:39.453Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:36:39.455Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:36:44.458Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:36:44.460Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:36:49.462Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:36:49.464Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:36:54.466Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:36:54.469Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:36:59.471Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:36:59.472Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:37:04.475Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:37:04.477Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:37:09.478Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:37:09.487Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:37:14.489Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:37:14.492Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:37:19.493Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:37:19.496Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:37:24.499Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:37:24.501Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:37:29.504Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:37:29.507Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:37:34.509Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:37:34.512Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:37:39.515Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:37:39.516Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:37:44.520Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:37:44.522Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:37:49.524Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:37:49.526Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:37:54.528Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:37:54.530Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:37:59.532Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:37:59.534Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:38:04.536Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:38:04.537Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:38:09.543Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:38:09.545Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:38:14.547Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:38:14.548Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:38:19.552Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:38:19.554Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:38:24.556Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:38:24.558Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:38:29.560Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:38:29.563Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:38:34.567Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:38:34.569Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:38:39.572Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:38:39.574Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:38:44.578Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:38:44.580Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:38:49.582Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:38:49.586Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:38:54.590Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:38:54.592Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:38:59.596Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:38:59.597Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:39:04.598Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:39:04.600Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:39:09.603Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:39:09.622Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:39:14.639Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:39:14.641Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:39:19.643Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:39:19.653Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:39:24.656Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:39:24.658Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:39:29.660Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:39:29.662Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:39:34.666Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:39:34.674Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:39:38.700Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:39:38.703Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T14:39:38.706Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T14:39:38.707Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:39:38.709Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-002b6040-bd58-4be6-8ad6-532511e9bc67 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T14:39:38.712Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T14:39:38.713Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T14:39:38.714Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T14:39:38.719Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T14:39:38.720Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T14:39:38.837Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T14:39:38.839Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T14:39:38.840Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T14:39:38.842Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T14:39:38.858Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T14:39:38.861Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T14:39:38.866Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T14:39:38.869Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T14:39:38.874Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T14:39:38.938Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T14:39:38.948Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T14:39:38.950Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T14:39:38.951Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T14:39:38.952Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T14:39:38.955Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T14:39:38.977Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T14:39:38.984Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T14:39:38.990Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T14:42:03.201Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T14:42:03.207Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T14:42:03.210Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T14:42:05.316Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:42:05.326Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T14:42:05.407Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:42:05.414Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:42:05.420Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:42:05.423Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 79 ms. Found 0 JDBC repository interfaces.
2025-06-04T14:42:05.454Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:42:05.460Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T14:42:05.757Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 283 ms. Found 3 JPA repository interfaces.
2025-06-04T14:42:05.812Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:42:05.818Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T14:42:05.853Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:42:05.855Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:42:05.857Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:42:05.859Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-06-04T14:42:07.357Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T14:42:07.399Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T14:42:07.403Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T14:42:07.604Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T14:42:07.607Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4289 ms
2025-06-04T14:42:07.913Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T14:42:08.413Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@bcb09a6
2025-06-04T14:42:08.418Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T14:42:08.637Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T14:42:08.640Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T14:42:08.642Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T14:42:08.654Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T14:42:08.656Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T14:42:08.658Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T14:42:08.661Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T14:42:08.665Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T14:42:08.668Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T14:42:08.676Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T14:42:08.677Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T14:42:08.679Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T14:42:08.681Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T14:42:08.692Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:42:08.694Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T14:42:08.697Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T14:42:08.711Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T14:42:08.712Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T14:42:08.713Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T14:42:08.717Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T14:42:08.719Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T14:42:08.732Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T14:42:08.736Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T14:42:08.738Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:42:08.756Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T14:42:08.767Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:42:08.784Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:42:08.786Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T14:42:08.787Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T14:42:08.790Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:42:08.792Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T14:42:08.793Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T14:42:08.830Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.068s)
2025-06-04T14:42:08.837Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T14:42:08.857Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T14:42:08.865Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T14:42:08.873Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 51 of 64M
2025-06-04T14:42:09.070Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T14:42:09.274Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T14:42:09.374Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T14:42:10.266Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T14:42:12.691Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T14:42:12.809Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T14:42:13.403Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T14:42:15.346Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T14:42:15.360Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", idIsGroup=true, containerGroup="", errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T14:42:16.817Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T14:42:17.090Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T14:42:17.221Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T14:42:17.341Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T14:42:17.431Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T14:42:17.556Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T14:42:17.977Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T14:42:18.766Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T14:42:18.901Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T14:42:19.045Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T14:42:19.481Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T14:42:19.487Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T14:42:19.488Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T14:42:19.489Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749048139483
2025-06-04T14:42:19.501Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T14:42:19.536Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:19.568Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 17.783 seconds (process running for 19.085)
2025-06-04T14:42:20.377Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T14:42:20.380Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T14:42:20.387Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T14:42:20.418Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-f2e61437-7d8a-4efb-9dd8-f88c9eb698cb
2025-06-04T14:42:20.421Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T14:42:20.425Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=79, memberId='consumer-weather-stats-group-1-f2e61437-7d8a-4efb-9dd8-f88c9eb698cb', protocol='range'}
2025-06-04T14:42:20.445Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 79: {consumer-weather-stats-group-1-f2e61437-7d8a-4efb-9dd8-f88c9eb698cb=Assignment(partitions=[weather-requests-0])}
2025-06-04T14:42:20.470Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=79, memberId='consumer-weather-stats-group-1-f2e61437-7d8a-4efb-9dd8-f88c9eb698cb', protocol='range'}
2025-06-04T14:42:20.473Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T14:42:20.481Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T14:42:20.503Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=128, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T14:42:20.508Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T14:42:21.756Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T14:42:21.758Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T14:42:21.761Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T14:42:21.763Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T14:42:21.764Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T14:42:21.769Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6a7fc4c1
2025-06-04T14:42:21.772Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@71d78cac
2025-06-04T14:42:21.773Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T14:42:21.775Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2025-06-04T14:42:21.799Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%BE%D1%87%D0%B8", parameters={}
2025-06-04T14:42:21.827Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T14:42:21.898Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Сочи
2025-06-04T14:42:21.901Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T14:00
2025-06-04T14:42:23.397Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=39.723098&lon=43.585472&date=2025-06-04T14:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T14:42:23.423Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T14:42:24.544Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:42:24.548Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:24.569Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T14:42:24.574Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T14:42:24.661Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T14:42:24.667Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T14:42:24.704Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T14:42:24.748Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T14:42:24.750Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T14:42:24.752Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T14:42:24.753Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749048144750
2025-06-04T14:42:24.757Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@670b8233]
2025-06-04T14:42:24.760Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T14:42:24.777Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 32001 with epoch 0
2025-06-04T14:42:24.837Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:42:24.853Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}, headers={kafka_offset=128, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@5239ef63, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048144776, kafka_groupId=weather-stats-group}]]
2025-06-04T14:42:24.860Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}
2025-06-04T14:42:24.897Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Прогноз для города Сочи на 2025-06-04T14:00 успешно сформирован
2025-06-04T14:42:24.946Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:42:24.950Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T14:42:24.976Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=259, cityId=49, temperature=10.777, date=2025-06-04 14:00:00.0, windSpeed=5.339]]
2025-06-04T14:42:24.975Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:42:24.998Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:25.007Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T14:42:25.019Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 128 for partition weather-requests-0
2025-06-04T14:42:25.021Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:42:25.022Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:25.348Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:42:25.358Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}, headers={kafka_offset=128, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@5239ef63, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048144776, kafka_groupId=weather-stats-group}]]
2025-06-04T14:42:25.364Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}
2025-06-04T14:42:25.379Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:42:25.381Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:42:25.401Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:25.414Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 128 for partition weather-requests-0
2025-06-04T14:42:25.415Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:42:25.417Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:25.859Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:42:25.861Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}, headers={kafka_offset=128, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@5239ef63, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048144776, kafka_groupId=weather-stats-group}]]
2025-06-04T14:42:25.863Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}
2025-06-04T14:42:25.873Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:42:25.878Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:42:25.886Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:25.898Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 128 for partition weather-requests-0
2025-06-04T14:42:25.900Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:42:25.902Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:26.368Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:42:26.371Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}, headers={kafka_offset=128, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@5239ef63, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048144776, kafka_groupId=weather-stats-group}]]
2025-06-04T14:42:26.374Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}
2025-06-04T14:42:26.388Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:42:26.390Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:42:26.402Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:26.414Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 128 for partition weather-requests-0
2025-06-04T14:42:26.417Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:42:26.419Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:26.878Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:42:26.880Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}, headers={kafka_offset=128, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@5239ef63, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048144776, kafka_groupId=weather-stats-group}]]
2025-06-04T14:42:26.882Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}
2025-06-04T14:42:26.895Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:42:26.906Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:42:26.912Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:26.925Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 128 for partition weather-requests-0
2025-06-04T14:42:26.927Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:42:26.928Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:27.388Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:42:27.390Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}, headers={kafka_offset=128, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@5239ef63, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048144776, kafka_groupId=weather-stats-group}]]
2025-06-04T14:42:27.393Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}
2025-06-04T14:42:27.403Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:42:27.406Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:42:27.413Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:27.427Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 128 for partition weather-requests-0
2025-06-04T14:42:27.429Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:42:27.431Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:27.899Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:42:27.901Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}, headers={kafka_offset=128, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@5239ef63, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048144776, kafka_groupId=weather-stats-group}]]
2025-06-04T14:42:27.903Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}
2025-06-04T14:42:27.914Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:42:27.916Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:42:27.923Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:27.935Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 128 for partition weather-requests-0
2025-06-04T14:42:27.937Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:42:27.938Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:28.410Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:42:28.419Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}, headers={kafka_offset=128, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@5239ef63, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048144776, kafka_groupId=weather-stats-group}]]
2025-06-04T14:42:28.422Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}
2025-06-04T14:42:28.434Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:42:28.436Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:42:28.443Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:28.455Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 128 for partition weather-requests-0
2025-06-04T14:42:28.457Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:42:28.459Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:28.922Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:42:28.924Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}, headers={kafka_offset=128, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@5239ef63, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048144776, kafka_groupId=weather-stats-group}]]
2025-06-04T14:42:28.928Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}
2025-06-04T14:42:28.941Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:42:28.943Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:42:28.950Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:28.963Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 128 for partition weather-requests-0
2025-06-04T14:42:28.965Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:42:28.967Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:29.434Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:42:29.436Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}, headers={kafka_offset=128, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@5239ef63, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048144776, kafka_groupId=weather-stats-group}]]
2025-06-04T14:42:29.438Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:42:24.615493500Z"}
2025-06-04T14:42:29.448Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:42:29.451Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:42:29.457Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:29.474Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.DefaultErrorHandler   : Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for weather-requests-0@128

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:489) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
Caused by: org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:804) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	... 10 common frames omitted

2025-06-04T14:42:29.481Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.DefaultErrorHandler   : Skipping seek of: weather-requests-0@128
2025-06-04T14:42:29.484Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=129, leaderEpoch=null, metadata=''}}
2025-06-04T14:42:29.486Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=129, leaderEpoch=null, metadata=''}}
2025-06-04T14:42:34.506Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:42:34.508Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:39.511Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:42:39.513Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:44.515Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:42:44.517Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:49.522Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:42:49.524Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:54.527Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:42:54.529Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:42:59.533Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:42:59.535Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:43:04.537Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:43:04.540Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:43:09.544Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:43:09.546Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:43:14.549Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:43:14.551Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:43:19.554Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:43:19.558Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:43:24.560Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:43:24.564Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:43:29.569Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:43:29.571Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:43:34.574Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:43:34.576Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:43:39.580Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:43:39.582Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:43:44.586Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:43:44.590Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:43:49.594Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:43:49.597Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:43:54.600Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:43:54.603Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:43:59.606Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:43:59.609Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:44:04.611Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:44:04.613Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:44:09.615Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:44:09.617Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:44:14.620Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:44:14.624Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:44:19.627Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:44:19.630Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:44:24.633Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:44:24.635Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:44:29.638Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:44:29.639Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:44:34.643Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:44:34.646Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:44:39.650Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:44:39.652Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:44:44.654Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:44:44.663Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:44:49.667Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:44:49.669Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:44:54.676Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:44:54.678Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:44:59.682Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:44:59.684Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:45:04.687Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:45:04.689Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:45:09.692Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:45:09.694Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:45:14.698Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:45:14.700Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:45:19.703Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:45:19.705Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:45:24.708Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:45:24.709Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:45:29.713Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:45:29.715Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:45:34.719Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:45:34.748Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:45:39.752Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:45:39.754Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:45:44.757Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:45:44.760Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:45:49.764Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:45:49.767Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:45:54.770Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:45:54.773Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:45:58.592Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:45:58.594Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T14:45:58.597Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T14:45:58.598Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:45:58.600Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-f2e61437-7d8a-4efb-9dd8-f88c9eb698cb sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T14:45:58.603Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T14:45:58.607Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T14:45:58.609Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T14:45:58.614Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T14:45:58.615Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T14:45:58.829Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T14:45:58.832Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T14:45:58.833Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T14:45:58.835Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T14:45:58.850Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T14:45:58.853Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T14:45:58.857Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T14:45:58.867Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T14:45:58.872Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T14:45:58.927Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T14:45:58.935Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T14:45:58.937Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T14:45:58.939Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T14:45:58.940Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T14:45:58.944Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T14:45:58.963Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T14:45:58.971Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T14:45:58.978Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T14:52:55.153Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T14:52:55.161Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T14:52:55.165Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T14:52:57.269Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:52:57.276Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T14:52:57.355Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:52:57.361Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:52:57.366Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T14:52:57.370Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 76 ms. Found 0 JDBC repository interfaces.
2025-06-04T14:52:57.401Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:52:57.407Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T14:52:57.716Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 293 ms. Found 3 JPA repository interfaces.
2025-06-04T14:52:57.768Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T14:52:57.773Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T14:52:57.809Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:52:57.814Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:52:57.816Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T14:52:57.817Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-06-04T14:52:59.317Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T14:52:59.357Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T14:52:59.360Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T14:52:59.567Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T14:52:59.569Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4297 ms
2025-06-04T14:52:59.867Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T14:53:00.381Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@648ee871
2025-06-04T14:53:00.386Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T14:53:00.570Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T14:53:00.572Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T14:53:00.574Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T14:53:00.584Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T14:53:00.587Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T14:53:00.588Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T14:53:00.589Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T14:53:00.591Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T14:53:00.596Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T14:53:00.602Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T14:53:00.604Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T14:53:00.606Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T14:53:00.607Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T14:53:00.619Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:53:00.621Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T14:53:00.624Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T14:53:00.638Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T14:53:00.640Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T14:53:00.642Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T14:53:00.646Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T14:53:00.648Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T14:53:00.662Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T14:53:00.666Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T14:53:00.668Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:53:00.689Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T14:53:00.698Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:53:00.715Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:53:00.717Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T14:53:00.719Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T14:53:00.722Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T14:53:00.724Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T14:53:00.725Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T14:53:00.756Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.063s)
2025-06-04T14:53:00.763Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T14:53:00.784Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T14:53:00.793Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T14:53:00.802Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 50 of 64M
2025-06-04T14:53:01.023Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T14:53:01.216Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T14:53:01.316Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T14:53:02.198Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T14:53:04.571Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T14:53:04.695Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T14:53:05.242Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T14:53:07.064Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T14:53:07.077Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T14:53:08.552Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T14:53:08.841Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T14:53:08.963Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T14:53:09.074Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T14:53:09.153Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T14:53:09.275Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T14:53:09.709Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T14:53:10.444Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T14:53:10.561Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T14:53:10.713Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T14:53:11.124Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T14:53:11.132Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T14:53:11.134Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T14:53:11.135Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749048791127
2025-06-04T14:53:11.151Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T14:53:11.189Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:11.213Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 17.337 seconds (process running for 18.533)
2025-06-04T14:53:12.038Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T14:53:12.042Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T14:53:12.049Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T14:53:12.092Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-f53ba251-aa3c-48d9-bf67-9fe56170cc27
2025-06-04T14:53:12.095Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T14:53:12.100Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=81, memberId='consumer-weather-stats-group-1-f53ba251-aa3c-48d9-bf67-9fe56170cc27', protocol='range'}
2025-06-04T14:53:12.119Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 81: {consumer-weather-stats-group-1-f53ba251-aa3c-48d9-bf67-9fe56170cc27=Assignment(partitions=[weather-requests-0])}
2025-06-04T14:53:12.155Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=81, memberId='consumer-weather-stats-group-1-f53ba251-aa3c-48d9-bf67-9fe56170cc27', protocol='range'}
2025-06-04T14:53:12.159Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T14:53:12.167Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T14:53:12.190Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=129, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T14:53:12.195Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T14:53:16.197Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:53:16.200Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:21.204Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:53:21.208Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:25.921Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T14:53:25.923Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T14:53:25.925Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T14:53:25.926Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T14:53:25.928Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T14:53:25.934Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6065bcb7
2025-06-04T14:53:25.938Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@18df26a1
2025-06-04T14:53:25.940Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T14:53:25.942Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 18 ms
2025-06-04T14:53:25.965Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%A1%D0%BE%D1%87%D0%B8", parameters={}
2025-06-04T14:53:25.993Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T14:53:26.080Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Сочи
2025-06-04T14:53:26.083Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T14:00
2025-06-04T14:53:26.211Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:53:26.213Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:27.589Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=39.723098&lon=43.585472&date=2025-06-04T14:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T14:53:27.621Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T14:53:29.854Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T14:53:29.860Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T14:53:29.959Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T14:53:29.963Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T14:53:29.995Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T14:53:30.033Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T14:53:30.036Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T14:53:30.038Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T14:53:30.039Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749048810036
2025-06-04T14:53:30.044Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@392f51ac]
2025-06-04T14:53:30.045Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T14:53:30.065Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 33001 with epoch 0
2025-06-04T14:53:30.120Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:30.145Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}, headers={kafka_offset=129, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048810064, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:30.153Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}
2025-06-04T14:53:30.190Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Сочи на 2025-06-04T14:00 успешно сформирован
2025-06-04T14:53:30.225Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T14:53:30.226Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:30.239Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=260, cityId=49, temperature=10.777, date=2025-06-04 14:00:00.0, windSpeed=5.339]]
2025-06-04T14:53:30.243Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:30.266Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T14:53:30.266Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:30.288Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 129 for partition weather-requests-0
2025-06-04T14:53:30.291Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:30.293Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:30.630Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:30.632Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}, headers={kafka_offset=129, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048810064, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:30.635Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}
2025-06-04T14:53:30.646Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:30.648Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:30.657Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:30.670Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 129 for partition weather-requests-0
2025-06-04T14:53:30.672Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:30.673Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:31.140Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:31.143Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}, headers={kafka_offset=129, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048810064, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:31.147Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}
2025-06-04T14:53:31.157Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:31.159Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:31.170Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:31.183Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 129 for partition weather-requests-0
2025-06-04T14:53:31.184Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:31.186Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:31.650Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:31.653Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}, headers={kafka_offset=129, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048810064, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:31.655Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}
2025-06-04T14:53:31.670Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:31.673Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:31.683Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:31.696Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 129 for partition weather-requests-0
2025-06-04T14:53:31.697Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:31.701Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:32.160Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:32.163Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}, headers={kafka_offset=129, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048810064, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:32.165Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}
2025-06-04T14:53:32.175Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:32.177Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:32.185Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:32.197Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 129 for partition weather-requests-0
2025-06-04T14:53:32.199Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:32.201Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:32.668Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:32.670Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}, headers={kafka_offset=129, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048810064, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:32.672Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}
2025-06-04T14:53:32.684Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:32.686Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:32.694Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:32.707Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 129 for partition weather-requests-0
2025-06-04T14:53:32.708Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:32.710Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:33.179Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:33.181Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}, headers={kafka_offset=129, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048810064, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:33.185Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}
2025-06-04T14:53:33.195Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:33.199Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:33.212Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:33.225Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 129 for partition weather-requests-0
2025-06-04T14:53:33.227Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:33.230Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:33.688Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:33.690Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}, headers={kafka_offset=129, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048810064, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:33.692Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}
2025-06-04T14:53:33.702Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:33.705Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:33.717Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:33.730Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 129 for partition weather-requests-0
2025-06-04T14:53:33.731Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:33.733Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:34.199Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:34.201Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}, headers={kafka_offset=129, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048810064, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:34.203Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}
2025-06-04T14:53:34.213Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:34.214Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:34.232Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:34.246Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 129 for partition weather-requests-0
2025-06-04T14:53:34.248Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:34.249Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:34.712Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:34.715Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}, headers={kafka_offset=129, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Сочи, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048810064, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:34.717Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Сочи","requestTime":"2025-06-04T14:53:29.911314Z"}
2025-06-04T14:53:34.726Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:34.728Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:34.734Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:34.749Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.DefaultErrorHandler   : Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for weather-requests-0@129

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:489) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
Caused by: org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:804) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	... 10 common frames omitted

2025-06-04T14:53:34.756Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.DefaultErrorHandler   : Skipping seek of: weather-requests-0@129
2025-06-04T14:53:34.761Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=130, leaderEpoch=null, metadata=''}}
2025-06-04T14:53:34.764Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=130, leaderEpoch=null, metadata=''}}
2025-06-04T14:53:39.783Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:53:39.786Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:44.789Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:53:44.791Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:49.793Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:53:49.794Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:54.797Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:53:54.798Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:55.535Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T14:53:55.538Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T14:53:55.541Z  INFO 1 --- [demo] [http-nio-8080-exec-3] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T14:53:55.543Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T14:00
2025-06-04T14:53:55.549Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] c.e.d.s.i.CoordinatesFromApiServiceImpl  : Сформированный URL запроса: https://geocode-maps.yandex.ru/v1?apikey=be1242a5-4916-4f50-b7ba-17753df6f8cd&geocode=Киров&format=json
2025-06-04T14:53:55.553Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : HTTP GET https://geocode-maps.yandex.ru/v1?apikey=be1242a5-4916-4f50-b7ba-17753df6f8cd&geocode=%D0%9A%D0%B8%D1%80%D0%BE%D0%B2&format=json
2025-06-04T14:53:55.556Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04T14:53:55.958Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T14:53:55.962Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04T14:53:55.997Z  INFO 1 --- [demo] [http-nio-8080-exec-3] c.e.d.s.i.CoordinatesFromApiServiceImpl  : Найдены координаты для города Киров: 49.668023, 58.603595
2025-06-04T14:53:56.021Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T14:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T14:53:56.023Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T14:53:56.419Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T14:53:56.421Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T14:53:56.439Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:56.446Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}, headers={kafka_offset=130, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048836425, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:56.449Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}
2025-06-04T14:53:56.454Z  INFO 1 --- [demo] [http-nio-8080-exec-3] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T14:00 успешно сформирован
2025-06-04T14:53:56.456Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T14:53:56.459Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=261, cityId=50, temperature=22.777, date=2025-06-04 14:00:00.0, windSpeed=5.512]]
2025-06-04T14:53:56.461Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:56.462Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T14:53:56.463Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:56.473Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:56.486Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 130 for partition weather-requests-0
2025-06-04T14:53:56.488Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:56.490Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:56.949Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:56.951Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}, headers={kafka_offset=130, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048836425, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:56.953Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}
2025-06-04T14:53:56.962Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:56.964Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:56.971Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:56.983Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 130 for partition weather-requests-0
2025-06-04T14:53:56.986Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:56.987Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:57.457Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:57.459Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}, headers={kafka_offset=130, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048836425, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:57.463Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}
2025-06-04T14:53:57.473Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:57.475Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:57.483Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:57.495Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 130 for partition weather-requests-0
2025-06-04T14:53:57.497Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:57.499Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:57.967Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:57.970Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}, headers={kafka_offset=130, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048836425, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:57.972Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}
2025-06-04T14:53:57.983Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:57.985Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:57.993Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:58.006Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 130 for partition weather-requests-0
2025-06-04T14:53:58.009Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:58.010Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:58.476Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:58.478Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}, headers={kafka_offset=130, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048836425, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:58.485Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}
2025-06-04T14:53:58.499Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:58.502Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:58.512Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:58.529Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 130 for partition weather-requests-0
2025-06-04T14:53:58.536Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:58.539Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:58.985Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:58.988Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}, headers={kafka_offset=130, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048836425, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:58.990Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}
2025-06-04T14:53:59.001Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:59.004Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:59.016Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:59.028Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 130 for partition weather-requests-0
2025-06-04T14:53:59.032Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:59.034Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:59.494Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:53:59.496Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}, headers={kafka_offset=130, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048836425, kafka_groupId=weather-stats-group}]]
2025-06-04T14:53:59.498Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}
2025-06-04T14:53:59.507Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:53:59.511Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:53:59.522Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:53:59.534Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 130 for partition weather-requests-0
2025-06-04T14:53:59.536Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:53:59.538Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:00.003Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:54:00.007Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}, headers={kafka_offset=130, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048836425, kafka_groupId=weather-stats-group}]]
2025-06-04T14:54:00.014Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}
2025-06-04T14:54:00.028Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:54:00.036Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:54:00.043Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:00.055Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 130 for partition weather-requests-0
2025-06-04T14:54:00.057Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:54:00.060Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:00.511Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:54:00.514Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}, headers={kafka_offset=130, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048836425, kafka_groupId=weather-stats-group}]]
2025-06-04T14:54:00.516Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}
2025-06-04T14:54:00.525Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:54:00.528Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:54:00.535Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:00.547Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 130 for partition weather-requests-0
2025-06-04T14:54:00.550Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T14:54:00.551Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:01.019Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T14:54:01.021Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}, headers={kafka_offset=130, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@617c330, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749048836425, kafka_groupId=weather-stats-group}]]
2025-06-04T14:54:01.023Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T14:53:56.425209300Z"}
2025-06-04T14:54:01.036Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T14:54:01.038Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy136.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy144.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:71) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T14:54:01.048Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:01.050Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.DefaultErrorHandler   : Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for weather-requests-0@130

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:489) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
Caused by: org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:804) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	... 10 common frames omitted

2025-06-04T14:54:01.056Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.DefaultErrorHandler   : Skipping seek of: weather-requests-0@130
2025-06-04T14:54:01.058Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=131, leaderEpoch=null, metadata=''}}
2025-06-04T14:54:01.060Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=131, leaderEpoch=null, metadata=''}}
2025-06-04T14:54:06.073Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:54:06.077Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:11.080Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:54:11.082Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:16.084Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:54:16.086Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:21.090Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:54:21.092Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:26.094Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:54:26.096Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:31.099Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:54:31.101Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:36.104Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:54:36.106Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:41.110Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:54:41.113Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:46.117Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:54:46.119Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:51.122Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:54:51.123Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:54:56.126Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:54:56.128Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:55:01.131Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:55:01.133Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:55:06.136Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:55:06.139Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:55:11.143Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:55:11.145Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:55:16.147Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:55:16.149Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:55:21.152Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:55:21.155Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:55:26.158Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:55:26.161Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:55:31.165Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:55:31.167Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:55:36.170Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:55:36.173Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:55:41.175Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:55:41.177Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:55:46.179Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:55:46.181Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:55:51.183Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:55:51.185Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:55:56.188Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:55:56.191Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:56:01.194Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:56:01.196Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:56:06.198Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:56:06.200Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:56:11.204Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:56:11.206Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:56:16.209Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:56:16.211Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:56:21.213Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:56:21.215Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:56:26.216Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:56:26.220Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:56:31.222Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:56:31.224Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:56:36.227Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:56:36.230Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:56:41.232Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:56:41.235Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:56:46.238Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:56:46.240Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:56:51.242Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:56:51.244Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:56:56.247Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:56:56.249Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:57:01.251Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:57:01.253Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:57:06.256Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:57:06.258Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:57:11.260Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:57:11.262Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:57:16.265Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:57:16.269Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:57:21.271Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:57:21.273Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:57:26.276Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:57:26.282Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:57:31.285Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:57:31.287Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:57:36.290Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:57:36.291Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:57:41.295Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:57:41.296Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:57:46.298Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:57:46.299Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:57:51.303Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:57:51.305Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:57:56.307Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:57:56.309Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:58:01.312Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:58:01.314Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:58:06.317Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:58:06.319Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:58:11.321Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:58:11.323Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:58:16.326Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T14:58:16.327Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:58:18.764Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:58:18.766Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T14:58:18.770Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T14:58:18.772Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T14:58:18.773Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-f53ba251-aa3c-48d9-bf67-9fe56170cc27 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T14:58:18.775Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T14:58:18.776Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T14:58:18.778Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T14:58:18.781Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T14:58:18.782Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T14:58:19.042Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T14:58:19.044Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T14:58:19.045Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T14:58:19.046Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T14:58:19.056Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T14:58:19.058Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T14:58:19.062Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T14:58:19.065Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T14:58:19.071Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T14:58:19.110Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T14:58:19.119Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T14:58:19.120Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T14:58:19.121Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T14:58:19.121Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T14:58:19.123Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T14:58:19.143Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T14:58:19.148Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T14:58:19.153Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T15:00:21.635Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T15:00:21.638Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T15:00:21.641Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T15:00:22.596Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:00:22.599Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T15:00:22.634Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:00:22.637Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:00:22.640Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:00:22.641Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 35 ms. Found 0 JDBC repository interfaces.
2025-06-04T15:00:22.656Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:00:22.660Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T15:00:22.795Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 129 ms. Found 3 JPA repository interfaces.
2025-06-04T15:00:22.826Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:00:22.829Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T15:00:22.845Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:00:22.847Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:00:22.848Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:00:22.849Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-06-04T15:00:23.529Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T15:00:23.547Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T15:00:23.548Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T15:00:23.636Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T15:00:23.638Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1947 ms
2025-06-04T15:00:23.781Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T15:00:23.999Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@a619c2
2025-06-04T15:00:24.002Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T15:00:24.089Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T15:00:24.090Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T15:00:24.091Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T15:00:24.094Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T15:00:24.096Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:00:24.097Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T15:00:24.097Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T15:00:24.098Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:00:24.099Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T15:00:24.103Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T15:00:24.104Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T15:00:24.106Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:00:24.108Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T15:00:24.112Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:00:24.113Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T15:00:24.115Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:00:24.125Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T15:00:24.126Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T15:00:24.126Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T15:00:24.128Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T15:00:24.129Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T15:00:24.135Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T15:00:24.137Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T15:00:24.138Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:00:24.149Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T15:00:24.153Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:00:24.162Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:00:24.164Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:00:24.165Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:00:24.166Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:00:24.168Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:00:24.168Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:00:24.183Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.032s)
2025-06-04T15:00:24.187Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T15:00:24.199Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T15:00:24.204Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T15:00:24.209Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 48 of 63M
2025-06-04T15:00:24.314Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T15:00:24.412Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T15:00:24.458Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T15:00:24.816Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T15:00:25.847Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T15:00:25.903Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:00:26.162Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T15:00:26.984Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T15:00:26.990Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", contentTypeConverter="", containerFactory="", beanRef="__listener", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T15:00:27.658Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T15:00:27.766Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T15:00:27.832Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T15:00:27.890Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T15:00:27.926Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T15:00:27.979Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T15:00:28.161Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T15:00:28.463Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T15:00:28.525Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T15:00:28.598Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:00:28.796Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:00:28.799Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:00:28.799Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:00:28.800Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749049228797
2025-06-04T15:00:28.806Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T15:00:28.816Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:28.831Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 7.796 seconds (process running for 8.373)
2025-06-04T15:00:29.203Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T15:00:29.206Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T15:00:29.210Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:00:29.235Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-4b664f62-7fac-48a4-91ac-608e3cb9ca10
2025-06-04T15:00:29.237Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:00:29.240Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=83, memberId='consumer-weather-stats-group-1-4b664f62-7fac-48a4-91ac-608e3cb9ca10', protocol='range'}
2025-06-04T15:00:29.254Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 83: {consumer-weather-stats-group-1-4b664f62-7fac-48a4-91ac-608e3cb9ca10=Assignment(partitions=[weather-requests-0])}
2025-06-04T15:00:29.276Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=83, memberId='consumer-weather-stats-group-1-4b664f62-7fac-48a4-91ac-608e3cb9ca10', protocol='range'}
2025-06-04T15:00:29.281Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T15:00:29.289Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T15:00:29.304Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=131, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T15:00:29.307Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T15:00:33.820Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:00:33.821Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:38.824Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:00:38.826Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:43.828Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:00:43.830Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:48.832Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:00:48.834Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:52.886Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T15:00:52.887Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T15:00:52.888Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T15:00:52.888Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T15:00:52.889Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T15:00:52.893Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@31450fc0
2025-06-04T15:00:52.895Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@69cb134
2025-06-04T15:00:52.897Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T15:00:52.898Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-06-04T15:00:52.907Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:00:52.921Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:00:52.951Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:00:52.953Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:00:53.612Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:00:53.622Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:00:53.835Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:00:53.836Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:54.277Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:00:54.279Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:00:54.317Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T15:00:54.320Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:00:54.334Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T15:00:54.360Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:00:54.362Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:00:54.363Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:00:54.363Z  INFO 1 --- [demo] [http-nio-8080-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749049254362
2025-06-04T15:00:54.365Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@1e4d77aa]
2025-06-04T15:00:54.366Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T15:00:54.374Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 34001 with epoch 0
2025-06-04T15:00:54.402Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:00:54.411Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}, headers={kafka_offset=131, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1ef44655, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749049254374, kafka_groupId=weather-stats-group}]]
2025-06-04T15:00:54.415Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}
2025-06-04T15:00:54.436Z  INFO 1 --- [demo] [http-nio-8080-exec-1] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T15:00 успешно сформирован
2025-06-04T15:00:54.453Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:00:54.459Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:00:54.467Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=262, cityId=50, temperature=21.348, date=2025-06-04 15:00:00.0, windSpeed=3.639]]
2025-06-04T15:00:54.464Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:72) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:00:54.476Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:54.485Z DEBUG 1 --- [demo] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T15:00:54.493Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 131 for partition weather-requests-0
2025-06-04T15:00:54.494Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T15:00:54.495Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:54.910Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:00:54.911Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}, headers={kafka_offset=131, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1ef44655, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749049254374, kafka_groupId=weather-stats-group}]]
2025-06-04T15:00:54.912Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}
2025-06-04T15:00:54.917Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:00:54.918Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:72) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:00:54.923Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:54.935Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 131 for partition weather-requests-0
2025-06-04T15:00:54.936Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T15:00:54.936Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:55.418Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:00:55.419Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}, headers={kafka_offset=131, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1ef44655, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749049254374, kafka_groupId=weather-stats-group}]]
2025-06-04T15:00:55.420Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}
2025-06-04T15:00:55.425Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:00:55.427Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:72) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:00:55.430Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:55.442Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 131 for partition weather-requests-0
2025-06-04T15:00:55.443Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T15:00:55.444Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:55.925Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:00:55.926Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}, headers={kafka_offset=131, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1ef44655, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749049254374, kafka_groupId=weather-stats-group}]]
2025-06-04T15:00:55.927Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}
2025-06-04T15:00:55.933Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:00:55.934Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:72) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:00:55.938Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:55.950Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 131 for partition weather-requests-0
2025-06-04T15:00:55.951Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T15:00:55.951Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:56.433Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:00:56.434Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}, headers={kafka_offset=131, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1ef44655, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749049254374, kafka_groupId=weather-stats-group}]]
2025-06-04T15:00:56.435Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}
2025-06-04T15:00:56.439Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:00:56.440Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:72) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:00:56.444Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:56.456Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 131 for partition weather-requests-0
2025-06-04T15:00:56.457Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T15:00:56.457Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:56.942Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:00:56.943Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}, headers={kafka_offset=131, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1ef44655, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749049254374, kafka_groupId=weather-stats-group}]]
2025-06-04T15:00:56.944Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}
2025-06-04T15:00:56.948Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:00:56.949Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:72) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:00:56.953Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:56.965Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 131 for partition weather-requests-0
2025-06-04T15:00:56.966Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T15:00:56.966Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:57.448Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:00:57.449Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}, headers={kafka_offset=131, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1ef44655, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749049254374, kafka_groupId=weather-stats-group}]]
2025-06-04T15:00:57.450Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}
2025-06-04T15:00:57.454Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:00:57.456Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:72) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:00:57.459Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:57.470Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 131 for partition weather-requests-0
2025-06-04T15:00:57.471Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T15:00:57.471Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:57.954Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:00:57.955Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}, headers={kafka_offset=131, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1ef44655, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749049254374, kafka_groupId=weather-stats-group}]]
2025-06-04T15:00:57.956Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}
2025-06-04T15:00:57.960Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:00:57.961Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:72) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:00:57.966Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:57.977Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 131 for partition weather-requests-0
2025-06-04T15:00:57.978Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T15:00:57.978Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:58.461Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:00:58.462Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}, headers={kafka_offset=131, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1ef44655, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749049254374, kafka_groupId=weather-stats-group}]]
2025-06-04T15:00:58.463Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}
2025-06-04T15:00:58.467Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:00:58.468Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:72) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:00:58.473Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:58.484Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Seeking to offset 131 for partition weather-requests-0
2025-06-04T15:00:58.484Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Record in retry and not yet recovered
2025-06-04T15:00:58.486Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:58.970Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:00:58.971Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}, headers={kafka_offset=131, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1ef44655, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749049254374, kafka_groupId=weather-stats-group}]]
2025-06-04T15:00:58.972Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:00:54.297266100Z"}
2025-06-04T15:00:58.977Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:00:58.978Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Непредвиденная ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:72) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:00:58.982Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:00:58.988Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.DefaultErrorHandler   : Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for weather-requests-0@131

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2994) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2901) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:489) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
Caused by: org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:804) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl$$SpringCGLIB$$0.consumeWeatherRequest(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	... 10 common frames omitted

2025-06-04T15:00:58.991Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.DefaultErrorHandler   : Skipping seek of: weather-requests-0@131
2025-06-04T15:00:58.992Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=132, leaderEpoch=null, metadata=''}}
2025-06-04T15:00:58.993Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=132, leaderEpoch=null, metadata=''}}
2025-06-04T15:01:04.000Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:01:04.001Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:01:09.005Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:01:09.007Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:01:14.009Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:01:14.010Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:01:19.012Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:01:19.013Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:01:24.017Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:01:24.018Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:01:29.020Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:01:29.021Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:01:34.024Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:01:34.025Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:01:39.028Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:01:39.030Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:01:42.408Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:01:42.417Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T15:01:42.419Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T15:01:42.420Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:01:42.421Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-4b664f62-7fac-48a4-91ac-608e3cb9ca10 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T15:01:42.425Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:01:42.426Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:01:42.427Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T15:01:42.431Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:01:42.432Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:01:42.462Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:01:42.464Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:01:42.464Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:01:42.465Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:01:42.470Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T15:01:42.472Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T15:01:42.474Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T15:01:42.476Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T15:01:42.479Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T15:01:42.507Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T15:01:42.511Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:01:42.512Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:01:42.513Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:01:42.514Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:01:42.515Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T15:01:42.526Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:01:42.529Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T15:01:42.534Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T15:10:06.229Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T15:10:06.233Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T15:10:06.234Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T15:10:06.973Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:10:06.975Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T15:10:07.003Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:10:07.006Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:10:07.008Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:10:07.009Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
2025-06-04T15:10:07.021Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:10:07.023Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T15:10:07.126Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 96 ms. Found 3 JPA repository interfaces.
2025-06-04T15:10:07.144Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:10:07.146Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T15:10:07.157Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:10:07.158Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:10:07.160Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:10:07.160Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-06-04T15:10:07.718Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T15:10:07.733Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T15:10:07.735Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T15:10:07.820Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T15:10:07.822Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1546 ms
2025-06-04T15:10:07.944Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T15:10:08.140Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3b152928
2025-06-04T15:10:08.143Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T15:10:08.210Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T15:10:08.211Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T15:10:08.212Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T15:10:08.217Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T15:10:08.217Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:10:08.218Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T15:10:08.218Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T15:10:08.219Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:10:08.220Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T15:10:08.223Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T15:10:08.223Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T15:10:08.224Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:10:08.224Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T15:10:08.230Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:10:08.231Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T15:10:08.232Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:10:08.239Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T15:10:08.240Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T15:10:08.241Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T15:10:08.242Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T15:10:08.243Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T15:10:08.248Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T15:10:08.251Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T15:10:08.251Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:10:08.260Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T15:10:08.268Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:10:08.277Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:10:08.277Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:10:08.278Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:10:08.280Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:10:08.280Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:10:08.281Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:10:08.296Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.033s)
2025-06-04T15:10:08.299Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T15:10:08.308Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T15:10:08.312Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T15:10:08.317Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 44 of 67M
2025-06-04T15:10:08.395Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T15:10:08.456Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T15:10:08.495Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T15:10:08.773Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T15:10:09.667Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T15:10:09.725Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:10:09.938Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T15:10:10.630Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T15:10:10.636Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T15:10:11.138Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T15:10:11.235Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T15:10:11.286Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T15:10:11.330Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T15:10:11.365Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T15:10:11.413Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T15:10:11.583Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T15:10:11.849Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T15:10:11.890Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T15:10:11.941Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:10:12.129Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:10:12.132Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:10:12.133Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:10:12.134Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749049812130
2025-06-04T15:10:12.139Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T15:10:12.149Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:10:12.162Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 6.441 seconds (process running for 6.896)
2025-06-04T15:10:12.449Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T15:10:12.453Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T15:10:12.456Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:10:12.470Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-1b0c2256-1fc5-490a-a2e5-29f6a0e93b41
2025-06-04T15:10:12.472Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:10:12.473Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=85, memberId='consumer-weather-stats-group-1-1b0c2256-1fc5-490a-a2e5-29f6a0e93b41', protocol='range'}
2025-06-04T15:10:12.480Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 85: {consumer-weather-stats-group-1-1b0c2256-1fc5-490a-a2e5-29f6a0e93b41=Assignment(partitions=[weather-requests-0])}
2025-06-04T15:10:12.485Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=85, memberId='consumer-weather-stats-group-1-1b0c2256-1fc5-490a-a2e5-29f6a0e93b41', protocol='range'}
2025-06-04T15:10:12.487Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T15:10:12.490Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T15:10:12.498Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=132, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T15:10:12.501Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T15:10:17.153Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:10:17.155Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:10:22.157Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:10:22.158Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:10:27.161Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:10:27.162Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:10:32.164Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:10:32.166Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:10:34.028Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T15:10:34.029Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T15:10:34.029Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T15:10:34.030Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T15:10:34.030Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T15:10:34.033Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@314c6f89
2025-06-04T15:10:34.035Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@8b1170f
2025-06-04T15:10:34.037Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T15:10:34.037Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2025-06-04T15:10:34.046Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:10:34.060Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:10:34.094Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:10:34.095Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:10:34.809Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:10:34.823Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:10:35.456Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:10:35.459Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:10:35.512Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T15:10:35.515Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:10:35.530Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T15:10:35.549Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:10:35.550Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:10:35.551Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:10:35.552Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749049835550
2025-06-04T15:10:35.555Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@50520c97]
2025-06-04T15:10:35.556Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T15:10:35.559Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 35001 with epoch 0
2025-06-04T15:10:35.595Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:10:35.603Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:10:35.484279900Z"}, headers={kafka_offset=132, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@7048994d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749049835564, kafka_groupId=weather-stats-group}]]
2025-06-04T15:10:35.608Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:10:35.484279900Z"}
2025-06-04T15:10:35.630Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T15:00 успешно сформирован
2025-06-04T15:10:35.652Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:10:35.659Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=263, cityId=50, temperature=21.348, date=2025-06-04 15:00:00.0, windSpeed=3.639]]
2025-06-04T15:10:35.668Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 50
2025-06-04T15:10:35.673Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1847983112 wrapping org.postgresql.jdbc.PgConnection@2fb5c195] read-only
2025-06-04T15:10:35.674Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T15:10:35.692Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1847983112 wrapping org.postgresql.jdbc.PgConnection@2fb5c195]
2025-06-04T15:10:35.694Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T15:10:35.696Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 50
2025-06-04T15:10:35.696Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T15:10:35.697Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 50
2025-06-04T15:10:35.699Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : CityEntity(id=50, name=Киров, coordX=49.668023, coordY=58.603595)
2025-06-04T15:10:35.700Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 15:10:35.4842799
2025-06-04T15:10:35.709Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:10:35.720Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.Kio.oo(Kio.java:14) ~[classes!/:0.0.1-SNAPSHOT]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:60) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:10:35.736Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=133, leaderEpoch=null, metadata=''}}
2025-06-04T15:10:35.739Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=133, leaderEpoch=null, metadata=''}}
2025-06-04T15:10:40.747Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:10:40.749Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:10:45.751Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:10:45.753Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:10:50.755Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:10:50.756Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:10:55.758Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:10:55.759Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:11:00.762Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:11:00.764Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:11:05.765Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:11:05.766Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:11:10.768Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:11:10.770Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:11:12.795Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:11:12.796Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T15:11:12.797Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T15:11:12.797Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:11:12.799Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-1b0c2256-1fc5-490a-a2e5-29f6a0e93b41 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T15:11:12.800Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:11:12.800Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:11:12.801Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T15:11:12.805Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:11:12.805Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:11:13.032Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:11:13.033Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:11:13.033Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:11:13.034Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:11:13.040Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T15:11:13.041Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T15:11:13.043Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T15:11:13.045Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T15:11:13.047Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T15:11:13.076Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T15:11:13.080Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:11:13.081Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:11:13.082Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:11:13.082Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:11:13.084Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T15:11:13.094Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:11:13.097Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T15:11:13.100Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T15:12:58.505Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T15:12:58.508Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T15:12:58.511Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T15:12:59.243Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:12:59.246Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T15:12:59.276Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:12:59.278Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:12:59.280Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:12:59.282Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
2025-06-04T15:12:59.293Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:12:59.296Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T15:12:59.396Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 94 ms. Found 3 JPA repository interfaces.
2025-06-04T15:12:59.414Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:12:59.416Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T15:12:59.426Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:12:59.428Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:12:59.429Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:12:59.430Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-06-04T15:12:59.984Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T15:13:00.007Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T15:13:00.009Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T15:13:00.094Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T15:13:00.096Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1546 ms
2025-06-04T15:13:00.218Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T15:13:00.429Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5173200b
2025-06-04T15:13:00.433Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T15:13:00.504Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T15:13:00.505Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T15:13:00.506Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T15:13:00.510Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T15:13:00.511Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:13:00.512Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T15:13:00.513Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T15:13:00.514Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:13:00.515Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T15:13:00.518Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T15:13:00.519Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T15:13:00.520Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:13:00.520Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T15:13:00.525Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:13:00.526Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T15:13:00.529Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:13:00.536Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T15:13:00.537Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T15:13:00.538Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T15:13:00.540Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T15:13:00.541Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T15:13:00.548Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T15:13:00.551Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T15:13:00.552Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:13:00.562Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T15:13:00.567Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:13:00.575Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:13:00.576Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:13:00.577Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:13:00.578Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:13:00.579Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:13:00.580Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:13:00.598Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.033s)
2025-06-04T15:13:00.603Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T15:13:00.613Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T15:13:00.618Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T15:13:00.623Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 45 of 70M
2025-06-04T15:13:00.738Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T15:13:00.798Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T15:13:00.836Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T15:13:01.138Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T15:13:02.054Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T15:13:02.111Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:13:02.324Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T15:13:03.041Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T15:13:03.046Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", beanRef="__listener", contentTypeConverter="", containerFactory="", topics={"weather-requests"}, groupId="", batch="", clientIdPrefix="", topicPartitions={}, splitIterables=true, concurrency="", autoStartup="", filter="", idIsGroup=true, containerGroup="", errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T15:13:03.590Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T15:13:03.695Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T15:13:03.747Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T15:13:03.792Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T15:13:03.827Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T15:13:03.878Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T15:13:04.065Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T15:13:04.351Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T15:13:04.393Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T15:13:04.445Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:13:04.630Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:13:04.633Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:13:04.634Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:13:04.635Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749049984631
2025-06-04T15:13:04.641Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T15:13:04.652Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:13:04.662Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 6.663 seconds (process running for 7.082)
2025-06-04T15:13:04.945Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T15:13:04.950Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T15:13:04.954Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:13:04.968Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-36792b9e-b0a4-4cce-8be1-151f8e56a381
2025-06-04T15:13:04.970Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:13:04.971Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=87, memberId='consumer-weather-stats-group-1-36792b9e-b0a4-4cce-8be1-151f8e56a381', protocol='range'}
2025-06-04T15:13:04.978Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 87: {consumer-weather-stats-group-1-36792b9e-b0a4-4cce-8be1-151f8e56a381=Assignment(partitions=[weather-requests-0])}
2025-06-04T15:13:04.983Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=87, memberId='consumer-weather-stats-group-1-36792b9e-b0a4-4cce-8be1-151f8e56a381', protocol='range'}
2025-06-04T15:13:04.984Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T15:13:04.987Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T15:13:04.997Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=133, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T15:13:04.999Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T15:13:09.656Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:13:09.658Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:13:14.660Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:13:14.661Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:13:19.663Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:13:19.665Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:13:24.666Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:13:24.667Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:13:25.551Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T15:13:25.552Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T15:13:25.553Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T15:13:25.554Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T15:13:25.555Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T15:13:25.558Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@29431f61
2025-06-04T15:13:25.559Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@7d7a8d23
2025-06-04T15:13:25.559Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T15:13:25.561Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2025-06-04T15:13:25.571Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:13:25.583Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:13:25.616Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:13:25.617Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:13:26.252Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:13:26.264Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:13:26.882Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:13:26.885Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:13:26.927Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T15:13:26.931Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:13:26.946Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T15:13:26.973Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:13:26.975Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:13:26.980Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:13:26.982Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749050006975
2025-06-04T15:13:26.985Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T15:13:26.985Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@56b6b3c7]
2025-06-04T15:13:26.989Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 36001 with epoch 0
2025-06-04T15:13:27.030Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:13:27.037Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:13:26.905985800Z"}, headers={kafka_offset=133, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@1ef44655, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749050006993, kafka_groupId=weather-stats-group}]]
2025-06-04T15:13:27.040Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:13:26.905985800Z"}
2025-06-04T15:13:27.045Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T15:00 успешно сформирован
2025-06-04T15:13:27.065Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:13:27.072Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=264, cityId=50, temperature=21.348, date=2025-06-04 15:00:00.0, windSpeed=3.639]]
2025-06-04T15:13:27.083Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 50
2025-06-04T15:13:27.085Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T15:13:27.088Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1071488949 wrapping org.postgresql.jdbc.PgConnection@457ef5e6] read-only
2025-06-04T15:13:27.109Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1071488949 wrapping org.postgresql.jdbc.PgConnection@457ef5e6]
2025-06-04T15:13:27.111Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T15:13:27.111Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 50
2025-06-04T15:13:27.112Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T15:13:27.112Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 50
2025-06-04T15:13:27.113Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : CityEntity(id=50, name=Киров, coordX=49.668023, coordY=58.603595)
2025-06-04T15:13:27.114Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 2025-06-04 15:13:26.9059858
2025-06-04T15:13:27.122Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:13:27.129Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.Kio.oo(Kio.java:14) ~[classes!/:0.0.1-SNAPSHOT]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:60) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:13:27.139Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=134, leaderEpoch=null, metadata=''}}
2025-06-04T15:13:27.141Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=134, leaderEpoch=null, metadata=''}}
2025-06-04T15:13:32.147Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:13:32.149Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:13:37.149Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:13:37.151Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:13:42.152Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:13:42.154Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:13:47.156Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:13:47.157Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:13:52.159Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:13:52.160Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:13:57.164Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:13:57.165Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:14:02.166Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:14:02.167Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:14:07.170Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:14:07.171Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:14:12.172Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:14:12.173Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:14:17.174Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:14:17.175Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:14:22.176Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:14:22.178Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:14:27.180Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:14:27.181Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:14:32.183Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:14:32.184Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:14:37.187Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:14:37.189Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:14:42.190Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:14:42.191Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:14:47.193Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:14:47.195Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:14:52.198Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:14:52.199Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:14:57.201Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:14:57.202Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:15:02.203Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:15:02.206Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:15:07.206Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:15:07.208Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:15:12.209Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:15:12.210Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:15:17.213Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:15:17.214Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:15:22.215Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:15:22.217Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:15:27.218Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:15:27.220Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:15:32.222Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:15:32.223Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:15:37.227Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:15:37.228Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:15:42.230Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:15:42.231Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:15:47.234Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:15:47.236Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:15:52.239Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:15:52.240Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:15:57.241Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:15:57.242Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:16:02.244Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:16:02.246Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:16:07.247Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:16:07.248Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:16:12.251Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:16:12.252Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:16:17.252Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:16:17.254Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:16:22.255Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:16:22.257Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:16:27.259Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:16:27.260Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:16:31.668Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:16:31.669Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T15:16:31.670Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T15:16:31.670Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:16:31.671Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-36792b9e-b0a4-4cce-8be1-151f8e56a381 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T15:16:31.671Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:16:31.673Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:16:31.674Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T15:16:31.676Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:16:31.677Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:16:32.131Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:16:32.133Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:16:32.133Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:16:32.134Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:16:32.139Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T15:16:32.140Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T15:16:32.142Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T15:16:32.143Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T15:16:32.145Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T15:16:32.168Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T15:16:32.172Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:16:32.173Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:16:32.174Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:16:32.174Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:16:32.175Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T15:16:32.182Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:16:32.186Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T15:16:32.191Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T15:18:03.462Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T15:18:03.465Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T15:18:03.467Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T15:18:04.189Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:18:04.192Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T15:18:04.222Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:18:04.224Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:18:04.226Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:18:04.227Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
2025-06-04T15:18:04.238Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:18:04.241Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T15:18:04.340Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 94 ms. Found 3 JPA repository interfaces.
2025-06-04T15:18:04.357Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:18:04.359Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T15:18:04.368Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:18:04.369Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:18:04.371Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:18:04.373Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-06-04T15:18:04.911Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T15:18:04.932Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T15:18:04.933Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T15:18:05.016Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T15:18:05.017Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1514 ms
2025-06-04T15:18:05.138Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T15:18:05.332Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@648ee871
2025-06-04T15:18:05.335Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T15:18:05.400Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T15:18:05.402Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T15:18:05.402Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T15:18:05.407Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T15:18:05.408Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:18:05.408Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T15:18:05.410Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T15:18:05.410Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:18:05.411Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T15:18:05.414Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T15:18:05.414Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T15:18:05.415Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:18:05.416Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T15:18:05.419Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:18:05.422Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T15:18:05.424Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:18:05.430Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T15:18:05.431Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T15:18:05.433Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T15:18:05.434Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T15:18:05.435Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T15:18:05.441Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T15:18:05.443Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T15:18:05.445Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:18:05.452Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T15:18:05.457Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:18:05.464Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:18:05.466Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:18:05.466Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:18:05.468Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:18:05.470Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:18:05.471Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:18:05.484Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.029s)
2025-06-04T15:18:05.487Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T15:18:05.495Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T15:18:05.499Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T15:18:05.503Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 44 of 67M
2025-06-04T15:18:05.580Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T15:18:05.654Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T15:18:05.690Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T15:18:05.964Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T15:18:06.851Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T15:18:06.906Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:18:07.140Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T15:18:07.841Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T15:18:07.846Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", beanRef="__listener", contentTypeConverter="", containerFactory="", topics={"weather-requests"}, groupId="", batch="", clientIdPrefix="", topicPartitions={}, splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T15:18:08.445Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T15:18:08.547Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T15:18:08.607Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T15:18:08.660Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T15:18:08.700Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T15:18:08.749Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T15:18:08.935Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T15:18:09.242Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T15:18:09.283Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T15:18:09.331Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:18:09.511Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:18:09.514Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:18:09.516Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:18:09.517Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749050289513
2025-06-04T15:18:09.522Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T15:18:09.532Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:18:09.545Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 6.593 seconds (process running for 7.011)
2025-06-04T15:18:09.823Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T15:18:09.828Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T15:18:09.831Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:18:09.844Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-ec689b49-c0d3-4784-84b3-8a892c20f9b9
2025-06-04T15:18:09.846Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:18:09.847Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=89, memberId='consumer-weather-stats-group-1-ec689b49-c0d3-4784-84b3-8a892c20f9b9', protocol='range'}
2025-06-04T15:18:09.855Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 89: {consumer-weather-stats-group-1-ec689b49-c0d3-4784-84b3-8a892c20f9b9=Assignment(partitions=[weather-requests-0])}
2025-06-04T15:18:09.860Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=89, memberId='consumer-weather-stats-group-1-ec689b49-c0d3-4784-84b3-8a892c20f9b9', protocol='range'}
2025-06-04T15:18:09.861Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T15:18:09.864Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T15:18:09.874Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=134, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T15:18:09.876Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T15:18:14.535Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:18:14.537Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:18:18.813Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T15:18:18.815Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T15:18:18.816Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T15:18:18.816Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T15:18:18.817Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T15:18:18.818Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@8b1170f
2025-06-04T15:18:18.820Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@1842dc39
2025-06-04T15:18:18.821Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T15:18:18.822Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2025-06-04T15:18:18.831Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:18:18.843Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:18:18.872Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:18:18.874Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:18:19.539Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:18:19.539Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:18:19.540Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:18:19.551Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:18:20.308Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:18:20.310Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:18:20.352Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T15:18:20.355Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:18:20.367Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T15:18:20.384Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:18:20.386Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:18:20.387Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:18:20.388Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749050300386
2025-06-04T15:18:20.390Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@6ba02945]
2025-06-04T15:18:20.390Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T15:18:20.395Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 37001 with epoch 0
2025-06-04T15:18:20.430Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:18:20.437Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:18:20.328256900Z"}, headers={kafka_offset=134, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@7f79c191, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749050300399, kafka_groupId=weather-stats-group}]]
2025-06-04T15:18:20.440Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:18:20.328256900Z"}
2025-06-04T15:18:20.459Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T15:00 успешно сформирован
2025-06-04T15:18:20.479Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:18:20.486Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=265, cityId=50, temperature=21.348, date=2025-06-04 15:00:00.0, windSpeed=3.639]]
2025-06-04T15:18:20.488Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 50
2025-06-04T15:18:20.491Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1363644988 wrapping org.postgresql.jdbc.PgConnection@883b5dd] read-only
2025-06-04T15:18:20.499Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T15:18:20.509Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1363644988 wrapping org.postgresql.jdbc.PgConnection@883b5dd]
2025-06-04T15:18:20.510Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T15:18:20.511Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T15:18:20.524Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.example.dz_tinkoff.entity.CityEntity
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:310) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: com.example.dz_tinkoff.entity.CityEntity
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:88) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:799) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:747) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:290) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:280) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:517) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:439) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:157) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeBeforeSave(AbstractSaveEventListener.java:487) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:303) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:224) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:137) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:757) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:741) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.persist(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	... 27 common frames omitted

2025-06-04T15:18:20.538Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=135, leaderEpoch=null, metadata=''}}
2025-06-04T15:18:20.539Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=135, leaderEpoch=null, metadata=''}}
2025-06-04T15:18:25.546Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:18:25.547Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:18:30.549Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:18:30.550Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:18:35.554Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:18:35.556Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:18:40.557Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:18:40.559Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:18:45.561Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:18:45.562Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:18:50.565Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:18:50.567Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:18:55.569Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:18:55.571Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:19:00.574Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:19:00.576Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:19:05.578Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:19:05.579Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:19:10.580Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:19:10.581Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:19:15.582Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:19:15.583Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:19:20.584Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:19:20.585Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:19:25.587Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:19:25.588Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:19:30.590Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:19:30.593Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:19:35.595Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:19:35.596Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:19:40.597Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:19:40.599Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:19:45.600Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:19:45.601Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:19:50.603Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:19:50.604Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:19:55.605Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:19:55.607Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:20:00.609Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:20:00.611Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:20:05.612Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:20:05.614Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:20:10.615Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:20:10.616Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:20:15.618Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:20:15.620Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:20:20.622Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:20:20.623Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:20:25.625Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:20:25.627Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:20:30.628Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:20:30.630Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:20:35.632Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:20:35.633Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:20:40.634Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:20:40.636Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:20:45.637Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:20:45.638Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:20:50.640Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:20:50.641Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:20:55.643Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:20:55.645Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:21:00.647Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:21:00.648Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:21:05.649Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:21:05.651Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:21:07.178Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:21:07.180Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:21:07.181Z  INFO 1 --- [demo] [http-nio-8080-exec-4] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:21:07.182Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:21:07.188Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:21:07.190Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:21:07.806Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:21:07.808Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:21:07.813Z  INFO 1 --- [demo] [http-nio-8080-exec-4] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T15:00 успешно сформирован
2025-06-04T15:21:07.814Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:21:07.815Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=266, cityId=50, temperature=21.348, date=2025-06-04 15:00:00.0, windSpeed=3.639]]
2025-06-04T15:21:07.816Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T15:21:07.824Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:21:07.825Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:21:07.809632800Z"}, headers={kafka_offset=135, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@7f79c191, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749050467809, kafka_groupId=weather-stats-group}]]
2025-06-04T15:21:07.826Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:21:07.809632800Z"}
2025-06-04T15:21:07.829Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 50
2025-06-04T15:21:07.831Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1626332739 wrapping org.postgresql.jdbc.PgConnection@883b5dd] read-only
2025-06-04T15:21:07.834Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1626332739 wrapping org.postgresql.jdbc.PgConnection@883b5dd]
2025-06-04T15:21:07.836Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T15:21:07.837Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T15:21:07.840Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.example.dz_tinkoff.entity.CityEntity
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:310) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: com.example.dz_tinkoff.entity.CityEntity
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:88) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:799) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:747) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:290) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:280) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:517) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:439) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:157) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeBeforeSave(AbstractSaveEventListener.java:487) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:303) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:224) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:137) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:757) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:741) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.persist(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	... 27 common frames omitted

2025-06-04T15:21:07.846Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=136, leaderEpoch=null, metadata=''}}
2025-06-04T15:21:07.848Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=136, leaderEpoch=null, metadata=''}}
2025-06-04T15:21:12.852Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:21:12.853Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:21:17.855Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:21:17.857Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:21:22.859Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:21:22.860Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:21:23.471Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:21:23.472Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:21:23.473Z  INFO 1 --- [demo] [http-nio-8080-exec-6] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:21:23.474Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:21:23.480Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:21:23.482Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:21:23.721Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:21:23.723Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:21:23.728Z  INFO 1 --- [demo] [http-nio-8080-exec-6] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T15:00 успешно сформирован
2025-06-04T15:21:23.730Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:21:23.731Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=267, cityId=50, temperature=21.348, date=2025-06-04 15:00:00.0, windSpeed=3.639]]
2025-06-04T15:21:23.733Z DEBUG 1 --- [demo] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T15:21:23.737Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:21:23.738Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:21:23.725084500Z"}, headers={kafka_offset=136, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@7f79c191, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749050483725, kafka_groupId=weather-stats-group}]]
2025-06-04T15:21:23.740Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:21:23.725084500Z"}
2025-06-04T15:21:23.745Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 50
2025-06-04T15:21:23.746Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1416247059 wrapping org.postgresql.jdbc.PgConnection@883b5dd] read-only
2025-06-04T15:21:23.750Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1416247059 wrapping org.postgresql.jdbc.PgConnection@883b5dd]
2025-06-04T15:21:23.751Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T15:21:23.751Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T15:21:23.753Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.example.dz_tinkoff.entity.CityEntity
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:310) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: com.example.dz_tinkoff.entity.CityEntity
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:88) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:799) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:747) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:290) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:280) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:517) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:439) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:157) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeBeforeSave(AbstractSaveEventListener.java:487) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:303) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:224) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:137) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:757) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:741) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.persist(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	... 27 common frames omitted

2025-06-04T15:21:23.757Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=137, leaderEpoch=null, metadata=''}}
2025-06-04T15:21:23.757Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=137, leaderEpoch=null, metadata=''}}
2025-06-04T15:21:28.761Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:21:28.762Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:21:33.762Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:21:33.764Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:21:38.765Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:21:38.767Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:21:39.753Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:21:39.754Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:21:39.756Z  INFO 1 --- [demo] [http-nio-8080-exec-7] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:21:39.757Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:21:39.763Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:21:39.764Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:21:43.167Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:21:43.169Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:21:43.173Z  INFO 1 --- [demo] [http-nio-8080-exec-7] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T15:00 успешно сформирован
2025-06-04T15:21:43.175Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:21:43.177Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:21:43.177Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=268, cityId=50, temperature=21.348, date=2025-06-04 15:00:00.0, windSpeed=3.639]]
2025-06-04T15:21:43.178Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:21:43.170584500Z"}, headers={kafka_offset=137, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@7f79c191, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749050503170, kafka_groupId=weather-stats-group}]]
2025-06-04T15:21:43.178Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:21:43.170584500Z"}
2025-06-04T15:21:43.179Z DEBUG 1 --- [demo] [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T15:21:43.182Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 50
2025-06-04T15:21:43.183Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@2048784554 wrapping org.postgresql.jdbc.PgConnection@883b5dd] read-only
2025-06-04T15:21:43.185Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@2048784554 wrapping org.postgresql.jdbc.PgConnection@883b5dd]
2025-06-04T15:21:43.186Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T15:21:43.187Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T15:21:43.190Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.example.dz_tinkoff.entity.CityEntity
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:310) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: com.example.dz_tinkoff.entity.CityEntity
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:88) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:799) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:747) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:290) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:280) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:517) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:439) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:157) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeBeforeSave(AbstractSaveEventListener.java:487) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:303) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:224) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:137) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:757) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:741) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.persist(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	... 27 common frames omitted

2025-06-04T15:21:43.194Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=138, leaderEpoch=null, metadata=''}}
2025-06-04T15:21:43.195Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=138, leaderEpoch=null, metadata=''}}
2025-06-04T15:21:48.199Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:21:48.200Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:21:53.202Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:21:53.203Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:21:58.204Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:21:58.206Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:22:03.208Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:22:03.209Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:22:08.210Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:22:08.211Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:22:10.996Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:22:10.997Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T15:22:10.998Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T15:22:10.999Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:22:10.999Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-ec689b49-c0d3-4784-84b3-8a892c20f9b9 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T15:22:11.000Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:22:11.001Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:22:11.001Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T15:22:11.003Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:22:11.003Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:22:11.502Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:22:11.503Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:22:11.504Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:22:11.505Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:22:11.509Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T15:22:11.511Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T15:22:11.512Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T15:22:11.514Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T15:22:11.516Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T15:22:11.541Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T15:22:11.546Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:22:11.546Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:22:11.547Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:22:11.548Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:22:11.549Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T15:22:11.558Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:22:11.562Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T15:22:11.564Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T15:24:03.275Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T15:24:03.278Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T15:24:03.279Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T15:24:04.162Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:24:04.165Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T15:24:04.202Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:24:04.205Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:24:04.207Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:24:04.209Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 36 ms. Found 0 JDBC repository interfaces.
2025-06-04T15:24:04.223Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:24:04.225Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T15:24:04.358Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 125 ms. Found 3 JPA repository interfaces.
2025-06-04T15:24:04.381Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:24:04.384Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T15:24:04.399Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:24:04.401Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:24:04.403Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:24:04.405Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-06-04T15:24:05.031Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T15:24:05.047Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T15:24:05.049Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T15:24:05.139Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T15:24:05.141Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1813 ms
2025-06-04T15:24:05.275Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T15:24:05.482Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@bcb09a6
2025-06-04T15:24:05.485Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T15:24:05.561Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T15:24:05.562Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T15:24:05.562Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T15:24:05.566Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T15:24:05.567Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:24:05.568Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T15:24:05.569Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T15:24:05.569Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:24:05.570Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T15:24:05.573Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T15:24:05.574Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T15:24:05.575Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:24:05.576Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T15:24:05.582Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:24:05.584Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T15:24:05.585Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:24:05.594Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T15:24:05.595Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T15:24:05.596Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T15:24:05.598Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T15:24:05.599Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T15:24:05.606Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T15:24:05.609Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T15:24:05.611Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:24:05.620Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T15:24:05.625Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:24:05.636Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:24:05.637Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:24:05.637Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:24:05.639Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:24:05.640Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:24:05.641Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:24:05.656Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.034s)
2025-06-04T15:24:05.660Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T15:24:05.669Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T15:24:05.675Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T15:24:05.680Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 50 of 65M
2025-06-04T15:24:05.777Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T15:24:05.872Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T15:24:05.920Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T15:24:06.302Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T15:24:07.296Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T15:24:07.346Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:24:07.590Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T15:24:08.388Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T15:24:08.394Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T15:24:09.038Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T15:24:09.165Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T15:24:09.224Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T15:24:09.275Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T15:24:09.317Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T15:24:09.382Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T15:24:09.579Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T15:24:09.913Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T15:24:09.969Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T15:24:10.045Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:24:10.240Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:24:10.243Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:24:10.244Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:24:10.245Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749050650241
2025-06-04T15:24:10.252Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T15:24:10.269Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:24:10.288Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 7.587 seconds (process running for 8.141)
2025-06-04T15:24:10.621Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T15:24:10.626Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T15:24:10.629Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:24:10.647Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-c44b0e22-8ccb-4727-b866-3cb94069452b
2025-06-04T15:24:10.649Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:24:10.651Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=91, memberId='consumer-weather-stats-group-1-c44b0e22-8ccb-4727-b866-3cb94069452b', protocol='range'}
2025-06-04T15:24:10.658Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 91: {consumer-weather-stats-group-1-c44b0e22-8ccb-4727-b866-3cb94069452b=Assignment(partitions=[weather-requests-0])}
2025-06-04T15:24:10.663Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=91, memberId='consumer-weather-stats-group-1-c44b0e22-8ccb-4727-b866-3cb94069452b', protocol='range'}
2025-06-04T15:24:10.665Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T15:24:10.669Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T15:24:10.678Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=138, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T15:24:10.680Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T15:24:15.274Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:24:15.276Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:24:20.279Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:24:20.280Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:24:25.282Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:24:25.283Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:24:30.285Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:24:30.286Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:24:32.817Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T15:24:32.819Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T15:24:32.821Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T15:24:32.822Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T15:24:32.822Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T15:24:32.824Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@125124ea
2025-06-04T15:24:32.825Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@270097ce
2025-06-04T15:24:32.826Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T15:24:32.827Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2025-06-04T15:24:32.840Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:24:32.854Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:24:32.892Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:24:32.893Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:24:33.595Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:24:33.609Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:24:34.471Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:24:34.473Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:24:34.520Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T15:24:34.523Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:24:34.536Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T15:24:34.559Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:24:34.560Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:24:34.561Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:24:34.561Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749050674560
2025-06-04T15:24:34.563Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@14b86fab]
2025-06-04T15:24:34.565Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T15:24:34.569Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 38001 with epoch 0
2025-06-04T15:24:34.600Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:24:34.609Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:24:34.496816300Z"}, headers={kafka_offset=138, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@799ffd6c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749050674574, kafka_groupId=weather-stats-group}]]
2025-06-04T15:24:34.614Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:24:34.496816300Z"}
2025-06-04T15:24:34.641Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T15:00 успешно сформирован
2025-06-04T15:24:34.666Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:24:34.672Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=269, cityId=50, temperature=21.348, date=2025-06-04 15:00:00.0, windSpeed=3.639]]
2025-06-04T15:24:34.673Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 50
2025-06-04T15:24:34.677Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@150433159 wrapping org.postgresql.jdbc.PgConnection@71a0661] read-only
2025-06-04T15:24:34.687Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T15:24:34.695Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@150433159 wrapping org.postgresql.jdbc.PgConnection@71a0661]
2025-06-04T15:24:34.696Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T15:24:34.698Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T15:24:34.713Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.example.dz_tinkoff.entity.CityEntity
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:310) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: com.example.dz_tinkoff.entity.CityEntity
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:88) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:799) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:747) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:290) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:280) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:517) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:439) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:157) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeBeforeSave(AbstractSaveEventListener.java:487) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:303) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:224) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:137) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:757) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:741) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.persist(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	... 27 common frames omitted

2025-06-04T15:24:34.723Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=139, leaderEpoch=null, metadata=''}}
2025-06-04T15:24:34.725Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=139, leaderEpoch=null, metadata=''}}
2025-06-04T15:24:39.733Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:24:39.734Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:24:44.736Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:24:44.737Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:24:49.739Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:24:49.740Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:24:54.742Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:24:54.744Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:24:59.745Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:24:59.746Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:25:04.750Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:25:04.751Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:25:09.574Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:25:09.575Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T15:25:09.576Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T15:25:09.576Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:25:09.577Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-c44b0e22-8ccb-4727-b866-3cb94069452b sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T15:25:09.578Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:25:09.578Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:25:09.579Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T15:25:09.580Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:25:09.581Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:25:10.031Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:25:10.033Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:25:10.034Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:25:10.034Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:25:10.039Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T15:25:10.041Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T15:25:10.042Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T15:25:10.045Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T15:25:10.049Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T15:25:10.070Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T15:25:10.074Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:25:10.075Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:25:10.076Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:25:10.076Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:25:10.078Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T15:25:10.086Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:25:10.089Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T15:25:10.095Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T15:26:46.637Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T15:26:46.640Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T15:26:46.643Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T15:26:47.388Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:26:47.392Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T15:26:47.423Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:26:47.425Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:26:47.427Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:26:47.428Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
2025-06-04T15:26:47.440Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:26:47.442Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T15:26:47.544Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 96 ms. Found 3 JPA repository interfaces.
2025-06-04T15:26:47.561Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:26:47.564Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T15:26:47.576Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:26:47.578Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:26:47.579Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:26:47.580Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-06-04T15:26:48.134Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T15:26:48.156Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T15:26:48.158Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T15:26:48.237Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T15:26:48.238Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1550 ms
2025-06-04T15:26:48.363Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T15:26:48.569Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3b152928
2025-06-04T15:26:48.571Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T15:26:48.641Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T15:26:48.643Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T15:26:48.643Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T15:26:48.648Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T15:26:48.650Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:26:48.651Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T15:26:48.651Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T15:26:48.651Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:26:48.653Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T15:26:48.657Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T15:26:48.658Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T15:26:48.659Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:26:48.660Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T15:26:48.664Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:26:48.665Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T15:26:48.666Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:26:48.673Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T15:26:48.675Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T15:26:48.676Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T15:26:48.678Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T15:26:48.679Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T15:26:48.685Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T15:26:48.687Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T15:26:48.689Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:26:48.697Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T15:26:48.702Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:26:48.711Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:26:48.712Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:26:48.713Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:26:48.714Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:26:48.715Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:26:48.716Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:26:48.729Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.030s)
2025-06-04T15:26:48.733Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T15:26:48.743Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T15:26:48.747Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T15:26:48.752Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 45 of 70M
2025-06-04T15:26:48.832Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T15:26:48.892Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T15:26:48.930Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T15:26:49.216Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T15:26:50.148Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T15:26:50.201Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:26:50.421Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T15:26:51.099Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T15:26:51.103Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T15:26:51.616Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T15:26:51.712Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T15:26:51.780Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T15:26:51.823Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T15:26:51.856Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T15:26:51.904Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T15:26:52.070Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T15:26:52.360Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T15:26:52.401Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T15:26:52.454Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:26:52.630Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:26:52.633Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:26:52.634Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:26:52.634Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749050812631
2025-06-04T15:26:52.639Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T15:26:52.651Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:26:52.660Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 6.538 seconds (process running for 6.954)
2025-06-04T15:26:52.947Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T15:26:52.951Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T15:26:52.954Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:26:52.969Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-0c145984-d7d4-42d1-9c9f-ea1d838d6839
2025-06-04T15:26:52.971Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:26:52.973Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=93, memberId='consumer-weather-stats-group-1-0c145984-d7d4-42d1-9c9f-ea1d838d6839', protocol='range'}
2025-06-04T15:26:52.980Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 93: {consumer-weather-stats-group-1-0c145984-d7d4-42d1-9c9f-ea1d838d6839=Assignment(partitions=[weather-requests-0])}
2025-06-04T15:26:52.985Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=93, memberId='consumer-weather-stats-group-1-0c145984-d7d4-42d1-9c9f-ea1d838d6839', protocol='range'}
2025-06-04T15:26:52.986Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T15:26:52.989Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T15:26:53.000Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=139, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T15:26:53.002Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T15:26:57.656Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:26:57.657Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:27:02.659Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:27:02.660Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:27:07.662Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:27:07.663Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:27:12.393Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T15:27:12.394Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T15:27:12.394Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T15:27:12.396Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T15:27:12.397Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T15:27:12.399Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@8b1170f
2025-06-04T15:27:12.400Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@1842dc39
2025-06-04T15:27:12.400Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T15:27:12.401Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2025-06-04T15:27:12.412Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:27:12.426Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:27:12.456Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:27:12.457Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:27:12.665Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:27:12.666Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:27:13.134Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:27:13.147Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:27:13.650Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:27:13.652Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:27:13.691Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T15:27:13.694Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:27:13.711Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T15:27:13.731Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:27:13.733Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:27:13.734Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:27:13.735Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749050833733
2025-06-04T15:27:13.737Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@49f8b9f9]
2025-06-04T15:27:13.739Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.8f82dcec-b27f-47de-a315-2a6d58ebe731
2025-06-04T15:27:13.743Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 39001 with epoch 0
2025-06-04T15:27:13.785Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:27:13.791Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:27:13.671143300Z"}, headers={kafka_offset=139, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@24804f76, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749050833748, kafka_groupId=weather-stats-group}]]
2025-06-04T15:27:13.795Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:27:13.671143300Z"}
2025-06-04T15:27:13.810Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T15:00 успешно сформирован
2025-06-04T15:27:13.829Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:27:13.836Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=270, cityId=50, temperature=21.348, date=2025-06-04 15:00:00.0, windSpeed=3.639]]
2025-06-04T15:27:13.844Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 50
2025-06-04T15:27:13.847Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1243028998 wrapping org.postgresql.jdbc.PgConnection@4162f141] read-only
2025-06-04T15:27:13.849Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T15:27:13.874Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1243028998 wrapping org.postgresql.jdbc.PgConnection@4162f141]
2025-06-04T15:27:13.876Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T15:27:13.877Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T15:27:13.886Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:27:13.895Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:27:13.903Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=140, leaderEpoch=null, metadata=''}}
2025-06-04T15:27:13.904Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=140, leaderEpoch=null, metadata=''}}
2025-06-04T15:27:18.913Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:27:18.914Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:27:23.914Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:27:23.915Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:27:28.917Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:27:28.918Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:27:30.586Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:27:30.587Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T15:27:30.588Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T15:27:30.588Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:27:30.589Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-0c145984-d7d4-42d1-9c9f-ea1d838d6839 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T15:27:30.590Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:27:30.591Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:27:30.591Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T15:27:30.593Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:27:30.593Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:28:12.719Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T15:28:12.722Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T15:28:12.725Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T15:28:13.471Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:28:13.474Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T15:28:13.504Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:28:13.507Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:28:13.510Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:28:13.511Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30 ms. Found 0 JDBC repository interfaces.
2025-06-04T15:28:13.525Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:28:13.527Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T15:28:13.626Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 93 ms. Found 3 JPA repository interfaces.
2025-06-04T15:28:13.644Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:28:13.647Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T15:28:13.657Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:28:13.658Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:28:13.659Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:28:13.661Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-06-04T15:28:14.272Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T15:28:14.293Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T15:28:14.295Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T15:28:14.374Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T15:28:14.376Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1610 ms
2025-06-04T15:28:14.502Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T15:28:14.701Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@bcb09a6
2025-06-04T15:28:14.704Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T15:28:14.772Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T15:28:14.774Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T15:28:14.775Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T15:28:14.778Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T15:28:14.779Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:28:14.779Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T15:28:14.780Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T15:28:14.780Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:28:14.781Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T15:28:14.784Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T15:28:14.785Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T15:28:14.786Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:28:14.787Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T15:28:14.790Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:28:14.791Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T15:28:14.793Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:28:14.800Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T15:28:14.802Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T15:28:14.803Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T15:28:14.805Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T15:28:14.805Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T15:28:14.811Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T15:28:14.814Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T15:28:14.815Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:28:14.825Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T15:28:14.829Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:28:14.837Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:28:14.838Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:28:14.839Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:28:14.841Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:28:14.841Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:28:14.842Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:28:14.856Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.029s)
2025-06-04T15:28:14.859Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T15:28:14.868Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T15:28:14.873Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T15:28:14.877Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 44 of 70M
2025-06-04T15:28:14.964Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T15:28:15.034Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T15:28:15.075Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T15:28:15.376Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T15:28:16.364Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T15:28:16.405Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:28:16.629Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T15:28:17.384Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T15:28:17.390Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T15:28:17.917Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T15:28:18.032Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T15:28:18.090Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T15:28:18.137Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T15:28:18.174Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T15:28:18.225Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T15:28:18.402Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T15:28:18.720Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T15:28:18.770Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T15:28:18.841Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:28:19.025Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:28:19.027Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:28:19.029Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:28:19.030Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749050899026
2025-06-04T15:28:19.035Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T15:28:19.051Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:28:19.061Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 6.831 seconds (process running for 7.233)
2025-06-04T15:28:19.500Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.9c0f625e-79a1-4907-a55c-d843104d3be2
2025-06-04T15:28:19.502Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T15:28:19.505Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:28:19.519Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-58206b4e-4c91-42c7-b0ca-448b59137920
2025-06-04T15:28:19.520Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:28:19.522Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-weather-stats-group-1-58206b4e-4c91-42c7-b0ca-448b59137920', protocol='range'}
2025-06-04T15:28:19.529Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 1: {consumer-weather-stats-group-1-58206b4e-4c91-42c7-b0ca-448b59137920=Assignment(partitions=[weather-requests-0])}
2025-06-04T15:28:19.535Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-weather-stats-group-1-58206b4e-4c91-42c7-b0ca-448b59137920', protocol='range'}
2025-06-04T15:28:19.537Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T15:28:19.540Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T15:28:19.548Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Found no committed offset for partition weather-requests-0
2025-06-04T15:28:19.556Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting offset for partition weather-requests-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}.
2025-06-04T15:28:19.558Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T15:28:24.055Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:28:24.057Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:28:29.059Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:28:29.061Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:28:32.884Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T15:28:32.885Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T15:28:32.886Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T15:28:32.887Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T15:28:32.888Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T15:28:32.890Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@71d78cac
2025-06-04T15:28:32.891Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@61d8a491
2025-06-04T15:28:32.891Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T15:28:32.892Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2025-06-04T15:28:32.906Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:28:32.921Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:28:32.962Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:28:32.963Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:28:33.378Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.s.i.CoordinatesFromApiServiceImpl  : Сформированный URL запроса: https://geocode-maps.yandex.ru/v1?apikey=be1242a5-4916-4f50-b7ba-17753df6f8cd&geocode=Киров&format=json
2025-06-04T15:28:33.499Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://geocode-maps.yandex.ru/v1?apikey=be1242a5-4916-4f50-b7ba-17753df6f8cd&geocode=%D0%9A%D0%B8%D1%80%D0%BE%D0%B2&format=json
2025-06-04T15:28:33.514Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04T15:28:34.064Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:28:34.065Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:28:35.200Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:28:35.207Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04T15:28:35.235Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.s.i.CoordinatesFromApiServiceImpl  : Найдены координаты для города Киров: 49.668023, 58.603595
2025-06-04T15:28:35.360Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:28:35.368Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:28:35.695Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:28:35.696Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:28:35.781Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T15:28:35.784Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:28:35.796Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T15:28:35.813Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:28:35.814Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:28:35.815Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:28:35.816Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749050915814
2025-06-04T15:28:35.819Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@2c25f1f8]
2025-06-04T15:28:35.821Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.9c0f625e-79a1-4907-a55c-d843104d3be2
2025-06-04T15:28:35.912Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T15:00 успешно сформирован
2025-06-04T15:28:35.931Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:28:35.937Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=1, cityId=1, temperature=21.348, date=2025-06-04 15:00:00.0, windSpeed=3.639]]
2025-06-04T15:28:35.948Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T15:28:36.146Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 1 with epoch 0
2025-06-04T15:28:36.161Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:28:36.168Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:28:35.754288500Z"}, headers={kafka_offset=0, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@2501eb10, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749050915833, kafka_groupId=weather-stats-group}]]
2025-06-04T15:28:36.177Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:28:35.754288500Z"}
2025-06-04T15:28:36.211Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 1
2025-06-04T15:28:36.214Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1522791192 wrapping org.postgresql.jdbc.PgConnection@bcb09a6] read-only
2025-06-04T15:28:36.226Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1522791192 wrapping org.postgresql.jdbc.PgConnection@bcb09a6]
2025-06-04T15:28:36.227Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T15:28:36.228Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T15:28:36.235Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:28:36.243Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:28:36.251Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=1, leaderEpoch=null, metadata=''}}
2025-06-04T15:28:36.253Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=1, leaderEpoch=null, metadata=''}}
2025-06-04T15:28:41.258Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:28:41.260Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:28:46.262Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:28:46.263Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:28:48.315Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:28:48.316Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:28:48.317Z  INFO 1 --- [demo] [http-nio-8080-exec-3] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:28:48.317Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:28:48.331Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:28:48.332Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:28:48.823Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:28:48.824Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:28:48.832Z  INFO 1 --- [demo] [http-nio-8080-exec-3] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T15:00 успешно сформирован
2025-06-04T15:28:48.833Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:28:48.834Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:28:48.834Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:28:48.826283300Z"}, headers={kafka_offset=1, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@2501eb10, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749050928826, kafka_groupId=weather-stats-group}]]
2025-06-04T15:28:48.835Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=2, cityId=1, temperature=21.348, date=2025-06-04 15:00:00.0, windSpeed=3.639]]
2025-06-04T15:28:48.835Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:28:48.826283300Z"}
2025-06-04T15:28:48.837Z DEBUG 1 --- [demo] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T15:28:48.839Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 1
2025-06-04T15:28:48.841Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1192077919 wrapping org.postgresql.jdbc.PgConnection@bcb09a6] read-only
2025-06-04T15:28:48.843Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1192077919 wrapping org.postgresql.jdbc.PgConnection@bcb09a6]
2025-06-04T15:28:48.844Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T15:28:48.845Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T15:28:48.848Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:28:48.851Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:28:48.857Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=2, leaderEpoch=null, metadata=''}}
2025-06-04T15:28:48.857Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=2, leaderEpoch=null, metadata=''}}
2025-06-04T15:28:50.633Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:28:50.634Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:28:50.636Z  INFO 1 --- [demo] [http-nio-8080-exec-4] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:28:50.638Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:28:50.645Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:28:50.646Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:28:50.798Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:28:50.800Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:28:50.805Z  INFO 1 --- [demo] [http-nio-8080-exec-4] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T15:00 успешно сформирован
2025-06-04T15:28:50.806Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:28:50.807Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=3, cityId=1, temperature=21.348, date=2025-06-04 15:00:00.0, windSpeed=3.639]]
2025-06-04T15:28:50.809Z DEBUG 1 --- [demo] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T15:28:50.815Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:28:50.817Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:28:50.801744100Z"}, headers={kafka_offset=2, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@2501eb10, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749050930801, kafka_groupId=weather-stats-group}]]
2025-06-04T15:28:50.819Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:28:50.801744100Z"}
2025-06-04T15:28:50.825Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 1
2025-06-04T15:28:50.827Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1206255357 wrapping org.postgresql.jdbc.PgConnection@bcb09a6] read-only
2025-06-04T15:28:50.832Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1206255357 wrapping org.postgresql.jdbc.PgConnection@bcb09a6]
2025-06-04T15:28:50.833Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T15:28:50.834Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T15:28:50.837Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:28:50.838Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:28:50.843Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=3, leaderEpoch=null, metadata=''}}
2025-06-04T15:28:50.844Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=3, leaderEpoch=null, metadata=''}}
2025-06-04T15:28:52.234Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:28:52.235Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:28:52.236Z  INFO 1 --- [demo] [http-nio-8080-exec-5] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:28:52.237Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:28:52.243Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:28:52.244Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:28:52.386Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:28:52.387Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:28:52.392Z  INFO 1 --- [demo] [http-nio-8080-exec-5] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T15:00 успешно сформирован
2025-06-04T15:28:52.392Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:28:52.393Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:28:52.393Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:28:52.388780600Z"}, headers={kafka_offset=3, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@2501eb10, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749050932388, kafka_groupId=weather-stats-group}]]
2025-06-04T15:28:52.393Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=4, cityId=1, temperature=21.348, date=2025-06-04 15:00:00.0, windSpeed=3.639]]
2025-06-04T15:28:52.394Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:28:52.388780600Z"}
2025-06-04T15:28:52.395Z DEBUG 1 --- [demo] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T15:28:52.399Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 1
2025-06-04T15:28:52.400Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@782678811 wrapping org.postgresql.jdbc.PgConnection@bcb09a6] read-only
2025-06-04T15:28:52.403Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@782678811 wrapping org.postgresql.jdbc.PgConnection@bcb09a6]
2025-06-04T15:28:52.404Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T15:28:52.404Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T15:28:52.407Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:28:52.409Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:28:52.413Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=4, leaderEpoch=null, metadata=''}}
2025-06-04T15:28:52.414Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=4, leaderEpoch=null, metadata=''}}
2025-06-04T15:28:57.417Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:28:57.418Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:29:02.421Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:29:02.422Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:29:07.425Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:29:07.427Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:29:12.429Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:29:12.430Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:29:17.432Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:29:17.433Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:29:22.434Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:29:22.436Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:29:27.438Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:29:27.439Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:29:32.442Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:29:32.443Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:29:37.444Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:29:37.445Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:29:42.447Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:29:42.448Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:29:47.450Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:29:47.452Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:29:52.453Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:29:52.454Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:29:57.457Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:29:57.459Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:30:02.461Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:30:02.463Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:30:07.464Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:30:07.465Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:30:12.469Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:30:12.470Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:30:17.473Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:30:17.474Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:30:22.476Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:30:22.478Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:30:27.480Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:30:27.481Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:30:32.482Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:30:32.483Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:30:37.485Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:30:37.487Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:30:42.487Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:30:42.489Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:30:47.491Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:30:47.492Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:30:52.494Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:30:52.495Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:30:57.497Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:30:57.499Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:31:02.501Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:31:02.502Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:31:07.504Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:31:07.505Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:31:12.508Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:31:12.509Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:31:17.511Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:31:17.513Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:31:22.515Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:31:22.516Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:31:27.519Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:31:27.520Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:31:32.521Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:31:32.522Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:31:37.524Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:31:37.525Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:31:42.526Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:31:42.527Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:31:47.528Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:31:47.530Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:31:52.532Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:31:52.533Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:31:57.535Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:31:57.540Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:32:02.542Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:32:02.543Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:32:07.545Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:32:07.546Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:32:12.549Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:32:12.551Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:32:17.553Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:32:17.555Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:32:22.556Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:32:22.557Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:32:27.560Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:32:27.561Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:32:32.562Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:32:32.563Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:32:37.565Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:32:37.567Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:32:42.570Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:32:42.571Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:32:47.574Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:32:47.576Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:32:52.580Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:32:52.581Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:32:57.584Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:32:57.585Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:33:02.588Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:33:02.589Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:33:07.592Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:33:07.593Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:33:12.596Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:33:12.597Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:33:17.600Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:33:17.601Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:33:22.603Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:33:22.604Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:33:27.607Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:33:27.608Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:33:32.611Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:33:32.612Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:33:37.615Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:33:37.616Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:33:37.834Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:33:37.835Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T15:33:37.836Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T15:33:37.838Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:33:37.839Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-58206b4e-4c91-42c7-b0ca-448b59137920 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T15:33:37.840Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:33:37.840Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:33:37.841Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T15:33:37.843Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:33:37.844Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:33:38.188Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:33:38.189Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:33:38.190Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:33:38.190Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:33:38.196Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T15:33:38.197Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T15:33:38.199Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T15:33:38.202Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T15:33:38.204Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T15:33:38.239Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T15:33:38.244Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:33:38.246Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:33:38.246Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:33:38.247Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:33:38.249Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T15:35:22.680Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T15:35:22.684Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T15:35:22.685Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T15:35:23.452Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:35:23.455Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T15:35:23.486Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:35:23.489Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:35:23.491Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:35:23.492Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31 ms. Found 0 JDBC repository interfaces.
2025-06-04T15:35:23.505Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:35:23.507Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T15:35:23.608Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 96 ms. Found 3 JPA repository interfaces.
2025-06-04T15:35:23.629Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:35:23.632Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T15:35:23.643Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:35:23.645Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:35:23.646Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:35:23.646Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-06-04T15:35:24.222Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T15:35:24.238Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T15:35:24.240Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T15:35:24.328Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T15:35:24.330Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1600 ms
2025-06-04T15:35:24.450Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T15:35:24.650Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3b152928
2025-06-04T15:35:24.653Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T15:35:24.725Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T15:35:24.727Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T15:35:24.727Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T15:35:24.732Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T15:35:24.733Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:35:24.733Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T15:35:24.733Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T15:35:24.734Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:35:24.735Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T15:35:24.738Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T15:35:24.740Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T15:35:24.740Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:35:24.741Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T15:35:24.744Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:35:24.746Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T15:35:24.749Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:35:24.756Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T15:35:24.758Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T15:35:24.758Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T15:35:24.760Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T15:35:24.762Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T15:35:24.768Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T15:35:24.771Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T15:35:24.773Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:35:24.782Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T15:35:24.787Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:35:24.796Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:35:24.798Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:35:24.798Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:35:24.800Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:35:24.801Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:35:24.801Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:35:24.815Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.030s)
2025-06-04T15:35:24.819Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T15:35:24.829Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T15:35:24.834Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T15:35:24.838Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 44 of 67M
2025-06-04T15:35:24.920Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T15:35:24.978Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T15:35:25.015Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T15:35:25.306Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T15:35:26.249Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T15:35:26.302Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:35:26.523Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T15:35:27.232Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T15:35:27.237Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", contentTypeConverter="", beanRef="__listener", containerFactory="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T15:35:27.764Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T15:35:27.864Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T15:35:27.921Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T15:35:27.974Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T15:35:28.017Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T15:35:28.071Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T15:35:28.299Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T15:35:28.594Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T15:35:28.679Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T15:35:28.769Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:35:29.000Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:35:29.003Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:35:29.004Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:35:29.005Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749051329001
2025-06-04T15:35:29.010Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T15:35:29.021Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:35:29.034Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 6.88 seconds (process running for 7.309)
2025-06-04T15:35:29.342Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.9c0f625e-79a1-4907-a55c-d843104d3be2
2025-06-04T15:35:29.346Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T15:35:29.350Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:35:29.366Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-fe695076-d7a4-4b7c-ac91-1c6268ad79aa
2025-06-04T15:35:29.368Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:35:29.370Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-weather-stats-group-1-fe695076-d7a4-4b7c-ac91-1c6268ad79aa', protocol='range'}
2025-06-04T15:35:29.377Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 3: {consumer-weather-stats-group-1-fe695076-d7a4-4b7c-ac91-1c6268ad79aa=Assignment(partitions=[weather-requests-0])}
2025-06-04T15:35:29.382Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-weather-stats-group-1-fe695076-d7a4-4b7c-ac91-1c6268ad79aa', protocol='range'}
2025-06-04T15:35:29.383Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T15:35:29.386Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T15:35:29.396Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T15:35:29.399Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T15:35:33.724Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T15:35:33.725Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T15:35:33.725Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T15:35:33.727Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T15:35:33.727Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T15:35:33.730Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@8b1170f
2025-06-04T15:35:33.731Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@1842dc39
2025-06-04T15:35:33.731Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T15:35:33.732Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2025-06-04T15:35:33.743Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:35:33.760Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:35:33.794Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:35:33.796Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:35:34.024Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:35:34.026Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:35:34.477Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:35:34.491Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:35:35.411Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:35:35.414Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:35:35.467Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T15:35:35.469Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:35:35.480Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T15:35:35.503Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:35:35.505Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:35:35.506Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:35:35.507Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749051335504
2025-06-04T15:35:35.508Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.9c0f625e-79a1-4907-a55c-d843104d3be2
2025-06-04T15:35:35.508Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@52a5bac]
2025-06-04T15:35:35.511Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 1001 with epoch 0
2025-06-04T15:35:35.552Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:35:35.558Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:35:35.443928600Z"}, headers={kafka_offset=4, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@24804f76, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749051335517, kafka_groupId=weather-stats-group}]]
2025-06-04T15:35:35.562Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:35:35.443928600Z"}
2025-06-04T15:35:35.582Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Прогноз для города Киров на 2025-06-04T15:00 успешно сформирован
2025-06-04T15:35:35.603Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:35:35.614Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 1
2025-06-04T15:35:35.616Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [ForecastDto[id=5, cityId=1, temperature=21.348, date=2025-06-04 15:00:00.0, windSpeed=3.639]]
2025-06-04T15:35:35.619Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@1243028998 wrapping org.postgresql.jdbc.PgConnection@4162f141] read-only
2025-06-04T15:35:35.632Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-04T15:35:35.637Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@1243028998 wrapping org.postgresql.jdbc.PgConnection@4162f141]
2025-06-04T15:35:35.639Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T15:35:35.641Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 1
2025-06-04T15:35:35.641Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : 1
2025-06-04T15:35:35.643Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T15:35:35.652Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:35:35.660Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:56) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:35:35.672Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=5, leaderEpoch=null, metadata=''}}
2025-06-04T15:35:35.675Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=5, leaderEpoch=null, metadata=''}}
2025-06-04T15:35:40.685Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:35:40.686Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:35:45.686Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:35:45.688Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:35:50.689Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:35:50.690Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:35:55.692Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:35:55.693Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:36:00.695Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:36:00.697Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:36:05.699Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:36:05.700Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:36:10.702Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:36:10.703Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:36:15.705Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:36:15.706Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:36:20.707Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:36:20.708Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:36:21.673Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:36:21.674Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T15:36:21.675Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T15:36:21.675Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:36:21.676Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-fe695076-d7a4-4b7c-ac91-1c6268ad79aa sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T15:36:21.677Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:36:21.678Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:36:21.678Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T15:36:21.680Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:36:21.681Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:36:22.005Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node 2147483647 disconnected.
2025-06-04T15:36:22.005Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=demo-producer-1] Node 0 disconnected.
2025-06-04T15:36:22.009Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=demo-producer-1] Node -1 disconnected.
2025-06-04T15:36:22.009Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node 0 disconnected.
2025-06-04T15:36:22.010Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cancelled in-flight FETCH request with correlation id 132 due to node 0 being disconnected (elapsed time since creation: 387ms, elapsed time since send: 387ms, throttle time: 0ms, request timeout: 30000ms)
2025-06-04T15:36:22.011Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cancelled in-flight FETCH request with correlation id 134 due to node 0 being disconnected (elapsed time since creation: 327ms, elapsed time since send: 328ms, throttle time: 0ms, request timeout: 30000ms)
2025-06-04T15:36:22.011Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cancelled in-flight METADATA request with correlation id 135 due to node 0 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-06-04T15:36:22.012Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node -1 disconnected.
2025-06-04T15:36:22.013Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Error sending fetch request (sessionId=2, epoch=FINAL) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2025-06-04T15:36:22.016Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:36:22.017Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:36:22.017Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:36:22.018Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:36:22.023Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T15:36:22.025Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T15:36:22.029Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T15:36:22.031Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T15:36:22.035Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T15:36:22.062Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T15:36:22.067Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:36:22.069Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:36:22.070Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:36:22.070Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:36:22.073Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T15:36:22.081Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:36:22.084Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T15:36:22.089Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T15:40:52.945Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T15:40:52.949Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T15:40:52.952Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T15:40:54.132Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:40:54.136Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T15:40:54.183Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:40:54.188Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:40:54.192Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:40:54.194Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
2025-06-04T15:40:54.213Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:40:54.217Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T15:40:54.398Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 171 ms. Found 3 JPA repository interfaces.
2025-06-04T15:40:54.427Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:40:54.430Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T15:40:54.449Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:40:54.451Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:40:54.454Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:40:54.457Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-06-04T15:40:55.461Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T15:40:55.484Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T15:40:55.487Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T15:40:55.628Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T15:40:55.630Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2612 ms
2025-06-04T15:40:55.836Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T15:40:56.152Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@bcb09a6
2025-06-04T15:40:56.157Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T15:40:56.299Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T15:40:56.300Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T15:40:56.301Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T15:40:56.307Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T15:40:56.309Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:40:56.309Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T15:40:56.310Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T15:40:56.311Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:40:56.312Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T15:40:56.318Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T15:40:56.319Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T15:40:56.320Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:40:56.321Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T15:40:56.328Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:40:56.330Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T15:40:56.332Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:40:56.346Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T15:40:56.347Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T15:40:56.349Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T15:40:56.352Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T15:40:56.354Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T15:40:56.364Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T15:40:56.368Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T15:40:56.369Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:40:56.387Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T15:40:56.394Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:40:56.408Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:40:56.409Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:40:56.410Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:40:56.413Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:40:56.414Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:40:56.415Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:40:56.435Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.045s)
2025-06-04T15:40:56.441Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T15:40:56.454Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T15:40:56.460Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T15:40:56.466Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 26 of 58M
2025-06-04T15:40:56.585Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T15:40:56.693Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T15:40:56.754Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T15:40:57.211Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T15:40:58.667Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T15:40:58.742Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:40:59.043Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T15:40:59.982Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T15:40:59.990Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T15:41:00.701Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T15:41:00.817Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T15:41:00.879Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T15:41:00.943Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T15:41:00.994Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T15:41:01.056Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T15:41:01.257Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T15:41:01.613Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T15:41:01.670Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T15:41:01.732Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:41:01.948Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:41:01.951Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:41:01.952Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:41:01.953Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749051661949
2025-06-04T15:41:01.960Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T15:41:01.974Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:41:01.987Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 9.89 seconds (process running for 10.654)
2025-06-04T15:41:02.337Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.9c0f625e-79a1-4907-a55c-d843104d3be2
2025-06-04T15:41:02.343Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T15:41:02.348Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:41:02.367Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-6652b79d-195a-4b95-86ab-476418e82d53
2025-06-04T15:41:02.369Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:41:02.372Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=5, memberId='consumer-weather-stats-group-1-6652b79d-195a-4b95-86ab-476418e82d53', protocol='range'}
2025-06-04T15:41:02.382Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 5: {consumer-weather-stats-group-1-6652b79d-195a-4b95-86ab-476418e82d53=Assignment(partitions=[weather-requests-0])}
2025-06-04T15:41:02.402Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=5, memberId='consumer-weather-stats-group-1-6652b79d-195a-4b95-86ab-476418e82d53', protocol='range'}
2025-06-04T15:41:02.404Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T15:41:02.409Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T15:41:02.426Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T15:41:02.430Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T15:41:06.981Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:41:06.984Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:41:11.987Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:41:11.989Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:41:16.992Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:41:16.995Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:41:21.998Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:41:22.000Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:41:22.777Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T15:41:22.779Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T15:41:22.780Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T15:41:22.782Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T15:41:22.783Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T15:41:22.786Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@18df26a1
2025-06-04T15:41:22.787Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@220cda54
2025-06-04T15:41:22.788Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T15:41:22.789Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2025-06-04T15:41:22.805Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:41:22.832Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:41:22.883Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:41:22.885Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:41:23.981Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:41:24.000Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:41:25.186Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:41:25.189Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:41:25.283Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T15:41:25.287Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:41:25.310Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T15:41:25.345Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:41:25.352Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:41:25.354Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:41:25.355Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749051685352
2025-06-04T15:41:25.358Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@6c92ed50]
2025-06-04T15:41:25.361Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.9c0f625e-79a1-4907-a55c-d843104d3be2
2025-06-04T15:41:25.367Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 2001 with epoch 0
2025-06-04T15:41:25.415Z ERROR 1 --- [demo] [http-nio-8080-exec-2] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:41:25.429Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:41:25.437Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Failed to complete request: org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:41:25.440Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:41:25.249310700Z"}, headers={kafka_offset=5, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@5ddaff85, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749051685374, kafka_groupId=weather-stats-group}]]
2025-06-04T15:41:25.445Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:41:25.249310700Z"}
2025-06-04T15:41:25.440Z ERROR 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)] with root cause

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherServiceImpl.getForecast(WeatherServiceImpl.java:74) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherServiceImpl$$SpringCGLIB$$0.getForecast(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at com.example.dz_tinkoff.controller.ForecastController.getForecast(ForecastController.java:45) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:41:25.461Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for GET "/error", parameters={}
2025-06-04T15:41:25.464Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-04T15:41:25.489Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:41:25.493Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Wed Jun 04 15:41:25 UTC 2025, status=500, error=Internal Server Error, path=/forecast/%D0 (truncated)...]
2025-06-04T15:41:25.521Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 500
2025-06-04T15:41:25.525Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Id города: 1
2025-06-04T15:41:25.530Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Setting JDBC Connection [HikariProxyConnection@859768471 wrapping org.postgresql.jdbc.PgConnection@bcb09a6] read-only
2025-06-04T15:41:25.537Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.jdbc.datasource.DataSourceUtils      : Resetting read-only flag of JDBC Connection [HikariProxyConnection@859768471 wrapping org.postgresql.jdbc.PgConnection@bcb09a6]
2025-06-04T15:41:25.539Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Увеличили на 1
2025-06-04T15:41:25.541Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Добавили дату
2025-06-04T15:41:25.545Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:41:25.548Z ERROR 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Ошибка при обработке запроса погоды

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(WeatherRequestConsumerServiceImpl.java:54) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.2.5.jar!/:6.2.5]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:78) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:474) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:421) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2865) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2777) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2614) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2503) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2152) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1528) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1466) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1335) ~[spring-kafka-3.3.4.jar!/:3.3.4]
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:41:25.555Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=6, leaderEpoch=null, metadata=''}}
2025-06-04T15:41:25.557Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=6, leaderEpoch=null, metadata=''}}
2025-06-04T15:41:30.567Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:41:30.568Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:41:35.570Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:41:35.571Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:41:40.575Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:41:40.580Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:41:45.588Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:41:45.590Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:41:50.591Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:41:50.593Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:41:55.596Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:41:55.598Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:42:00.600Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:42:00.602Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:42:05.604Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:42:05.607Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:42:10.609Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:42:10.612Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:42:15.615Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:42:15.617Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:42:20.621Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:42:20.623Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:42:25.626Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:42:25.628Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:42:30.630Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:42:30.632Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:42:35.634Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:42:35.636Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:42:40.639Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:42:40.641Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:42:45.643Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:42:45.645Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:42:50.647Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:42:50.649Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:42:55.651Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:42:55.653Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:43:00.655Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:43:00.657Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:43:05.659Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:43:05.662Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:43:10.664Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:43:10.666Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:43:15.670Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:43:15.672Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:43:20.674Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:43:20.676Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:43:25.678Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:43:25.680Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:43:30.682Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:43:30.685Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:43:35.688Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:43:35.690Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:43:40.693Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:43:40.701Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:43:45.705Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:43:45.706Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:43:50.709Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:43:50.710Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:43:55.713Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:43:55.715Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:44:00.718Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:44:00.720Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:44:05.722Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:44:05.725Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:44:10.728Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:44:10.731Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:44:15.734Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:44:15.736Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:44:20.736Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:44:20.738Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:44:25.739Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:44:25.741Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:44:30.743Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:44:30.745Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:44:35.748Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:44:35.750Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:44:40.753Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:44:40.755Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:44:45.757Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:44:45.759Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:44:50.763Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:44:50.764Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:44:55.767Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:44:55.770Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:45:00.773Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:45:00.774Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:45:05.777Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:45:05.779Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:45:10.783Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:45:10.785Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:45:15.786Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:45:15.788Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:45:20.790Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:45:20.792Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:45:25.795Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:45:25.797Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:45:29.993Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:45:29.996Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T15:45:30.000Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T15:45:30.003Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:45:30.005Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-6652b79d-195a-4b95-86ab-476418e82d53 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T15:45:30.007Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:45:30.010Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:45:30.012Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T15:45:30.018Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:45:30.019Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:45:30.404Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:45:30.405Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:45:30.406Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:45:30.407Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:45:30.417Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T15:45:30.419Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T15:45:30.422Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T15:45:30.431Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T15:45:30.436Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T15:45:30.479Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T15:45:30.487Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:45:30.488Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:45:30.490Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:45:30.491Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:45:30.493Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T15:45:30.509Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:45:30.515Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T15:45:30.524Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T15:47:33.567Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T15:47:33.570Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T15:47:33.573Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T15:47:34.825Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:47:34.830Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T15:47:34.875Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:47:34.879Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:47:34.883Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:47:34.884Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 44 ms. Found 0 JDBC repository interfaces.
2025-06-04T15:47:34.906Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:47:34.909Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T15:47:35.073Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 157 ms. Found 3 JPA repository interfaces.
2025-06-04T15:47:35.098Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:47:35.102Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T15:47:35.119Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:47:35.121Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:47:35.123Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:47:35.126Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-06-04T15:47:36.049Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T15:47:36.073Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T15:47:36.074Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T15:47:36.200Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T15:47:36.202Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2563 ms
2025-06-04T15:47:36.395Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T15:47:36.717Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@bcb09a6
2025-06-04T15:47:36.721Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T15:47:36.836Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T15:47:36.838Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T15:47:36.839Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T15:47:36.845Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T15:47:36.846Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:47:36.847Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T15:47:36.848Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T15:47:36.849Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:47:36.851Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T15:47:36.855Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T15:47:36.856Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T15:47:36.857Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:47:36.858Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T15:47:36.865Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:47:36.866Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T15:47:36.868Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:47:36.881Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T15:47:36.883Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T15:47:36.884Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T15:47:36.887Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T15:47:36.889Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T15:47:36.898Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T15:47:36.902Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T15:47:36.903Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:47:36.916Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T15:47:36.923Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:47:36.937Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:47:36.938Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:47:36.939Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:47:36.942Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:47:36.943Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:47:36.944Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:47:36.965Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.046s)
2025-06-04T15:47:36.971Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T15:47:36.986Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T15:47:36.994Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T15:47:37.000Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 46 of 65M
2025-06-04T15:47:37.117Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T15:47:37.222Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T15:47:37.276Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T15:47:37.728Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T15:47:39.114Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T15:47:39.195Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:47:39.533Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T15:47:40.517Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T15:47:40.525Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", contentTypeConverter="", containerFactory="", beanRef="__listener", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", idIsGroup=true, containerGroup="", errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T15:47:41.193Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T15:47:41.315Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T15:47:41.377Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T15:47:41.430Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T15:47:41.477Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T15:47:41.570Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T15:47:41.787Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T15:47:42.155Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T15:47:42.210Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T15:47:42.278Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:47:42.519Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:47:42.522Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:47:42.523Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:47:42.525Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749052062520
2025-06-04T15:47:42.531Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T15:47:42.547Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:47:42.560Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 9.916 seconds (process running for 10.672)
2025-06-04T15:47:42.934Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.9c0f625e-79a1-4907-a55c-d843104d3be2
2025-06-04T15:47:42.939Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T15:47:42.944Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:47:42.969Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-46741842-94cf-4be1-8a27-7ad60aaba082
2025-06-04T15:47:42.971Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:47:42.973Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=7, memberId='consumer-weather-stats-group-1-46741842-94cf-4be1-8a27-7ad60aaba082', protocol='range'}
2025-06-04T15:47:42.982Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 7: {consumer-weather-stats-group-1-46741842-94cf-4be1-8a27-7ad60aaba082=Assignment(partitions=[weather-requests-0])}
2025-06-04T15:47:42.994Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=7, memberId='consumer-weather-stats-group-1-46741842-94cf-4be1-8a27-7ad60aaba082', protocol='range'}
2025-06-04T15:47:42.997Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T15:47:43.002Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T15:47:43.013Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T15:47:43.016Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T15:47:47.296Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T15:47:47.297Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T15:47:47.298Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T15:47:47.299Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T15:47:47.300Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T15:47:47.304Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@39109603
2025-06-04T15:47:47.305Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@2c3b0cc8
2025-06-04T15:47:47.307Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T15:47:47.308Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2025-06-04T15:47:47.329Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:47:47.354Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:47:47.412Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:47:47.414Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:47:47.552Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:47:47.555Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:47:48.489Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:47:48.509Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:47:50.119Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:47:50.123Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:47:50.200Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [redpanda:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = demo-producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-06-04T15:47:50.204Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:47:50.238Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Instantiated an idempotent producer.
2025-06-04T15:47:50.306Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.k.clients.producer.ProducerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:47:50.308Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:47:50.309Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:47:50.311Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749052070308
2025-06-04T15:47:50.315Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.k.core.DefaultKafkaProducerFactory   : Created new Producer: CloseSafeProducer [delegate=org.apache.kafka.clients.producer.KafkaProducer@fffb92d]
2025-06-04T15:47:50.317Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=demo-producer-1] Cluster ID: redpanda.9c0f625e-79a1-4907-a55c-d843104d3be2
2025-06-04T15:47:50.323Z  INFO 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=demo-producer-1] ProducerId set to 3001 with epoch 0
2025-06-04T15:47:50.383Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 1 records
2025-06-04T15:47:50.394Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .a.RecordMessagingMessageListenerAdapter : Processing [GenericMessage [payload={"city":"Киров","requestTime":"2025-06-04T15:47:50.163422200Z"}, headers={kafka_offset=6, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@472de290, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=Киров, kafka_receivedTopic=weather-requests, kafka_receivedTimestamp=1749052070330, kafka_groupId=weather-stats-group}]]
2025-06-04T15:47:50.400Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] .d.s.i.WeatherRequestConsumerServiceImpl : Получено сообщение: {"city":"Киров","requestTime":"2025-06-04T15:47:50.163422200Z"}
2025-06-04T15:47:50.403Z ERROR 1 --- [demo] [http-nio-8080-exec-2] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:47:50.424Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Failed to complete request: org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:47:50.427Z ERROR 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)] with root cause

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherServiceImpl.getForecast(WeatherServiceImpl.java:73) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherServiceImpl$$SpringCGLIB$$0.getForecast(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at com.example.dz_tinkoff.controller.ForecastController.getForecast(ForecastController.java:45) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:47:50.448Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for GET "/error", parameters={}
2025-06-04T15:47:50.452Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-04T15:47:50.479Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:47:50.483Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Wed Jun 04 15:47:50 UTC 2025, status=500, error=Internal Server Error, path=/forecast/%D0 (truncated)...]
2025-06-04T15:47:50.509Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 500
2025-06-04T15:47:50.693Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {weather-requests-0=OffsetAndMetadata{offset=7, leaderEpoch=null, metadata=''}}
2025-06-04T15:47:50.695Z  WARN 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.clients.producer.internals.Sender  : [Producer clientId=demo-producer-1] Got error produce response with correlation id 8 on topic-partition popular-city-stats-0, retrying (2147483646 attempts left). Error: NOT_LEADER_OR_FOLLOWER
2025-06-04T15:47:50.696Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Committing: {weather-requests-0=OffsetAndMetadata{offset=7, leaderEpoch=null, metadata=''}}
2025-06-04T15:47:50.698Z  WARN 1 --- [demo] [kafka-producer-network-thread | demo-producer-1] o.a.k.clients.producer.internals.Sender  : [Producer clientId=demo-producer-1] Received invalid metadata error in produce request on partition popular-city-stats-0 due to org.apache.kafka.common.errors.NotLeaderOrFollowerException: For requests intended only for the leader, this error indicates that the broker is not the current leader. For requests intended for any replica, this error indicates that the broker is not a replica of the topic partition. Going to request metadata update now
2025-06-04T15:47:55.706Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:47:55.709Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:48:00.711Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:48:00.713Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:48:05.716Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:48:05.718Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:48:10.721Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:48:10.723Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:48:15.725Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:48:15.728Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:48:20.732Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:48:20.734Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:48:25.738Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:48:25.740Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:48:30.743Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:48:30.745Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:48:35.748Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:48:35.750Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:48:40.752Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:48:40.754Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:48:45.757Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:48:45.760Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:48:50.763Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:48:50.766Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:48:55.768Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:48:55.770Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:49:00.773Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:49:00.776Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:49:05.778Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:49:05.779Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:49:10.781Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:49:10.782Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:49:15.784Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:49:15.785Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:49:20.787Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:49:20.790Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:49:25.792Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:49:25.797Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:49:30.801Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:49:30.803Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:49:35.805Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:49:35.807Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:49:40.809Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:49:40.810Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:49:45.814Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:49:45.816Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:49:50.818Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:49:50.820Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:49:55.822Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:49:55.824Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:50:00.827Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:50:00.829Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:50:05.831Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:50:05.833Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:50:10.835Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:50:10.838Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:50:15.840Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:50:15.857Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:50:20.865Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:50:20.870Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:50:25.872Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:50:25.873Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:50:30.876Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:50:30.878Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:50:35.880Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:50:35.882Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:50:40.885Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:50:40.887Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:50:45.889Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:50:45.891Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:50:50.899Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:50:50.901Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:50:55.903Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:50:55.905Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:51:00.908Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:51:00.910Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:51:05.912Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:51:05.915Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:51:10.917Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:51:10.920Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:51:15.922Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:51:15.924Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:51:20.927Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:51:20.930Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:51:25.934Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:51:25.936Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:51:30.938Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:51:30.941Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:51:35.943Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:51:35.944Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:51:40.948Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:51:40.949Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:51:45.951Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:51:45.953Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:51:50.956Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:51:50.958Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:51:55.960Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:51:55.963Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:52:00.965Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:52:00.968Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:52:05.970Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:52:05.973Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:52:10.975Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:52:10.978Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:52:15.980Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:52:15.983Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:52:20.987Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:52:20.990Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:52:25.993Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:52:25.995Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:52:30.997Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:52:31.003Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:52:36.006Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:52:36.009Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:52:41.011Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:52:41.013Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:52:46.017Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:52:46.019Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:52:51.021Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:52:51.023Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:52:56.025Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:52:56.033Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:53:01.037Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:53:01.038Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:53:06.040Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:53:06.042Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:53:11.045Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:53:11.047Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:53:14.279Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:53:14.282Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T15:53:14.287Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T15:53:14.289Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:53:14.292Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-46741842-94cf-4be1-8a27-7ad60aaba082 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T15:53:14.295Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:53:14.296Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:53:14.298Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T15:53:14.303Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:53:14.305Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:53:14.351Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:53:14.352Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:53:14.354Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:53:14.356Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:53:14.368Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T15:53:14.371Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T15:53:14.375Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T15:53:14.378Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T15:53:14.383Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T15:53:14.428Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=demo-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-06-04T15:53:14.437Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:53:14.439Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:53:14.440Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:53:14.441Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:53:14.443Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.a.kafka.common.utils.AppInfoParser     : App info kafka.producer for demo-producer-1 unregistered
2025-06-04T15:53:14.463Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:53:14.469Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T15:53:14.481Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-04T15:55:15.453Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Starting WeatherApplication v0.0.1-SNAPSHOT using Java 21.0.7 with PID 1 (/app/app.jar started by root in /app)
2025-06-04T15:55:15.457Z DEBUG 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-04T15:55:15.459Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : No active profile set, falling back to 1 default profile: "default"
2025-06-04T15:55:16.683Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:55:16.687Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-04T15:55:16.739Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:55:16.743Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:55:16.746Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-04T15:55:16.748Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 50 ms. Found 0 JDBC repository interfaces.
2025-06-04T15:55:16.768Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:55:16.774Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-04T15:55:16.943Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 159 ms. Found 3 JPA repository interfaces.
2025-06-04T15:55:16.970Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-04T15:55:16.974Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-04T15:55:16.992Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.CityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:55:16.994Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.ForecastRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:55:16.996Z  INFO 1 --- [demo] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.dz_tinkoff.repository.RequestCounterRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-04T15:55:16.997Z  INFO 1 --- [demo] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-06-04T15:55:17.972Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-04T15:55:17.994Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-04T15:55:17.996Z  INFO 1 --- [demo] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-04T15:55:18.126Z  INFO 1 --- [demo] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-04T15:55:18.127Z  INFO 1 --- [demo] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2605 ms
2025-06-04T15:55:18.323Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-04T15:55:18.670Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1813f3e9
2025-06-04T15:55:18.683Z  INFO 1 --- [demo] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-04T15:55:18.796Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.22.3 by Redgate
2025-06-04T15:55:18.798Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2025-06-04T15:55:18.799Z  INFO 1 --- [demo] [main] o.f.c.internal.license.VersionPrinter    : 
2025-06-04T15:55:18.806Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2025-06-04T15:55:18.807Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:55:18.808Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2025-06-04T15:55:18.809Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2025-06-04T15:55:18.810Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader org.springframework.boot.loader.LaunchedURLClassLoader@76fb509a ...
2025-06-04T15:55:18.811Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: jar:file:/app/app.jar!/BOOT-INF/classes!/db/migration
2025-06-04T15:55:18.816Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/
2025-06-04T15:55:18.817Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1__Create_initial_tables.sql
2025-06-04T15:55:18.818Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:55:18.820Z DEBUG 1 --- [demo] [main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2025-06-04T15:55:18.826Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:55:18.827Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V1__Create_initial_tables.sql
2025-06-04T15:55:18.830Z DEBUG 1 --- [demo] [main] o.f.c.i.resource.ResourceNameValidator   : Validating V2__Add_coordinates_and_wind_speed.sql
2025-06-04T15:55:18.841Z  INFO 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Database: jdbc:postgresql://postgres:5432/weather_db (PostgreSQL 16.9)
2025-06-04T15:55:18.842Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Driver: PostgreSQL JDBC Driver 42.6.0
2025-06-04T15:55:18.844Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2025-06-04T15:55:18.846Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2025-06-04T15:55:18.848Z DEBUG 1 --- [demo] [main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2025-06-04T15:55:18.858Z  WARN 1 --- [demo] [main] o.f.c.internal.database.base.Database    : Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-06-04T15:55:18.861Z DEBUG 1 --- [demo] [main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2025-06-04T15:55:18.862Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:55:18.875Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2025-06-04T15:55:18.882Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:55:18.896Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:55:18.897Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:55:18.899Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:55:18.901Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/ (filename: )
2025-06-04T15:55:18.903Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1__Create_initial_tables.sql (filename: V1__Create_initial_tables.sql)
2025-06-04T15:55:18.904Z DEBUG 1 --- [demo] [main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V2__Add_coordinates_and_wind_speed.sql (filename: V2__Add_coordinates_and_wind_speed.sql)
2025-06-04T15:55:18.924Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbValidate     : Successfully validated 2 migrations (execution time 00:00.047s)
2025-06-04T15:55:18.931Z DEBUG 1 --- [demo] [main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2025-06-04T15:55:18.945Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": 2
2025-06-04T15:55:18.951Z  INFO 1 --- [demo] [main] o.f.core.internal.command.DbMigrate      : Schema "public" is up to date. No migration necessary.
2025-06-04T15:55:18.958Z DEBUG 1 --- [demo] [main] org.flywaydb.core.FlywayExecutor         : Memory usage: 49 of 64M
2025-06-04T15:55:19.080Z  INFO 1 --- [demo] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-04T15:55:19.189Z  INFO 1 --- [demo] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2025-06-04T15:55:19.247Z  INFO 1 --- [demo] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-04T15:55:19.729Z  INFO 1 --- [demo] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-04T15:55:21.201Z  INFO 1 --- [demo] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-04T15:55:21.291Z  INFO 1 --- [demo] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:55:21.625Z  INFO 1 --- [demo] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-04T15:55:22.592Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : No retry topic configuration found for topics [weather-requests]
2025-06-04T15:55:22.598Z DEBUG 1 --- [demo] [main] KafkaListenerAnnotationBeanPostProcessor : 1 @KafkaListener methods processed on bean 'weatherRequestConsumerServiceImpl': {public void com.example.dz_tinkoff.service.impl.WeatherRequestConsumerServiceImpl.consumeWeatherRequest(java.lang.String)=[@org.springframework.kafka.annotation.KafkaListener(topicPattern="", containerFactory="", beanRef="__listener", contentTypeConverter="", topics={"weather-requests"}, groupId="", batch="", topicPartitions={}, clientIdPrefix="", splitIterables=true, concurrency="", autoStartup="", filter="", containerGroup="", idIsGroup=true, errorHandler="", id="", containerPostProcessor="", properties={}, info="")]}
2025-06-04T15:55:23.327Z  WARN 1 --- [demo] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-04T15:55:23.459Z  INFO 1 --- [demo] [main] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-04T15:55:23.540Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 8 mappings in 'requestMappingHandlerMapping'
2025-06-04T15:55:23.599Z DEBUG 1 --- [demo] [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-04T15:55:23.651Z DEBUG 1 --- [demo] [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-04T15:55:23.710Z DEBUG 1 --- [demo] [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-04T15:55:23.937Z DEBUG 1 --- [demo] [main] o.s.jdbc.datasource.DataSourceUtils      : Fetching JDBC Connection from DataSource
2025-06-04T15:55:24.324Z  INFO 1 --- [demo] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-04T15:55:24.375Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [redpanda:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-weather-stats-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = weather-stats-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-06-04T15:55:24.457Z  INFO 1 --- [demo] [main] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-06-04T15:55:24.714Z  INFO 1 --- [demo] [main] o.a.k.clients.consumer.ConsumerConfig    : These configurations '[topic.popular-city, topic.peak-hour, topic.weather-requests]' were supplied but are not used yet.
2025-06-04T15:55:24.718Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-06-04T15:55:24.719Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-06-04T15:55:24.719Z  INFO 1 --- [demo] [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1749052524716
2025-06-04T15:55:24.726Z  INFO 1 --- [demo] [main] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Subscribed to topic(s): weather-requests
2025-06-04T15:55:24.738Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:55:24.752Z  INFO 1 --- [demo] [main] c.example.dz_tinkoff.WeatherApplication  : Started WeatherApplication in 10.151 seconds (process running for 10.89)
2025-06-04T15:55:25.147Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cluster ID: redpanda.9c0f625e-79a1-4907-a55c-d843104d3be2
2025-06-04T15:55:25.152Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Discovered group coordinator redpanda:9092 (id: 2147483647 rack: null)
2025-06-04T15:55:25.157Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:55:25.175Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: need to re-join with the given member-id: consumer-weather-stats-group-1-345aaa1f-ce51-464d-b750-12212cb88676
2025-06-04T15:55:25.176Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] (Re-)joining group
2025-06-04T15:55:25.179Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully joined group with generation Generation{generationId=9, memberId='consumer-weather-stats-group-1-345aaa1f-ce51-464d-b750-12212cb88676', protocol='range'}
2025-06-04T15:55:25.189Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Finished assignment for group at generation 9: {consumer-weather-stats-group-1-345aaa1f-ce51-464d-b750-12212cb88676=Assignment(partitions=[weather-requests-0])}
2025-06-04T15:55:25.196Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Successfully synced group in generation Generation{generationId=9, memberId='consumer-weather-stats-group-1-345aaa1f-ce51-464d-b750-12212cb88676', protocol='range'}
2025-06-04T15:55:25.198Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Notifying assignor about the new Assignment(partitions=[weather-requests-0])
2025-06-04T15:55:25.202Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Adding newly assigned partitions: weather-requests-0
2025-06-04T15:55:25.219Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition weather-requests-0 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[redpanda:9092 (id: 0 rack: null)], epoch=absent}}
2025-06-04T15:55:25.223Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions assigned: [weather-requests-0]
2025-06-04T15:55:29.743Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:55:29.746Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:55:34.749Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:55:34.751Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:55:39.753Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:55:39.755Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:55:39.962Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-04T15:55:39.964Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-04T15:55:39.966Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-04T15:55:39.967Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-04T15:55:39.969Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-04T15:55:39.973Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1ee6434
2025-06-04T15:55:39.974Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@5c459194
2025-06-04T15:55:39.976Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-04T15:55:39.976Z  INFO 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2025-06-04T15:55:39.994Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/forecast/%D0%9A%D0%B8%D1%80%D0%BE%D0%B2", parameters={}
2025-06-04T15:55:40.022Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.example.dz_tinkoff.controller.ForecastController#getForecast(String, String)
2025-06-04T15:55:40.081Z  INFO 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Получен запрос прогноза для города: Киров
2025-06-04T15:55:40.083Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] c.e.d.controller.ForecastController      : Округлённое время: 2025-06-04T15:00
2025-06-04T15:55:41.156Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : HTTP GET https://projecteol.ru/api/weather/?lat=49.668023&lon=58.603595&date=2025-06-04T15:00&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ4Nzc4NTk2LCJpYXQiOjE3NDg3NzgyOTYsImp0aSI6IjcxM2IzZTNkMjg1OTQxODc4MzdhMjA3MGQ4YTMzNjk1IiwidXNlcl9pZCI6MTA3Nn0.RoYDvRQ42dApj4yjanTqMEO-qYIBlszkNkVSjWiPNDE
2025-06-04T15:55:41.177Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Accept=[application/json, application/yaml, application/*+json]
2025-06-04T15:55:42.390Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-04T15:55:42.394Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.client.RestTemplate              : Reading to [com.example.dz_tinkoff.dto.WeatherApiResponseDto[]]
2025-06-04T15:55:42.484Z ERROR 1 --- [demo] [http-nio-8080-exec-2] org.hibernate.AssertionFailure           : HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:55:42.503Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Failed to complete request: org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
2025-06-04T15:55:42.505Z ERROR 1 --- [demo] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)] with root cause

org.hibernate.AssertionFailure: null identifier (com.example.dz_tinkoff.entity.RequestCounterEntity)
	at org.hibernate.engine.spi.EntityKey.<init>(EntityKey.java:52) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.generateEntityKey(AbstractSharedSessionContract.java:669) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.OneToOneType.isNull(OneToOneType.java:75) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.resolve(EntityType.java:415) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.EntityType.replace(EntityType.java:340) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.AbstractType.replace(AbstractType.java:125) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.type.TypeHelper.replace(TypeHelper.java:154) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.copyValues(DefaultMergeEventListener.java:623) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:297) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:419) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836) ~[hibernate-core-6.5.2.Final.jar!/:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy137.merge(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.4.jar!/:3.4.4]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at jdk.proxy2/jdk.proxy2.$Proxy145.save(Unknown Source) ~[na:na]
	at com.example.dz_tinkoff.service.impl.WeatherServiceImpl.getForecast(WeatherServiceImpl.java:62) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727) ~[spring-aop-6.2.5.jar!/:6.2.5]
	at com.example.dz_tinkoff.service.impl.WeatherServiceImpl$$SpringCGLIB$$0.getForecast(<generated>) ~[classes!/:0.0.1-SNAPSHOT]
	at com.example.dz_tinkoff.controller.ForecastController.getForecast(ForecastController.java:45) ~[classes!/:0.0.1-SNAPSHOT]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.5.jar!/:6.2.5]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.5.jar!/:6.2.5]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.39.jar!/:na]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-04T15:55:42.528Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for GET "/error", parameters={}
2025-06-04T15:55:42.532Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-06-04T15:55:42.560Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-04T15:55:42.565Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Wed Jun 04 15:55:42 UTC 2025, status=500, error=Internal Server Error, path=/forecast/%D0 (truncated)...]
2025-06-04T15:55:42.606Z DEBUG 1 --- [demo] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 500
2025-06-04T15:55:44.759Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:55:44.761Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:55:49.763Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:55:49.766Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:55:54.770Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:55:54.774Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:55:59.777Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Received: 0 records
2025-06-04T15:55:59.780Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:56:00.332Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:56:00.335Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Revoke previously assigned partitions weather-requests-0
2025-06-04T15:56:00.338Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: partitions revoked: [weather-requests-0]
2025-06-04T15:56:00.339Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : Commit list: {}
2025-06-04T15:56:00.340Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Member consumer-weather-stats-group-1-345aaa1f-ce51-464d-b750-12212cb88676 sending LeaveGroup request to coordinator redpanda:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-06-04T15:56:00.343Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:56:00.344Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:56:00.344Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Unsubscribed all topics or patterns and assigned partitions
2025-06-04T15:56:00.348Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-06-04T15:56:00.349Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Request joining group due to: consumer pro-actively leaving the group
2025-06-04T15:56:00.734Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node 2147483647 disconnected.
2025-06-04T15:56:00.744Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node 0 disconnected.
2025-06-04T15:56:00.746Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cancelled in-flight FETCH request with correlation id 90 due to node 0 being disconnected (elapsed time since creation: 499ms, elapsed time since send: 499ms, throttle time: 0ms, request timeout: 30000ms)
2025-06-04T15:56:00.748Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cancelled in-flight FETCH request with correlation id 92 due to node 0 being disconnected (elapsed time since creation: 390ms, elapsed time since send: 393ms, throttle time: 0ms, request timeout: 30000ms)
2025-06-04T15:56:00.750Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Cancelled in-flight METADATA request with correlation id 93 due to node 0 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, throttle time: 0ms, request timeout: 30000ms)
2025-06-04T15:56:00.751Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Node -1 disconnected.
2025-06-04T15:56:00.753Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-weather-stats-group-1, groupId=weather-stats-group] Error sending fetch request (sessionId=2, epoch=FINAL) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2025-06-04T15:56:00.759Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-06-04T15:56:00.761Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-06-04T15:56:00.762Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-06-04T15:56:00.763Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-06-04T15:56:00.775Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-weather-stats-group-1 unregistered
2025-06-04T15:56:00.787Z  INFO 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : weather-stats-group: Consumer stopped
2025-06-04T15:56:00.792Z DEBUG 1 --- [demo] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : KafkaMessageListenerContainer [id=org.springframework.kafka.KafkaListenerEndpointContainer#0-0, clientIndex=-0, topicPartitions=[]] stopped normally
2025-06-04T15:56:00.795Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-04T15:56:00.800Z  INFO 1 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-04T15:56:00.855Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-04T15:56:00.860Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-04T15:56:00.865Z  INFO 1 --- [demo] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
